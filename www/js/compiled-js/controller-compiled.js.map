{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 18/11/2018.\r\n */\r\n\r\n/**\r\n* file defines all View-Models, Controllers and Event Listeners used by the app\r\n*\r\n* The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n* The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n* also used interchangeably\r\n*/\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * method contains the startup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            if(true){ // there is a previous logged in user\r\n                // load the app main page\r\n                $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n\r\n            }\r\n            else{ // there is no previously logged in user\r\n                // load the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // create the pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase = new PouchDB('PrintServiceEcommerce.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // create the encrypted pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase =\r\n                    new PouchDB('PrintServiceEcommerceEncrypted.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // generate a password for encrypting the app database (if it does NOT already exist)\r\n                if(!window.localStorage.getItem(\"utopiasoftware-oak-print-service-rid\") ||\r\n                    window.localStorage.getItem(\"utopiasoftware-oak-print-service-rid\") === \"\") {\r\n                    window.localStorage.setItem(\"utopiasoftware-oak-print-service-rid\",\r\n                        Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine));\r\n                }\r\n                // enable the db encryption using the generated password\r\n                await new Promise(function(resolve, reject){\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase.\r\n                    crypto(window.localStorage.getItem(\"utopiasoftware-oak-print-service-rid\"), {\r\n                        ignore: ['_attachments', '_deleted'],\r\n                        cb: function(err, key){\r\n                            if(err){ // there is an error\r\n                                reject(err); // reject Promise\r\n                            }\r\n                            else{ // no error\r\n                                resolve(key); // resolve Promise\r\n                            }\r\n                        }});\r\n                });\r\n\r\n            }\r\n            catch(err){\r\n                console.log(\"APP LOADING ERROR\", err);\r\n            }\r\n            finally{\r\n                // set status bar color\r\n                StatusBar.backgroundColorByHexString(\"#363E7C\");\r\n                navigator.splashscreen.hide(); // hide the splashscreen\r\n                utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // flag that app is fully loaded and ready\r\n                $('#loader-modal').get(0).hide(); // show loader\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Home page\r\n     */\r\n    homePageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                try{\r\n                    new Flickity($('#home-page #home-latest-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        autoPlay: 3000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: true\r\n                    });\r\n\r\n                    new Flickity($('#home-page #home-featured-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        autoPlay: 3100,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: true\r\n                    });\r\n\r\n                    new Flickity($('#home-page #home-sales-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        autoPlay: 3150,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: true\r\n                    });\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Account page\r\n     */\r\n    accountPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                try{\r\n                    new ej.navigations.Accordion({}).appendTo('#account-personal-accordion');\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        }\r\n    }\r\n};"]}