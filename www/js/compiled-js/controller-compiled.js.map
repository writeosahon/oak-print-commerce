{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 18/11/2018.\r\n */\r\n\r\n/**\r\n* file defines all View-Models, Controllers and Event Listeners used by the app\r\n*\r\n* The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n* The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n* also used interchangeably\r\n*/\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * method contains the startup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // disable the default back button handler for the 'search-page-search-input-popover'\r\n            $('#search-page-search-input-popover').get(0).onDeviceBackButton.disable();\r\n\r\n            // set the device back button handler for the 'third-party-login-modal' modal AND the close button\r\n            $('#third-party-login-modal').get(0).onDeviceBackButton =\r\n            $('#third-party-login-modal #third-party-login-modal-close-button').get(0).onclick = async function(){\r\n                // close the modal\r\n                await $('#third-party-login-modal').get(0).hide();\r\n\r\n                // reset the Firebase UI object\r\n                utopiasoftware[utopiasoftware_app_namespace].model.firebaseUI.reset();\r\n            };\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            // create the ej2 bottom toast component for the app\r\n            new ej.notifications.Toast({\r\n                content: '',\r\n                cssClass: 'default-ej2-toast',\r\n                target: document.body,\r\n                position: {X: \"Center\",  Y: \"Bottom\"},\r\n                width: \"100%\",\r\n                timeOut: 0,\r\n                extendedTimeout: 0,\r\n                showCloseButton: true\r\n            }).appendTo($('.page-toast').get(0));\r\n\r\n            // create the ej2 \"timed\" bottom toast component for the app\r\n            new ej.notifications.Toast({\r\n                content: '',\r\n                cssClass: 'default-ej2-toast',\r\n                target: document.body,\r\n                position: {X: \"Center\",  Y: \"Bottom\"},\r\n                width: \"100%\",\r\n                timeOut: 4000, // default 4 sec\r\n                extendedTimeout: 0,\r\n                showCloseButton: true\r\n            }).appendTo($('.timed-page-toast').get(0));\r\n\r\n            // create the \"Yes\" button on the the Delete Cart Item action sheet\r\n            new ej.buttons.Button({\r\n                cssClass: 'e-flat e-small',\r\n                iconPosition: \"Left\"\r\n            }).appendTo('#view-cart-page-delete-cart-item-yes');\r\n\r\n            // create the \"No\" button on the the Delete Cart Item action sheet\r\n            new ej.buttons.Button({\r\n                cssClass: 'e-flat e-small',\r\n                iconPosition: \"Left\"\r\n            }).appendTo('#view-cart-page-delete-cart-item-no');\r\n\r\n            // create the \"Yes\" button on the Cancel Order action sheet\r\n            new ej.buttons.Button({\r\n                cssClass: 'e-flat e-small',\r\n                iconPosition: \"Left\"\r\n            }).appendTo('#cancel-order-yes');\r\n\r\n            // create the \"No\" button on the Cancel Order action sheet\r\n            new ej.buttons.Button({\r\n                cssClass: 'e-flat e-small',\r\n                iconPosition: \"Left\"\r\n            }).appendTo('#cancel-order-no');\r\n\r\n\r\n            //initialise the firebase app.\r\n            utopiasoftware[utopiasoftware_app_namespace].model.firebaseApp =\r\n                firebase.initializeApp({\r\n                    apiKey: \"AIzaSyAx5tpRlU79yPXiNWFhxyNfAbCtuoIddIA\",\r\n                    authDomain: \"oak-exclusive.firebaseapp.com\",\r\n                    databaseURL: \"https://oak-exclusive.firebaseio.com\",\r\n                    projectId: \"oak-exclusive\",\r\n                    storageBucket: \"oak-exclusive.appspot.com\",\r\n                    messagingSenderId: \"492676682141\"\r\n                });\r\n\r\n            // initialise the firebase ui app\r\n            utopiasoftware[utopiasoftware_app_namespace].model.firebaseUI =\r\n            new firebaseui.auth.AuthUI(utopiasoftware[utopiasoftware_app_namespace].model.firebaseApp.auth());\r\n\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                universalLinks.subscribe(null, function (eventData) {console.log(\"UNIVERSAL LINK\", eventData.url);});\r\n\r\n                // create the pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase = new PouchDB('PrintServiceEcommerce.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // create the encrypted pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase =\r\n                    new PouchDB('PrintServiceEcommerceEncrypted.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // generate a password for encrypting the app database (if it does NOT already exist)\r\n                let secureKey = null;\r\n                try {\r\n                    // get secure key, if it exists\r\n                    secureKey = await new Promise(function(resolve, reject){\r\n                        NativeStorage.getItem(\"utopiasoftware-oak-print-service-secure-key\",resolve, reject);\r\n                    });\r\n                }\r\n                catch(err){ // secure key does not exist\r\n                    // create the secure key\r\n                    secureKey = await new Promise(function(resolve, reject){\r\n                        NativeStorage.setItem(\"utopiasoftware-oak-print-service-secure-key\",\r\n                            {password: Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine)},\r\n                            resolve, reject);\r\n                    });\r\n                }\r\n                // enable the db encryption using the generated password\r\n                await new Promise(function(resolve, reject){\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase.\r\n                    crypto(secureKey.password, {\r\n                        ignore: ['_attachments', '_deleted', 'docType'],\r\n                        cb: function(err, key){\r\n                            if(err){ // there is an error\r\n                                reject(err); // reject Promise\r\n                            }\r\n                            else{ // no error\r\n                                resolve(key); // resolve Promise\r\n                            }\r\n                        }});\r\n                });\r\n\r\n                // load/set the initial number of items in the user's cart\r\n                try{\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.cartCount =\r\n                        (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.loadData(\"user-cart\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart.length;\r\n                }\r\n                catch(err){}\r\n\r\n                //register the listener for app database changes\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.appDatabaseChangesListenerViewModel.\r\n                    changesEventEmitter = utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                                                changes({\r\n                    live: true,\r\n                    include_docs: true,\r\n                    since: 'now',\r\n                    doc_ids: ['user-cart']\r\n                }).on(\"change\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    appDatabaseChangesListenerViewModel.userCartChanged);\r\n\r\n            }\r\n            catch(err){\r\n                console.log(\"APP LOADING ERROR\", err);\r\n            }\r\n            finally{\r\n\r\n                // load the initial content of the app\r\n                if(true){ // there is a previous logged in user\r\n                    // load the app main page\r\n                    $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n                }\r\n                else{ // there is no previously logged in user\r\n                    // load the login page\r\n                    $('ons-splitter').get(0).content.load(\"login-template\");\r\n                }\r\n\r\n                // set status bar color\r\n                StatusBar.backgroundColorByHexString(\"#363E7C\");\r\n                navigator.splashscreen.hide(); // hide the splashscreen\r\n                utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // flag that app is fully loaded and ready\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * this view-model is used to house the listeners and data/properties which listen for\r\n     * changes in the app database\r\n     */\r\n    appDatabaseChangesListenerViewModel : {\r\n\r\n        /**\r\n         * property holds the Event Emitter object for the changes taking\r\n         * place in the database. This object can be used to cancel event listening at\r\n         * any time\r\n         */\r\n        changesEventEmitter: null,\r\n\r\n        /**\r\n         * methosd is used to listen for changes to the\r\n         * user-cart document i.e. when the local cached user cart is updated/modified\r\n         *\r\n         * @param changesInfo {Object} holds the object containing the changes made to the user cart\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async userCartChanged(changesInfo){\r\n            if(changesInfo.deleted === true){ // the user local cart was deleted\r\n                // reset the cartCount app model property to zero\r\n                utopiasoftware[utopiasoftware_app_namespace].model.cartCount = 0;\r\n            }\r\n            else{ // the user local cart was modified/updated\r\n                // update the cartCount app model property to indicate the number of items in cart (using the updated cart length)\r\n                utopiasoftware[utopiasoftware_app_namespace].model.cartCount =\r\n                    changesInfo.doc.cart.length;\r\n            }\r\n\r\n            // update the cart count being displayed on all current pages\r\n            $('.cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Home page\r\n     */\r\n    homePageViewModel: {\r\n\r\n        /**\r\n         * object is used as the carousel Flickity object for \"New Products\"/ Banner Ads\r\n         */\r\n        newProductsCarousel: null,\r\n\r\n        /**\r\n         * object is used as the carousel Flickity object for \"Featured / Popular Products\"\r\n         */\r\n        featuredProductsCarousel: null,\r\n\r\n        /**\r\n         * object is used as the carousel Flickity object for \"Sales Products\"\r\n         */\r\n        salesProductsCarousel: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#home-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#home-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#home-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#home-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#home-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n                    // create the \"New Products\" carousel\r\n                    let newProductsCarousel = new Flickity($('#home-page #home-latest-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        // adaptiveHeight: true,\r\n                        imagesLoaded: true,\r\n                        cellSelector: '.col-xs-12',\r\n                        autoPlay: 5000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: false\r\n                    });\r\n                    newProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(newProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(newProductsCarousel._utopiasoftware_scrollTimer);\r\n                            newProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        newProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            newProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    newProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // do nothing\r\n                            return;\r\n                        }\r\n\r\n                    });\r\n                    // assign the \"New Product\" carousel to the appropriate object\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel =\r\n                        newProductsCarousel;\r\n\r\n                    // create the \"Featured Products\" carousel\r\n                    let featuredProductsCarousel = new Flickity($('#home-page #home-featured-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        cellSelector: '.col-xs-7',\r\n                        autoPlay: 4000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'center',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: false\r\n                    });\r\n                    featuredProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(featuredProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(featuredProductsCarousel._utopiasoftware_scrollTimer);\r\n                            featuredProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        featuredProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            featuredProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    featuredProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // do nothing\r\n                            return;\r\n                        }\r\n\r\n                        // call the method to load the product details page based on the product item clicked\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                        productItemClicked(window.parseInt($(cellElement).attr('data-product')),\r\n                            $(cellElement).attr('data-segment'));\r\n                    });\r\n                    // assign the \"Featured Products\" carousel to the appropriate object\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel =\r\n                        featuredProductsCarousel;\r\n\r\n                    let salesProductsCarousel = new Flickity($('#home-page #home-sales-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        cellSelector: '.col-xs-7',\r\n                        autoPlay: 4500,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'center',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: false\r\n                    });\r\n                    salesProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(salesProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(salesProductsCarousel._utopiasoftware_scrollTimer);\r\n                            salesProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        salesProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            salesProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    salesProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // do nothing\r\n                            return;\r\n                        }\r\n                        // call the method to load the product details page based on the product item clicked\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                        productItemClicked(window.parseInt($(cellElement).attr('data-product')),\r\n                            $(cellElement).attr('data-segment'));\r\n                    });\r\n                    // assign the \"Sales Products\" carousel to the appropriate object\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel =\r\n                        salesProductsCarousel;\r\n\r\n                    $('#loader-modal').get(0).hide(); // show loader\r\n\r\n                    // display page preloader\r\n                    $('#home-page .page-preloader').css(\"display\", \"block\");\r\n\r\n                    // start loading the page content\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.loadProducts();\r\n\r\n                    // hide the preloader\r\n                    $('#home-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n                catch(err){\r\n                    console.log(\"HOME PAGE ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update page title\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"OAK\");\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOnlineListener, false);\r\n\r\n\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel){\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.reloadCells();\r\n            }\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel){\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel.reloadCells();\r\n            }\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel){\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel.reloadCells();\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the carousels\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel = null;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            ons.notification.confirm('Do you want to close the app?',\r\n                {title: '<img src=\"css/app-images/oak-design-logo.png\" style=\"height: 1.5em; width: auto; margin-right: 0.5em\">Exit App',\r\n                buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog utopiasoftware-oak-alert-dialog'}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see live products\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#home-page #home-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.loadProducts();\r\n                // hide the preloader\r\n                $('#home-page .page-preloader').css(\"display\", \"none\");\r\n            }\r\n            catch(err){ // an error occurred\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#home-page #home-page-pull-hook').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load all products to the page\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProducts(){\r\n            var productTypesPromisesArray = []; // holds the array for all the promises of the product types to be loaded\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load banner products\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"private\",\r\n                            \"type\": \"external\", \"page\": 1, \"per_page\": 5}\r\n                        }\r\n                    )).then(function(productsArray){\r\n                        // save the retrieved data to app database as cache\r\n                        utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"banner-products\", docType: \"BANNER_PRODUCTS\", products: productsArray},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-latest-design-block').css({\"opacity\": \"1\", \"display\": \"block\"}); // show the \"Products\" segment\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            newProductsCarousel.\r\n                            remove($('#home-page #home-latest-design-block .row .col-xs-12').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-latest-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-12\" style=\"padding-left: 0; padding-right: 0;\">\r\n                                    <div class=\"e-card\" style=\"min-height: 40vh; max-height: 90vh\">\r\n                                        <div class=\"e-card-image\" style=\"\">\r\n                                        <img src=\"${productsArray[index].images[0].src}\" style=\"width: 100%; height: auto; max-height: 90vh\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            newProductsCarousel.append($(columnContent));\r\n                        }\r\n\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load featured products\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 5, \"featured\": true}\r\n                        }\r\n                    )).then(function(productsArray){\r\n\r\n                        // save the retrieved data to app database as cache\r\n                        utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"popular-products\", docType: \"POPULAR_PRODUCTS\", products: productsArray},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.\r\n                            remove($('#home-page #home-featured-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                 data-product=\"${index}\" data-segment=\"featured\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load sales products\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 5, \"on_sale\": true}\r\n                        }\r\n                    )).then(function(productsArray){\r\n\r\n                        // save the retrieved data to app database as cache\r\n                        utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"sales-products\", docType: \"SALES_PRODUCTS\", products: productsArray},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.\r\n                            remove($('#home-page #home-sales-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            if(!productsArray[index].regular_price || productsArray[index].regular_price == \"\"){ // regular price was NOT set, so set it\r\n                                productsArray[index].regular_price = \"0.00\";\r\n                            }\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                    data-product=\"${index}\" data-segment=\"sales\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productsArray[index].price) -\r\n                                    kendo.parseFloat(productsArray[index].regular_price)) /\r\n                                    kendo.parseFloat(productsArray[index].regular_price === \"0.00\" ? \r\n                                         productsArray[index].price : productsArray[index].regular_price)) \r\n                                    * 100)}% OFF\r\n                                                    </span>\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center; text-decoration: line-through\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].regular_price), \"n2\")}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                // display toast to show that there is no internet connection\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.content = \"No Internet connection. Pull down to refresh and see live products\";\r\n                toast.dataBind();\r\n                toast.show();\r\n                // load banner products from cached data\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"banner-products\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        return cachedProductsData.products;\r\n                    }).\r\n                    then(function(productsArray){\r\n                        $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // hide the \"Products\" segment\r\n                        // remove the previously slides from the carousel\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                        newProductsCarousel.\r\n                        remove($('#home-page #home-latest-design-block .row .col-xs-12').get());\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-12\" style=\"padding-left: 0; padding-right: 0;\">\r\n                                    <div class=\"e-card\" style=\"min-height: 40vh; max-height: 90vh\">\r\n                                        <div class=\"e-card-image\" style=\"\">\r\n                                        <img src=\"css/app-images/blank-img.png\" style=\"width: 100%; height: auto; max-height: 90vh\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            newProductsCarousel.append($(columnContent));\r\n                        }\r\n                        // $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // show the \"Products\" segment\r\n                        $('#home-page #home-latest-design-block').css({\"opacity\": \"0\", \"display\": \"none\"}); // hide the segment\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        // $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // show the \"Products\" segment\r\n                        $('#home-page #home-latest-design-block').css({\"opacity\": \"0\", \"display\": \"none\"}); // hide the segment\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load featured products from cached data\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"popular-products\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        return cachedProductsData.products;\r\n                    }).then(function(productsArray){\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.\r\n                            remove($('#home-page #home-featured-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                    data-product=\"${index}\" data-segment=\"featured\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load sales products from cached data\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"sales-products\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        return cachedProductsData.products;\r\n                    }).then(function(productsArray){\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.\r\n                            remove($('#home-page #home-sales-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            if(!productsArray[index].regular_price || productsArray[index].regular_price == \"\"){ // regular price was NOT set, so set it\r\n                                productsArray[index].regular_price = \"0.00\";\r\n                            }\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                  data-product=\"${index}\" data-segment=\"sales\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productsArray[index].price) -\r\n                                    kendo.parseFloat(productsArray[index].regular_price)) /\r\n                                    kendo.parseFloat(productsArray[index].regular_price === \"0.00\" ?\r\n                                        productsArray[index].price : productsArray[index].regular_price))\r\n                                    * 100)}% OFF\r\n                                                    </span>\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center; text-decoration: line-through\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].regular_price), \"n2\")}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n            }\r\n\r\n            return Promise.all(productTypesPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user wishes to view more featured products\r\n         * @returns {Promise<void>}\r\n         */\r\n        async showMoreFeaturedProducts(){\r\n            // load the products page in a separate event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // navigate to the products page\r\n                    await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                    // request for products from the category that was clicked\r\n                    let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20, \"featured\": true});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // hide the preloader for the products page\r\n                    $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user wishes to view more featured products\r\n         * @returns {Promise<void>}\r\n         */\r\n        async showMoreSalesProducts(){\r\n            // load the products page in a separate event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // navigate to the products page\r\n                    await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                    // request for products from the category that was clicked\r\n                    let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20, \"on_sale\": true});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // hide the preloader for the products page\r\n                    $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks any product item from the Feature/Popular OR\r\n         * Sales segments\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the 'appropriate' cached array of product items\r\n         *\r\n         * @param segmentType {String} specifies which segment the clicked product item belongs to.\r\n         * Possible options are: 'featured', 'sales'\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async productItemClicked(productIndex, segmentType){\r\n            // handle the function task in a different event queue\r\n            window.setTimeout(async function(){\r\n                var productItemsArray = []; // holds the array of 'appropriate' product items\r\n\r\n                try{\r\n                    // find out what segment type the clicked product belongs to\r\n                    switch (segmentType) {\r\n                        case \"featured\": // Featured/popular product\r\n                            // get the 'appropriate' product items collection\r\n                            productItemsArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                            loadData(\"popular-products\",\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n                            break;\r\n\r\n                        case \"sales\": // Sales product\r\n                            // get the 'appropriate' product items collection\r\n                            productItemsArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                            loadData(\"sales-products\",\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n                            break;\r\n                    }\r\n\r\n                    // display the products details page using the selected product\r\n                    $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : productItemsArray[productIndex]}});\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Categories page\r\n     */\r\n    categoriesPageViewModel: {\r\n\r\n        /**\r\n         * property holds the current \"page\" of the categories being accessed\r\n         */\r\n        currentPage: 0,\r\n\r\n        /**\r\n         * property holds the size i.e. number of items that can be contained in currentPage being accessed\r\n         */\r\n        pageSize: 100,\r\n\r\n        /**\r\n         * property holds the height of the \"content view\" for the page\r\n         */\r\n        viewContentHeight: 0,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#categories-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#categories-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#categories-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#categories-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#categories-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                // get the height of the view content container\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.viewContentHeight =\r\n                    Math.floor($('#categories-page .page__content').height());\r\n\r\n                // listen for the scroll event on the page\r\n                $('#categories-page .page__content').on(\"scroll\", function(){\r\n                    // handle the logic in a different event queue slot\r\n                    window.setTimeout(function(){\r\n                        // get the scrollTop position of the view content\r\n                        var scrollTop = Math.floor($('#categories-page .page__content').scrollTop());\r\n\r\n                        // get the percentage of scroll that has taken place from the top position\r\n                        var percentageScroll = (scrollTop /  utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                categoriesPageViewModel.viewContentHeight) * 100;\r\n                        if(percentageScroll >= 50){ // if the scroll position is >= halfway\r\n                            $('#categories-page #categories-page-scroll-top-fab').css(\r\n                                {\"transform\": \"scale(1)\",\r\n                                \"display\": \"inline-block\"});\r\n                        }\r\n                        else{ // if the scroll position is < halfway\r\n                            $('#categories-page #categories-page-scroll-top-fab').css({\"transform\": \"scale(0)\"});\r\n                        }\r\n                    }, 0);\r\n                });\r\n\r\n                // listen for when a category card is clicked\r\n                $thisPage.on(\"click\", \".e-card\", function(clickEvent){\r\n                    // load the products page in a separate event queue\r\n                    window.setTimeout(async function(){\r\n                        try{\r\n                            // navigate to the products page\r\n                            await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                            // request for products from the category that was clicked\r\n                            let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                            loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20,\r\n                                \"category\": $(clickEvent.currentTarget).attr(\"data-category-id\")});\r\n                            await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                        }\r\n                        catch(err){\r\n\r\n                            // hide all previously displayed ej2 toast\r\n                            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                            // display toast to show that an error\r\n                            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                            toast.cssClass = 'error-ej2-toast';\r\n                            toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                            toast.dataBind();\r\n                            toast.show();\r\n                        }\r\n                        finally{\r\n                            // hide the preloader for the products page\r\n                            $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                        }\r\n                    }, 0);\r\n                });\r\n\r\n                try{\r\n                    // start loading the page content\r\n                    let categoryArray = await utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.loadCategories();\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.displayPageContent(categoryArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    console.log(\"CATEGORY PAGE ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the preloader\r\n                    $('#categories-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Products\"); // update the title of the page\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n            // hide the page scroll fab\r\n            $('#categories-page #categories-page-scroll-top-fab').css({\"display\": \"none\"});\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // reset view-model properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.currentPage = 0;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.pageSize = 100;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.viewContentHeight = 0;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the \"Home\" page (tab)\r\n            $('#app-main-tabbar').get(0).setActiveTab(0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see updated products\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#categories-page #categories-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // start loading the page content\r\n                let categoryArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                categoriesPageViewModel.loadCategories(1, utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.categoriesPageViewModel.pageSize);\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.displayPageContent(categoryArray[0]);\r\n            }\r\n            catch(err){ // an error occurred\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#categories-page #categories-page-pull-hook').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load products categories to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadCategories(pageToAccess = utopiasoftware[utopiasoftware_app_namespace].\r\n                                            controller.categoriesPageViewModel.currentPage + 1,\r\n                             pageSize = utopiasoftware[utopiasoftware_app_namespace].\r\n                                        controller.categoriesPageViewModel.pageSize){\r\n            var categoryPromisesArray = []; // holds the array for the promises used to load the product categories\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested categories list from the server\r\n                categoryPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products/categories\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"asc\", \"orderby\": \"name\", \"hide_empty\": true,\r\n                                \"page\": pageToAccess, \"per_page\": pageSize}\r\n                        }\r\n                    )).then(function(categoriesArray){\r\n                        // check if there is any data to cache in the app database\r\n                        if(categoriesArray.length > 0){ // there is data to cache\r\n                            // remove the 'uncategorized' category\r\n                            categoriesArray = categoriesArray.filter(function(element){\r\n                                return element.slug !== 'uncategorized';\r\n                            });\r\n                            // generate an id for the data being cached\r\n                            let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"categories\";\r\n                            // save the retrieved data to app database as cached data\r\n                            utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                {_id: cachedDataId, docType: \"PRODUCT_CATEGORIES\", categories: categoriesArray},\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                            // update the current page being viewed\r\n                            utopiasoftware[utopiasoftware_app_namespace].\r\n                                controller.categoriesPageViewModel.currentPage = pageToAccess;\r\n                        }\r\n                        resolve(categoriesArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading product categories with Internet Connection\r\n            else{ // there is no internet connection\r\n                // display toast to show that there is no internet connection\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.content = \"No Internet connection. Pull down to refresh and see updated products\";\r\n                toast.dataBind();\r\n                toast.show();\r\n                // load the requested product categories from cached data\r\n                categoryPromisesArray.push(new Promise(function(resolve, reject){\r\n                    // generate the id for the cached data being retrieved\r\n                    let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"categories\";\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(cachedDataId, utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedCategoriesData){\r\n                        resolve(cachedCategoriesData.categories); // resolve the parent promise with the cached categories data\r\n                    }).\r\n                    catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n            }\r\n\r\n            return Promise.all(categoryPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products categories on the app screen\r\n         *\r\n         * @param categoriesArray\r\n         *\r\n         * @param appendContent {Boolean} if the value is true,\r\n         * add each content to the end of other items on the screen.\r\n         * Else, prepend the content to the top of other items\r\n         *\r\n         * @param overwriteContent {Boolean} should the old content be replaced or added to\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(categoriesArray, appendContent = true, overwriteContent = true){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let categoriesContent = \"\"; // holds the contents for the categories\r\n\r\n                // check if the categoriesArray is empty or not\r\n                if(categoriesArray.length <= 0){ // there are no new content to display\r\n                    resolve(categoriesArray.length); // resolve promise with the length of the categories array\r\n                }\r\n                else{ // there are some categories to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < categoriesArray.length; index++){\r\n                        categoriesContent += `<div class=\"col-xs-4\" `;\r\n                        if((index + 1) % 3 !== 0){ // this is NOT the last column in the row\r\n                            categoriesContent += `style=\"border-right: 1px lightgray solid; border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        else{ // this is the last column in the row\r\n                            categoriesContent += `style=\"border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        categoriesContent += `\r\n                        <ons-ripple background=\"rgba(63, 81, 181, 0.3)\"></ons-ripple>\r\n                        <div class=\"e-card\" data-category-id=\"${categoriesArray[index].id}\">\r\n                            <div class=\"e-card-image\" style=\"min-height: 100px; \r\n                            background-image: url('${categoriesArray[index].image.src}');\">\r\n                            </div>\r\n                            <div class=\"e-card-header\">\r\n                                <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                                    <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                        ${categoriesArray[index].name}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      </div>`;\r\n\r\n                    }\r\n\r\n                    // check if the contents are to be overwritten\r\n                    if(overwriteContent === true){ // content wants to be overwritten\r\n                        $('#categories-page #categories-contents-container').html(categoriesContent);\r\n                    }\r\n                    else{ // content is NOT to be overwritten\r\n                        if(appendContent === true){ // append content\r\n                            $('#categories-page #categories-contents-container').append(categoriesContent);\r\n                        }\r\n                        else{ // prepend content\r\n                            $('#categories-page #categories-contents-container').prepend(categoriesContent);\r\n                        }\r\n                    }\r\n\r\n                    resolve(categoriesArray.length); // resolve the promise with length of the categoriesArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method scrolls the page to the top\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollPageToTop(){\r\n            window.setTimeout(function(){\r\n                $('#categories-page .page__content').animate({ scrollTop: 0 }, 400);\r\n            }, 0);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Search page\r\n     */\r\n    searchPageViewModel: {\r\n\r\n        /**\r\n         * holds the array of products for the search result that was just run by the user\r\n         */\r\n        currentSearchResultsArray: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.backButtonClicked;\r\n\r\n                try{\r\n\r\n                    //instantiate the autocomplete widget for the search input\r\n                    let searchAutoComplete = new ej.dropdowns.AutoComplete({\r\n                        floatLabelType: \"Never\",\r\n                        placeholder: \"Search Products\",\r\n                        allowCustom: true,\r\n                        filterType: \"Contains\",\r\n                        minLength: 1000, // minimum number of characters that will automatically trigger autocomplete search\r\n                        suggestionCount: 20, // specified how many items will be in the popup\r\n                        dataSource: [],\r\n                        noRecordsTemplate: `Tap 'Search' key to begin search`,\r\n                        blur: function(){ // track when the component has lost focus\r\n                            this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                            // hide the popover\r\n                            $('#search-page-search-input-popover').get(0).hide();\r\n\r\n                        },\r\n                        change: function(){ // track when the component's value has changed\r\n\r\n                            let searchValue = \"\"; // holds the term to be searched for\r\n\r\n                            // check if the search component can perform a remote search\r\n                            if(this._allowRemoteSearch !== true){  // remote search is NOT allowed\r\n                                this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                                return; // exit function\r\n                            }\r\n\r\n                            // check that there is actually a search term entered in the search component\r\n                            if(!this.value || this.value.trim() === \"\"){ // no search term\r\n                                this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                                return; // exit function\r\n                            }\r\n\r\n                            // update the search term value\r\n                            searchValue = this.value.trim();\r\n\r\n                            // inform user that search is ongoing\r\n                            $('#search-page-search-input-popover #search-input-popover-list').\r\n                            html(`\r\n                            <ons-list-item modifier=\"nodivider\" lock-on-drag=\"true\">\r\n                                <div class=\"left\">\r\n                                    <ons-progress-circular indeterminate modifier=\"pull-hook\" \r\n                                    style=\"transform: scale(0.6)\"></ons-progress-circular>\r\n                                </div>\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center;\">\r\n                                        Searching for products\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`);\r\n                            // display the popover\r\n                            $('#search-page-search-input-popover').get(0).\r\n                            show(document.getElementById('search-page-input'));\r\n\r\n                            // run the actual search in a different event queue\r\n                            window.setTimeout(async function() {\r\n                                var searchResultsArray = [];\r\n                                try{\r\n                                    searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 3,\r\n                                        \"search\": searchValue});\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                    displayPageContent(searchResultsArray[0]);\r\n                                }\r\n                                catch(err){\r\n\r\n                                    // remove the focus from the search autocomplete component\r\n                                    $('#search-page #search-page-input').get(0).ej2_instances[0].focusOut();\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast to show that an error\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'error-ej2-toast';\r\n                                    toast.timeOut = 3000;\r\n                                    toast.content = `Sorry, a search error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"}`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                            }, 0);\r\n\r\n                        }\r\n                    }).appendTo('#search-page-input');\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Search\"); // update the title of the page\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOnlineListener, false);\r\n\r\n            // load the recent searches list\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOnlineListener, false);\r\n            // destroy the current search result array\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.currentSearchResultsArray = null;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the search input autocomplete component\r\n            $('#search-page #search-page-input').get(0).ej2_instances[0].destroy();\r\n            // reset the view-model properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.currentSearchResultsArray = null;\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // hide the search-input popover\r\n            $('#search-page-search-input-popover').get(0).hide();\r\n            // go to the \"Categories\" page (tab)\r\n            $('#app-main-tabbar').get(0).setActiveTab(1);\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see search results\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is used to display the \"Recent Searches\" list on the Search page.\r\n         * Recent Searches are gotten from the cached collection\r\n         */\r\n        async displayRecentSearches(){\r\n            try{\r\n                // load the recent search from the device database cache\r\n                let recentSearchData = await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                let displayContent = \"<ons-list-title>Recent Searches</ons-list-title>\"; // holds the content of the list to be created\r\n                // create the Recent Searches list\r\n                for(let index = 0; index < recentSearchData.products.length; index++){\r\n                    displayContent += `\r\n                    <ons-list-item modifier=\"longdivider\" tappable lock-on-drag=\"true\">\r\n                        <div class=\"center\">\r\n                            <div style=\"width: 100%;\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                              recentSearchesItemClicked(${index})\">\r\n                                <span class=\"list-item__subtitle\">${recentSearchData.products[index].name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"right\" prevent-tap \r\n                        onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                    removeRecentSearchItem(${index}, this);\">\r\n                            <ons-icon icon=\"md-close-circle\" style=\"color: lavender; font-size: 18px;\"></ons-icon>\r\n                        </div>\r\n                    </ons-list-item>`;\r\n                }\r\n                // attach the displayContent to the list\r\n                $('#search-page #search-list').html(displayContent);\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to save a search item i.e. a product to the cached \"Recent Searches\"\r\n         *\r\n         * @param product {Object} the product to include to the \"Recent Searches\" cache\r\n         * @returns {Promise<void>}\r\n         */\r\n        async saveRecentSearchItem(product){\r\n            var recentSearchesResultArray = []; // holds the recent searches array\r\n\r\n            try{\r\n                // get the recent searches collection\r\n                recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n            }\r\n            catch(err){}\r\n\r\n            try{\r\n                // add the received 'product' parameter to the top of the recent searches array\r\n                recentSearchesResultArray.unshift(product);\r\n                // ensure the array is NOT greater than 5 items in length\r\n                recentSearchesResultArray = recentSearchesResultArray.slice(0, 5);\r\n                // save the updated recent searches array  to the cached data collection of \"Recent Searches\"\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"recent-searches\", docType: \"RECENT_SEARCHES\", products: recentSearchesResultArray},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                // display the updated recent searches to the user\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to remove a search item i.e. a product from the cached \"Recent Searches\"\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the array of cached recent searches\r\n         *\r\n         * @param clickedElement {Element} the element that was clicked in order to trigger the product removal\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async removeRecentSearchItem(productIndex, clickedElement){\r\n\r\n            // execute the method is a different event queue\r\n            window.setTimeout(async function(){\r\n                var recentSearchesResultArray = []; // holds the recent searches array\r\n\r\n                try{\r\n                    // get the recent searches collection\r\n                    recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n                }\r\n                catch(err){}\r\n\r\n                try{\r\n                    // remove the received 'product' parameter index from the recent searches array\r\n                    recentSearchesResultArray.splice(productIndex, 1);\r\n                    // save the updated recent searches array  to the cached data collection of \"Recent Searches\"\r\n                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                        {_id: \"recent-searches\", docType: \"RECENT_SEARCHES\", products: recentSearchesResultArray},\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                    // hide the list-item belonging to the clicked element from the displayed list\r\n                    let $listItem = $(clickedElement).closest('ons-list-item');\r\n                    await kendo.fx($listItem).expand(\"vertical\").duration(300).reverse();\r\n                    // display the updated recent searches to the user\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0)\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks an item from the Recent Searches List\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the array returned of recent searches\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async recentSearchesItemClicked(productIndex){\r\n            // handle the function task in a different event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // get the recent searches collection\r\n                    let recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n\r\n                    // display the products details page using the selected product\r\n                    $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : recentSearchesResultArray[productIndex]}});\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the enter button is clicked on the device keyboard\r\n         *\r\n         * @param keyEvent\r\n         * @returns {Promise<void>}\r\n         */\r\n        async enterButtonClicked(keyEvent){\r\n            // check which key was pressed\r\n            if(keyEvent.which === kendo.keys.ENTER) // if the enter key was pressed\r\n            {\r\n                // prevent the default action from occurring\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopImmediatePropagation();\r\n                keyEvent.stopPropagation();\r\n                // hide the device keyboard\r\n                Keyboard.hide();\r\n\r\n                // get the search autocomplete component\r\n                let searchAutoComplete = $('#search-page #search-page-input').get(0).ej2_instances[0];\r\n                // update the value of the retrieved component\r\n                searchAutoComplete.value = $('#search-page #search-page-input').val();\r\n                searchAutoComplete._allowRemoteSearch = true; // flag the remote search can occur\r\n                searchAutoComplete.dataBind(); // bind new value to the component\r\n                searchAutoComplete.change(); // trigger the change method\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load products to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @param queryParam {Object} holds the objects that contains the query\r\n         * params for the type of products to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProducts(queryParam, pageToAccess = queryParam.page || 1,\r\n                           pageSize = queryParam.per_page || 3){\r\n            queryParam.page = pageToAccess;\r\n            queryParam.per_page = pageSize;\r\n\r\n            var productPromisesArray = []; // holds the array for the promises used to load the products\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested products list from the server\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: queryParam\r\n                        }\r\n                    )).then(function(productsArray){\r\n                        // check if the productsArray contains products\r\n                        if(productsArray.length > 0){ // there are products\r\n                            // update the current search results array with the productsArray\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                currentSearchResultsArray = productsArray;\r\n                        }\r\n\r\n                        resolve(productsArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                productPromisesArray.push(Promise.reject(\"no internet connection\"));\r\n            }\r\n\r\n            return Promise.all(productPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products on the search popover\r\n         *\r\n         * @param productsArray\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(productsArray){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let productsContent = \"\"; // holds the contents for the products\r\n\r\n                // check if the productsArray is empty or not\r\n                if(productsArray.length <= 0){ // there are no new content to display\r\n                    // inform the user that no result for the search was founc'\r\n                    $('#search-page-search-input-popover #search-input-popover-list').\r\n                    html(`<ons-list-item modifier=\"nodivider\" lock-on-drag=\"true\">\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center; width: 100%;\">\r\n                                        No Results Found\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`);\r\n                    resolve(productsArray.length); // resolve promise with the length of the products array\r\n                }\r\n                else{ // there are some products to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < productsArray.length; index++){\r\n\r\n                        productsContent +=\r\n                            `<ons-list-item modifier=\"nodivider\" tappable lock-on-drag=\"true\" \r\n                              onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                              searchAutocompletePopOverItemClicked(${index})\">\r\n                                <div class=\"left\">\r\n                                    <div class=\"search-result-image\" style=\"background-image: url('${productsArray[index].images[0].src}'); \r\n                                                            width: 2em; height: 2em\"></div>\r\n                                </div>\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center;\">\r\n                                        ${productsArray[index].name}\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`;\r\n                    }\r\n\r\n                    // append the \"Load More\" search item\r\n                    productsContent +=\r\n                        `<ons-list-item modifier=\"nodivider\" tappable lock-on-drag=\"true\" \r\n                          onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.findMoreClicked();\">\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center; width: 100%; font-weight: bold;\">\r\n                                        Find More...\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`;\r\n                    // attach the new search results to the search popover\r\n                    $('#search-page-search-input-popover #search-input-popover-list').html(productsContent);\r\n\r\n                    resolve(productsArray.length); // resolve the promise with length of the productsArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks an item from the search autocomplete popover\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the array returned by the product search\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async searchAutocompletePopOverItemClicked(productIndex){\r\n            // get the product the user clicked on from the search autocomplete popover\r\n            var selectedProduct = utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                currentSearchResultsArray[productIndex];\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // display the products details page using the selected product\r\n                    await $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : selectedProduct}});\r\n\r\n                    // save the selected product in recent products app cache\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                    saveRecentSearchItem(selectedProduct);\r\n\r\n                    // update the value of the search autocomplete input to that which the user clicked on from the popover\r\n                    $('#search-page #search-page-input').val(selectedProduct.name);\r\n\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Find More\" option is\r\n         * tapped within the search input popover\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async findMoreClicked(){\r\n            // load the products page in a separate event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // navigate to the products page\r\n                    await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                    // request for products using the user's search term\r\n                    let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20, \"search\":\r\n                            $('#search-page #search-page-input').get(0).ej2_instances[0].value.trim()});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // hide the preloader for the products page\r\n                    $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Account page\r\n     */\r\n    accountPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for when the device back button is tapped\r\n                event.target.onDeviceBackButton = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    accountPageViewModel.backButtonClicked;\r\n\r\n                try{\r\n                    // create the accorodion ej2 component used on the \"Account\" page\r\n                    let accordion = new ej.navigations.Accordion({\r\n                        expandMode: 'Single'\r\n                    });\r\n                    accordion.appendTo('#account-accordion');\r\n                    // expand the first item of the accordion\r\n                    accordion.expandItem(true, 0);\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: async function(){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Account\"); // update the title of the page\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // handle the user sign-in check inside a promise\r\n            return new Promise(function(resolve, reject){\r\n                window.setTimeout(async function(){\r\n                    try{\r\n                        // check if user has been signed in\r\n                        let hasUserDetails = await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                        loadData(\"user-details\", utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                        // since user is signed in, hide some list items and show some list items on the page.\r\n\r\n                        // all items that are interested in have their display altered MUST have the\r\n                        // class 'utopiasoftware-can-hide-list-item'.\r\n                        // items that want to be displayed when a user is signed in and hidden when a user is signed out, MUST ALSO\r\n                        // have the class 'utopiasoftware-user-sign-in-show' in addition to 'utopiasoftware-can-hide-list-item'.\r\n\r\n                        // alter the list item display because a user is signed in\r\n                        $('#account-page .utopiasoftware-can-hide-list-item.utopiasoftware-user-sign-in-show').css(\"display\", \"flex\");\r\n                        $('#account-page .utopiasoftware-can-hide-list-item:not(.utopiasoftware-user-sign-in-show)')\r\n                            .css(\"display\", \"none\");\r\n\r\n                        resolve(); // resolve the promise\r\n                    }\r\n                    catch(err){\r\n                        // alter the list item display because NO user is signed in\r\n                        $('#account-page .utopiasoftware-can-hide-list-item.utopiasoftware-user-sign-in-show').css(\"display\", \"none\");\r\n                        $('#account-page .utopiasoftware-can-hide-list-item:not(.utopiasoftware-user-sign-in-show)')\r\n                            .css(\"display\", \"flex\");\r\n\r\n                        // resolve the promise\r\n                        resolve(); // resolve the promise\r\n                    }\r\n                }, 0);\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the \"Account\" accordion\r\n            $('#account-page #account-accordion').get(0).ej2_instances[0].destroy();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the \"Home\" page (tab)\r\n            $('#app-main-tabbar').get(0).setActiveTab(2);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks on the \"Sign Out\" list item\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signOutListItemClicked(){\r\n\r\n            // inform the user that the sign out process is on\r\n            $('#loader-modal-message').html(\"Signing user out...\");\r\n            await $('#loader-modal').get(0).show(); // show loader\r\n\r\n            try{\r\n                // delete all user related data\r\n                await Promise.all([utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                removeData(\"user-details\", utopiasoftware[utopiasoftware_app_namespace].model.\r\n                    encryptedAppDatabase),\r\n                    utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    removeData(\"user-cart\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)]);\r\n\r\n                // sign out the user from the firebase app\r\n                await utopiasoftware[utopiasoftware_app_namespace].model.firebaseApp.auth().signOut();\r\n            }\r\n            catch(err){\r\n                console.log(\"USER SIGN OUT\", err);\r\n            }\r\n\r\n            // check if user can sign out from the remote app serve via an iframe\r\n            if($('#user-signout-iframe-container #user-signout-iframe').get(0).contentWindow &&\r\n                $('#user-signout-iframe-container #user-signout-iframe').get(0).contentWindow.utopiasoftware_removeUsage){\r\n                // call the method to remotely sign out\r\n                $('#user-signout-iframe-container #user-signout-iframe').get(0).contentWindow.utopiasoftware_removeUsage();\r\n            }\r\n\r\n            // refresh the display of the app Account page\r\n            await utopiasoftware[utopiasoftware_app_namespace].controller.accountPageViewModel.pageShow();\r\n\r\n            // alter the list item displayed on the Account page because NO user is signed in\r\n            $('#account-page .utopiasoftware-can-hide-list-item.utopiasoftware-user-sign-in-show').css(\"display\", \"none\");\r\n            $('#account-page .utopiasoftware-can-hide-list-item:not(.utopiasoftware-user-sign-in-show)')\r\n                .css(\"display\", \"flex\");\r\n\r\n            // hide loader modal\r\n            await $('#loader-modal').get(0).hide();\r\n\r\n            // inform user that they have been signed out\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n            $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n            // display toast message\r\n            let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n            toast.cssClass = 'success-ej2-toast';\r\n            toast.timeOut = 3000;\r\n            toast.content = `User signed out`;\r\n            toast.dataBind();\r\n            toast.show();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks on the \"Profile\" list item\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async profileListItemClicked(){\r\n\r\n            // handle the user sign-in check inside a promise\r\n            return new Promise(function(resolve, reject){\r\n                window.setTimeout(async function(){\r\n                    try{\r\n                        // check if user has been signed in\r\n                        let hasUserDetails = await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                        loadData(\"user-details\", utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                        // user has been signed in, so display the user profile page\r\n                        await $('#app-main-navigator').get(0).pushPage('profile-page.html');\r\n\r\n                        resolve(); // resolve the promise\r\n                    }\r\n                    catch(err){\r\n                        // inform user they need to sign in before viewing the profile page\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast message\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 3000;\r\n                        toast.content = `Sign in to view your profile`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n\r\n                        // resolve the promise\r\n                        resolve(); // resolve the promise\r\n                    }\r\n                }, 0);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks on the \"Track Order\" list item\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async trackOrderListItemClicked(){\r\n\r\n            // handle the user sign-in check inside a promise\r\n            return new Promise(function(resolve, reject){\r\n                window.setTimeout(async function(){\r\n                    try{\r\n                        // check if user has been signed in\r\n                        let hasUserDetails = await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                        loadData(\"user-details\", utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                        // user has been signed in, so display the track\r\n                        await $('#app-main-navigator').get(0).pushPage('track-order-page.html');\r\n\r\n                        resolve(); // resolve the promise\r\n                    }\r\n                    catch(err){\r\n                        // inform user they need to sign in before viewing the track order page\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast message\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 3000;\r\n                        toast.content = `Sign in to track an order`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n\r\n                        // resolve the promise\r\n                        resolve(); // resolve the promise\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Login page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the login page\r\n         */\r\n        loginFormValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the signup page\r\n         */\r\n        signupFormValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley form validator object for the forgot password page\r\n         */\r\n        forgotPasswordFormValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.backButtonClicked;\r\n\r\n                // listen for when the login-carousel has changed/slide used to change screen from login to signup etc\r\n                $thisPage.on(\"postchange\", \"#login-carousel\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.changeScreenCarouselPostChange);\r\n\r\n                // listen for when the login-carousel has changed/slide used to hide the tooltips for the previous displayed screen\r\n                $thisPage.on(\"postchange\", \"#login-carousel\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.hideTooltipsCarouselPostChange);\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator =\r\n                    $('#login-page #login-form').parsley();\r\n\r\n                // initialise the signup form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator =\r\n                    $('#login-page #signup-form').parsley();\r\n\r\n                // initialise the forgot password form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidator =\r\n                    $('#login-page #forgot-password-form').parsley();\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#login-page #login-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#login-page #login-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidated);\r\n\r\n                // listen for signup form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#login-page #signup-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for sign up form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#login-page #signup-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for signup form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidated);\r\n\r\n                // listen for forgot password form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#login-page #forgot-password-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for forgot password form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#login-page #forgot-password-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for forgot password form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidated);\r\n\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#login-page .login-page-form-container').on(\"scroll\", function(){\r\n\r\n                    // place function execution in the event queue to be executed ASAP\r\n                    window.setTimeout(function(){\r\n\r\n                            switch ($('#login-page #login-carousel').get(0).getActiveIndex()) { // get the active carousel item\r\n                                case 0: // first carousel item is active, so adjust the input elements on the login form\r\n                                    $(\"#login-page #login-form ons-input\").each(function(index, element){\r\n                                        document.getElementById('login-form').ej2_instances[index].refresh(element);\r\n                                    });\r\n                                    break;\r\n\r\n                                case 1: // second carousel item is active, so adjust the input elements on the login form\r\n                                    $(\"#login-page #signup-form ons-input\").each(function(index, element){\r\n                                        document.getElementById('signup-form').ej2_instances[index].refresh(element);\r\n                                    });\r\n                                    break;\r\n\r\n                                case 2: // third carousel item is active, so adjust the input elements on the login form\r\n                                    $(\"#login-page #forgot-password-form ons-input\").each(function(index, element){\r\n                                        document.getElementById('forgot-password-form').ej2_instances[index].refresh(element);\r\n                                    });\r\n\r\n                                    break;\r\n                            }\r\n                        }, 0);\r\n                });\r\n\r\n                try{\r\n                    // create the tooltip objects for the signin form\r\n                    $('#login-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopCenter',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#login-page #login-form').get(0));\r\n                    });\r\n\r\n                    // create the tooltip objects for the signup form\r\n                    $('#signup-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopCenter',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#login-page #signup-form').get(0));\r\n                    });\r\n\r\n                    // create the tooltip objects for the forgot password form\r\n                    $('#forgot-password-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopCenter',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#login-page #forgot-password-form').get(0));\r\n                    });\r\n\r\n                    // create the button for showing password visibility on the signup page\r\n                    new ej.buttons.Button({\r\n                        isToggle: true,\r\n                        cssClass: 'e-flat e-small e-round',\r\n                        iconCss: \"zmdi zmdi-eye\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo($('#signup-password-view-button', $thisPage).get(0));\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device keyboard is shown\r\n            window.addEventListener('keyboardDidShow',\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.keyboardShownAdjustView);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device keyboard is shown\r\n            window.removeEventListener('keyboardDidShow',\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.keyboardShownAdjustView);\r\n\r\n            // hide the tooltips on the login form\r\n            $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // hide the tooltips on the signup form\r\n            $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // hide the tooltips on the forgot password form\r\n            $('#login-page #forgot-password-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // reset all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.reset();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.reset();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidator.reset();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the tooltips on the login form\r\n            $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // destroy the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the tooltips on the signup form\r\n            $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the tooltips on the forgot password form\r\n            $('#login-page #forgot-password-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the password visibility button\r\n            $('#login-page #signup-password-view-button').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidator.destroy();\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        async backButtonClicked(){\r\n\r\n            // get back to the previous page on the app-main navigator stack\r\n            return $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Sign In / Sign Up segment buttons are clicked\r\n         *\r\n         * @param itemIndex {Integer} zero-based index representing the carousel item to\r\n         * display ewhen the button is clicked\r\n         */\r\n        segmentButtonClicked(itemIndex){\r\n            // move to the slide item specify by the provided parameter\r\n            $('#login-page #login-carousel').get(0).setActiveIndex(itemIndex);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Password Visibility button is clicked\r\n         *\r\n         * @param buttonElement {HTMLElement} button element being clicked\r\n         *\r\n         * @param inputId {String} the id for the input whose content visibility is being changed\r\n         */\r\n        passwordVisibilityButtonClicked(buttonElement, inputId){\r\n\r\n            // check the state of the button is it 'active' or not\r\n            if(! $(buttonElement).hasClass('e-active')){ // button is not active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"text\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye-off';\r\n                ej2Button.dataBind();\r\n            }\r\n            else{ // button is active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"password\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye';\r\n                ej2Button.dataBind();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides for\r\n         * displaying the various screens i.e. login or signup etc\r\n         *\r\n         * @param event\r\n         */\r\n        changeScreenCarouselPostChange(event){\r\n\r\n            // use the switch case to determine what carousel is being shown\r\n            switch(event.originalEvent.activeIndex){ // get the index of the active carousel item\r\n                case 0:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(2) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(1) input\").prop(\"checked\", false);\r\n                    $(\"#login-page ons-carousel-item.third .login-segment button input\").prop(\"checked\", false);\r\n                    // scroll to the top of the active carousel item\r\n                    $('#login-page ons-carousel-item.first .login-page-form-container').scrollTop(0);\r\n\r\n                    break;\r\n\r\n                case 1:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(1) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(2) input\").prop(\"checked\", false);\r\n                    $(\"#login-page ons-carousel-item.third .login-segment button input\").prop(\"checked\", false);\r\n                    // scroll to the top of the active carousel item\r\n                    $('#login-page ons-carousel-item.second .login-page-form-container').scrollTop(0);\r\n                    break;\r\n\r\n                case 2:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(1) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(2) input\").prop(\"checked\", false);\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(2) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(1) input\").prop(\"checked\", false);\r\n                    $('#login-page ons-carousel-item.third .login-page-form-container').scrollTop(0);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides for\r\n         * hiding the tooltips on the previously displayed slide\r\n         *\r\n         * @param event\r\n         */\r\n        hideTooltipsCarouselPostChange(event){\r\n\r\n            // use the switch case to determine what carousel item was PREVIOUSLY shown\r\n            switch(event.originalEvent.lastActiveIndex){ // get the index of the LAST active carousel item\r\n                case 0:\r\n\r\n                    // hide the tooltips on the login form\r\n                    $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                        // hide the tooltip\r\n                        tooltipArrayElem.close();\r\n                    });\r\n                    break;\r\n\r\n                case 1:\r\n\r\n                    // hide the tooltips on the signup form\r\n                    $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                        // hide the tooltip\r\n                        tooltipArrayElem.close();\r\n                    });\r\n                    break;\r\n\r\n                case 2:\r\n\r\n                    // hide the tooltips on the forgot password form\r\n                    $('#login-page #forgot-password-form').get(0).ej2_instances.forEach(function(tooltipArrayElem) {\r\n                        // hide the tooltip\r\n                        tooltipArrayElem.close();\r\n                    });\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the keyboard is shown.\r\n         * It is used to adjust the display height\r\n         *\r\n         * @param event\r\n         */\r\n        keyboardShownAdjustView(event){\r\n            // get the height of the keyboard and add 6000px to it\r\n            let adjustedKeyboardHeight = Math.ceil(event.keyboardHeight) + 6000;\r\n\r\n            switch ($('#login-page #login-carousel').get(0).getActiveIndex()) { // get the active carousel item\r\n                case 0:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.first .login-page-form-container\").\r\n                    css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.first .login-page-form-container\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top - 30));\r\n                    break;\r\n\r\n                case 1:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.second .login-page-form-container\").\r\n                    css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.second .login-page-form-container\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top - 30));\r\n                    break;\r\n\r\n                case 2:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.third .login-page-form-container\").\r\n                    css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.third .login-page-form-container\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top - 30));\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Sign In\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signinButtonClicked() {\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Sign Up\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signupButtonClicked() {\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Forgot Password\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async forgotPasswordButtonClicked() {\r\n\r\n            // open inapp browser for user to reset password\r\n            cordova.InAppBrowser.open(window.encodeURI('https://shopoakexclusive.com/my-account/lost-password/'), '_blank',\r\n                'location=yes,clearcache=yes,clearsessioncache=yes,closebuttoncolor=#ffffff,hardwareback=no,hidenavigationbuttons=yes,hideurlbar=yes,zoom=no,toolbarcolor=#3f51b5');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Reset Password\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async resetPasswordButtonClicked() {\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.forgotPasswordFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the 3rd-party login button is clicked\r\n         *\r\n         * @param loginMode {String} this parameter identifies whether the user mode is\r\n         * 'sign in' or 'sign up'\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async thirdPartyLoginButtonClicked(loginMode = 'sign in'){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to ${loginMode}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // hide the tooltips on the login form\r\n            $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // hide the tooltips on the signup form\r\n            $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            if(loginMode === \"sign in\"){ // the user is signing in\r\n                $('#third-party-login-modal #third-party-login-notice').css(\"display\", \"block\"); // show notice\r\n            }\r\n            if(loginMode === \"sign up\"){ // the user is signing up\r\n                $('#third-party-login-modal #third-party-login-notice').css(\"display\", \"none\"); // hide notice\r\n            }\r\n\r\n            // open the 'third-party-login-modal'\r\n            $('#third-party-login-modal').get(0).show();\r\n            // show the loader within the modal\r\n            $('#third-party-login-modal #third-party-login-loader').css(\"display\", \"block\");\r\n            // start the firebase ui app\r\n            utopiasoftware[utopiasoftware_app_namespace].model.firebaseUI.start('#third-party-login-block',\r\n                {\r\n                    signInOptions: [\r\n                        // Leave the lines as is for the providers you want to offer your users.\r\n                        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n                        {\r\n                            provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n                            customParameters: {\r\n                                // Forces password re-entry.\r\n                                auth_type: 'reauthenticate'\r\n                            }\r\n                        },\r\n                        firebase.auth.TwitterAuthProvider.PROVIDER_ID\r\n                    ],\r\n                    //terms of service url\r\n                    tosUrl: 'https://shopoakexclusive.com/terms-of-service.php',\r\n                    // Privacy policy url\r\n                    privacyPolicyUrl: \"https://shopoakexclusive.com/privacy-policy.php\",\r\n                    //callbacks/handlers\r\n                    callbacks: {\r\n                        uiShown: function(){ // triggered callback when firebase ui is displayed\r\n                            // hide the loader within the modal\r\n                            $('#third-party-login-modal #third-party-login-loader').css(\"display\", \"none\");\r\n                        },\r\n\r\n                        signInFailure: async function(){\r\n                            // return a Promise object\r\n                            return new Promise(async function (resolve, reject) {\r\n\r\n                                // hide the 'third-party-login-modal'\r\n                                await $('#third-party-login-modal').get(0).hide();\r\n\r\n                                // inform the user of the error\r\n                                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                // display toast message\r\n                                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                toast.cssClass = 'error-ej2-toast';\r\n                                toast.timeOut = 3500;\r\n                                toast.content = `Error with user ${loginMode}. Try again `;\r\n                                toast.dataBind();\r\n                                toast.show();\r\n\r\n                                resolve(); // resolve the promise\r\n                            });\r\n                        },\r\n\r\n                        signInSuccessWithAuthResult: async function(authResult){ // triggers when forebase is successfully logged in\r\n                            console.log(\"I GOT YOU\", authResult);\r\n\r\n                            // hide the 'third-party-login-modal'\r\n                            await $('#third-party-login-modal').get(0).hide();\r\n\r\n                            if(loginMode === \"sign in\"){\r\n                                try{\r\n                                    // display modal to user that signin is being completed\r\n                                    $('#loader-modal-message').html(\"Completing Signin...\");\r\n                                    await $('#loader-modal').get(0).show(); // show loader\r\n\r\n                                    // sign the user in with the email gotten from the 3rd party login\r\n                                    let resultArray = await Promise.resolve($.ajax(\r\n                                        {\r\n                                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/customers\",\r\n                                            type: \"get\",\r\n                                            //contentType: \"application/json\",\r\n                                            beforeSend: function(jqxhr) {\r\n                                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                            },\r\n                                            dataType: \"json\",\r\n                                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                            processData: true,\r\n                                            data: {email: authResult.user.email}\r\n                                        }\r\n                                    ));\r\n\r\n                                    // check if any user was returned\r\n                                    if(resultArray.length == 0){ // user with the specified email has not been registered before\r\n                                        throw \"error\";\r\n                                    }\r\n\r\n                                    // reset the user's password using the 3rd party auth user uid\r\n                                    resultArray[0] = await Promise.resolve($.ajax(\r\n                                        {\r\n                                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                                `/wp-json/wc/v3/customers/${resultArray[0].id}`,\r\n                                            type: \"put\",\r\n                                            contentType: \"application/json\",\r\n                                            beforeSend: function(jqxhr) {\r\n                                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                            },\r\n                                            dataType: \"json\",\r\n                                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                            processData: false,\r\n                                            data: JSON.stringify({password: authResult.user.uid})\r\n                                        }\r\n                                    ));\r\n                                    resultArray[0].password = authResult.user.uid;\r\n\r\n                                    // save the created user details data to ENCRYPTED app database as cached data\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                        {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails: resultArray[0]},\r\n                                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                                    // hide loader\r\n                                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                                    // leave the signup page and go back to the previous page in the app main navigator. Call the backbuttonClicked() method\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.\r\n                                    backButtonClicked();\r\n\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast message\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'success-ej2-toast';\r\n                                    toast.timeOut = 3000;\r\n                                    toast.content = `User signin completed`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                                catch(err){\r\n                                    console.log(\"SIGN IN ERROR\", err);\r\n\r\n                                    // hide loader\r\n                                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast message\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'error-ej2-toast';\r\n                                    toast.timeOut = 3500;\r\n                                    toast.content = `User does not have an account. User signin failed `;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                            }\r\n\r\n                            if(loginMode === \"sign up\"){\r\n                                try{\r\n                                    // display modal to user that signin is being completed\r\n                                    $('#loader-modal-message').html(\"Completing Signup...\");\r\n                                    await $('#loader-modal').get(0).show(); // show loader\r\n\r\n                                    // signup the user in with the email gotten from the 3rd party login\r\n                                    let userDetails = await Promise.resolve($.ajax(\r\n                                        {\r\n                                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                                \"/wp-json/wc/v3/customers\",\r\n                                            type: \"post\",\r\n                                            contentType: \"application/json\",\r\n                                            beforeSend: function(jqxhr) {\r\n                                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                            },\r\n                                            dataType: \"json\",\r\n                                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                            processData: false,\r\n                                            data: JSON.stringify({email: authResult.user.email,\r\n                                                username: authResult.user.email,\r\n                                                password: authResult.user.uid})\r\n                                        }\r\n                                    ));\r\n\r\n                                    userDetails.password = authResult.user.uid;\r\n\r\n                                    // save the created user details data to ENCRYPTED app database as cached data\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                        {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails: userDetails},\r\n                                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                                    // hide loader\r\n                                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                                    // leave the signup page and go back to the previous page in the app main navigator. Call the backbuttonClicked() method\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.\r\n                                    backButtonClicked();\r\n\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast message\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'success-ej2-toast';\r\n                                    toast.timeOut = 3000;\r\n                                    toast.content = `User signup completed`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                                catch(err){\r\n                                    console.log(\"SIGN UP ERROR\", err);\r\n\r\n                                    err = JSON.parse(err.responseText);\r\n\r\n                                    // hide loader\r\n                                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast message\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'error-ej2-toast';\r\n                                    toast.timeOut = 3000;\r\n                                    toast.content = `Error. ${err.message || \"User signup failed\"}`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                            }\r\n\r\n                            return false; // return false to prevent firebase ui from redirecting to any url\r\n                        }\r\n                    }\r\n                });\r\n\r\n            // disable firebase ui auto-signin\r\n            utopiasoftware[utopiasoftware_app_namespace].model.firebaseUI.disableAutoSignIn();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the login form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loginFormValidated(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to sign in`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // display modal to user that signin is being completed\r\n            $('#loader-modal-message').html(\"Completing Signin...\");\r\n            await $('#loader-modal').get(0).show(); // show loader\r\n\r\n            var promisesArray = []; // holds the array for the promises used to complete user signin\r\n            var userEmail = $('#login-page #login-form #login-email').val().trim(); // holds user email from the login form\r\n            var userPassword = $('#login-page #login-form #login-password').val().trim(); // holds the user password\r\n\r\n\r\n            // make the request to authenticate user login credentials\r\n            promisesArray.push(Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json\",\r\n                    type: \"get\",\r\n                    // contentType: \"application/json\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                            Base64.encode(`${userEmail}:${userPassword}`));\r\n                    },\r\n                    dataType: \"json\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: false\r\n                }\r\n            )));\r\n\r\n            // make the request to retrieve a user with the specified login email\r\n            promisesArray.push(Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/customers\",\r\n                    type: \"get\",\r\n                    //contentType: \"application/json\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                            utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                    },\r\n                    dataType: \"json\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {email: userEmail}\r\n                }\r\n            )));\r\n\r\n            // get the promise created from the promisesArray\r\n            let promisesArrayPromise = Promise.all(promisesArray);\r\n\r\n            // listen for when the promisesArrayPromise resolves\r\n            promisesArrayPromise.then(async function(resultsArray){\r\n                // add the user's password to the user details retrieved from the server\r\n                resultsArray[1][0].password = userPassword;\r\n\r\n                // save the created user details data to ENCRYPTED app database as cached data\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails: resultsArray[1][0]},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                // hide loader\r\n                await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                // leave the signup page and go back to the previous page in the app main navigator. Call the backbuttonClicked() method\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.backButtonClicked();\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'success-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `User signin completed`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n            }).catch(async function(err){ // an error occurred\r\n                console.log(\"SIGN IN ERROR\", err);\r\n\r\n                err = JSON.parse(err.responseText);\r\n\r\n                // hide loader\r\n                await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Invalid user email or password. User signin failed `;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n            });\r\n\r\n            return promisesArrayPromise; // return the resolved promisesArray\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign up form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signupFormValidated(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to sign up`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // display modal to user that signup is being completed\r\n            $('#loader-modal-message').html(\"Completing Signup...\");\r\n            await $('#loader-modal').get(0).show(); // show loader\r\n\r\n            var promisesArray = []; // holds the array for the promises used to complete user signup\r\n\r\n            // make the request to create the new user account\r\n            promisesArray.push(new Promise(function(resolve, reject){\r\n                Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/customers\",\r\n                        type: \"post\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify({email: $('#login-page #signup-form #signup-email').val().trim(),\r\n                        username: $('#login-page #signup-form #signup-email').val().trim(),\r\n                        password: $('#login-page #signup-form #signup-password').val().trim()})\r\n                    }\r\n                )).then(async function(userDetails){\r\n                    // add the user's password to the user details retrieved from the server\r\n                    userDetails.password = $('#login-page #signup-form #signup-password').val().trim();\r\n\r\n                    // save the created user details data to ENCRYPTED app database as cached data\r\n                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                        {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails},\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                    // hide loader\r\n                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                    // leave the signup page and go back to the previous page in the app main navigator. Call the backbuttonClicked() method\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.backButtonClicked();\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'success-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `User signup completed`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n\r\n                    resolve(userDetails); // resolve the parent promise with the data gotten from the server\r\n\r\n                }).catch(async function(err){ // an error occurred\r\n                    console.log(\"SIGN UP ERROR\", err);\r\n\r\n                    err = JSON.parse(err.responseText);\r\n\r\n                    // hide loader\r\n                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Error. ${err.message || \"User signup failed\"}`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n\r\n                    reject(err); // reject the parent promise with the error\r\n                });\r\n            }));\r\n\r\n            return Promise.all(promisesArray); // return the resolved promisesArray\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the forgot password form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async forgotPasswordFormValidated(){\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Products page\r\n     */\r\n    productsPageViewModel: {\r\n\r\n        /**\r\n         * property holds the current \"page\" of the categories being accessed\r\n         */\r\n        currentPage: 0,\r\n\r\n        /**\r\n         * property holds the size i.e. number of items that can be contained in currentPage being accessed\r\n         */\r\n        pageSize: 20,\r\n\r\n        /**\r\n         * property holds the height of the \"content view\" for the page\r\n         */\r\n        viewContentHeight: 0,\r\n\r\n        /**\r\n         * property holds the index position of the last active\r\n         * navigation tab before user landed on this page\r\n         */\r\n        lastActiveNavTab: 0,\r\n\r\n        /**\r\n         * property holds the current query parameter used to display the products on screen\r\n         */\r\n        currentQueryParam: {\r\n            status: \"publish\"\r\n        },\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle page-infinite-scroll\r\n                event.target.onInfiniteScroll =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.pageInfiniteScroll;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#products-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#products-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#products-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#products-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#products-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                // get the height of the view content container\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.viewContentHeight =\r\n                    Math.floor($('#products-page .page__content').height());\r\n\r\n\r\n                // listen for the scroll event on the page\r\n                $('#products-page .page__content').on(\"scroll\", function(){\r\n                    // handle the logic in a different event queue slot\r\n                    window.setTimeout(function(){\r\n                        // get the scrollTop position of the view content\r\n                        var scrollTop = Math.floor($('#products-page .page__content').scrollTop());\r\n\r\n                        // get the percentage of scroll that has taken place from the top position\r\n                        var percentageScroll = (scrollTop /  utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            productsPageViewModel.viewContentHeight) * 100;\r\n                        if(percentageScroll >= 50){ // if the scroll position is >= halfway\r\n                            $('#products-page #products-page-scroll-top-fab').css(\r\n                                {\"transform\": \"scale(1)\",\r\n                                    \"display\": \"inline-block\"});\r\n                        }\r\n                        else{ // if the scroll position is < halfway\r\n                            $('#products-page #products-page-scroll-top-fab').css({\"transform\": \"scale(0)\"});\r\n                        }\r\n                    }, 0);\r\n                });\r\n\r\n                // listen for when the navigation tab has changed and update the lastActiveNavTab\r\n                $('#app-main-tabbar').on(\"prechange\", function(event){\r\n                    if(event.originalEvent.index === 4){ // if the tab index is this page, don't update the lastActiveNavTab\r\n                        return; // exit the method\r\n                    }\r\n\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productsPageViewModel.lastActiveNavTab = event.originalEvent.index;\r\n\r\n                });\r\n\r\n                // LISTEN FOR WHEN A PRODUCT CARD IS CLICKED\r\n                $thisPage.on(\"click\", \".e-card\", function(event){\r\n                    // call the method to load the product details page based on the product item clicked\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    productItemClicked(window.parseInt($(event.currentTarget).attr('data-product')),\r\n                        window.parseInt($(event.currentTarget).attr('data-page')));\r\n                });\r\n\r\n                try{\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(event){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Products\"); // change the title of the screen\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n            // check if the page content should be reset\r\n            if($('#app-main-navigator').get(0)._resetPageDisplay !== false){ // page content can be refreshed\r\n                // flag that page infinite scroll should NOT be allowed\r\n                event.target._allowInfinitePageScroll = false;\r\n                // show the preloader\r\n                $('#products-page .page-preloader').css(\"display\", \"block\");\r\n                // empty the content of the page\r\n                $('#products-page #products-contents-container').html('');\r\n                // hide the page scroll fab\r\n                $('#products-page #products-page-scroll-top-fab').css({\"display\": \"none\"});\r\n            }\r\n\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(event){\r\n            // flag that page infinite scroll should NOT be allowed\r\n            event.target._allowInfinitePageScroll = false;\r\n            delete $('#app-main-navigator').get(0)._resetPageDisplay;\r\n\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOnlineListener, false);\r\n\r\n            // remove all the infinite load indicator from the bottom of the page (if any exist)\r\n            $('#products-page .page__content .infinite-load-container').remove();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the last active page (tab)\r\n            $('#app-main-tabbar').get(0).\r\n            setActiveTab(utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.lastActiveNavTab);\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see updated products\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#products-page #products-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // start loading the page content\r\n                let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productsPageViewModel.loadProducts(utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.productsPageViewModel.currentQueryParam, 1);\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // hide the page preloader\r\n                $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#products-page #products-page-pull-hook').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pageInfiniteScroll(doneCallBack = function(){}){\r\n            // check of page infinite scroll is allowed or not\r\n            if($('#products-page').get(0)._allowInfinitePageScroll === false){ // page infinite scroll is NOT allowed\r\n                doneCallBack();\r\n                return;\r\n            }\r\n\r\n            // append an infinite load indicator to the bottom of the page\r\n            $('#products-page .page__content').\r\n            append(`<div class=\"infinite-load-container\" style=\"text-align: center\">\r\n                        <ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>\r\n                    </div>`);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            let productArray = []; // holds the array of products retrieved for display\r\n\r\n            try{\r\n                // start loading the NEXT page content\r\n                productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productsPageViewModel.loadProducts(utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.productsPageViewModel.currentQueryParam,\r\n                    utopiasoftware[utopiasoftware_app_namespace].\r\n                        controller.productsPageViewModel.currentPage + 1);\r\n                // append the new content to the previous contents\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                displayPageContent(productArray[0], true, false);\r\n\r\n            }\r\n            catch(err){ // an error occurred\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // check if any new products were retrieved\r\n                if(productArray && productArray[0].length > 0){ // products were retrieve\r\n                    // remove the infinite load indicator from the bottom of the page\r\n                    $('#products-page .page__content .infinite-load-container').remove();\r\n                }\r\n                else{ // no products were retrieved\r\n\r\n                    $('#products-page .page__content .infinite-load-container').css({\"visibility\": \"hidden\"});\r\n                }\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load products to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @param queryParam {Object} holds the objects that contains the query\r\n         * params for the type of products to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProducts(queryParam, pageToAccess = queryParam.page || utopiasoftware[utopiasoftware_app_namespace].\r\n                                 controller.productsPageViewModel.currentPage + 1,\r\n                             pageSize = queryParam.per_page || utopiasoftware[utopiasoftware_app_namespace].\r\n                                 controller.productsPageViewModel.pageSize){\r\n            queryParam.page = pageToAccess;\r\n            queryParam.per_page = pageSize;\r\n\r\n            var productPromisesArray = []; // holds the array for the promises used to load the products\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested products list from the server\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: queryParam\r\n                        }\r\n                    )).then(function(productsArray){\r\n                        // check if there is any data to cache in the app database\r\n                        if(productsArray.length > 0){ // there is data to cache\r\n                            // generate an id for the data being cached\r\n                            let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"products\";\r\n                            // save the retrieved data to app database as cached data\r\n                            utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                {_id: cachedDataId, docType: \"PRODUCTS\", products: productsArray},\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                            // update the current page being viewed\r\n                            utopiasoftware[utopiasoftware_app_namespace].\r\n                                controller.productsPageViewModel.currentPage = queryParam.page;\r\n                            // update the current query parameter for the page\r\n                            utopiasoftware[utopiasoftware_app_namespace].\r\n                                controller.productsPageViewModel.currentQueryParam = queryParam;\r\n                        }\r\n                        resolve(productsArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                // display toast to show that there is no internet connection\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.content = \"No Internet connection. Pull down to refresh and see updated products\";\r\n                toast.dataBind();\r\n                toast.show();\r\n                // load the requested products from cached data\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    // generate the id for the cached data being retrieved\r\n                    let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"products\";\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(cachedDataId, utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        // update the current page being viewed\r\n                        utopiasoftware[utopiasoftware_app_namespace].\r\n                            controller.productsPageViewModel.currentPage = queryParam.page;\r\n                        resolve(cachedProductsData.products); // resolve the parent promise with the cached products data\r\n                    }).\r\n                    catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n            }\r\n\r\n            return Promise.all(productPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products on the app screen\r\n         *\r\n         * @param productsArray\r\n         *\r\n         * @param appendContent {Boolean} if the value is true,\r\n         * add each content to the end of other items on the screen.\r\n         * Else, prepend the content to the top of other items\r\n         *\r\n         * @param overwriteContent {Boolean} should the old content be replaced or added to\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(productsArray, appendContent = true, overwriteContent = true){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let productsContent = \"\"; // holds the contents for the products\r\n\r\n                // check if the productsArray is empty or not\r\n                if(productsArray.length <= 0){ // there are no new content to display\r\n                    resolve(productsArray.length); // resolve promise with the length of the products array\r\n                }\r\n                else{ // there are some products to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < productsArray.length; index++){\r\n                        if(!productsArray[index].regular_price || productsArray[index].regular_price == \"\"){ // regular price was NOT set, so set it\r\n                            productsArray[index].regular_price = \"0.00\";\r\n                        }\r\n\r\n                        productsContent += `<div class=\"col-xs-4\" `;\r\n                        if((index + 1) % 3 !== 0){ // this is NOT the last column in the row\r\n                            productsContent += `style=\"border-right: 1px lightgray solid; border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        else{ // this is the last column in the row\r\n                            productsContent += `style=\"border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        productsContent += `\r\n                        <ons-ripple background=\"rgba(63, 81, 181, 0.3)\"></ons-ripple>\r\n                        <div class=\"e-card\" \r\n                        data-product=\"${index}\" \r\n                        data-page=\"${utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.currentPage}\">\r\n                            <div class=\"e-card-image\" style=\"min-height: 100px; \r\n                            background-image: url('${productsArray[index].images[0].src}');\">\r\n                            ${productsArray[index].on_sale === true ? `\r\n                            <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productsArray[index].price) -\r\n                            kendo.parseFloat(productsArray[index].regular_price)) /\r\n                            kendo.parseFloat(productsArray[index].regular_price === \"0.00\" ?\r\n                                productsArray[index].price : productsArray[index].regular_price))\r\n                            * 100)}% OFF\r\n                             </span>` : \"\"}\r\n                            </div>\r\n                            <div class=\"e-card-header\">\r\n                                <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                                    <div class=\"e-card-sub-title\" style=\"color: #000000; font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                        ${productsArray[index].name}\r\n                                    </div>\r\n                        <div style=\"color: gold; font-size: 0.6em !important; white-space: nowrap !important; \r\n                        text-overflow: ellipsis; overflow: hidden;\">\r\n                        ${Math.floor(kendo.parseFloat(productsArray[index].average_rating)) > 0 ? \r\n                            `<ons-icon icon=\"md-star\" fixed-width></ons-icon>`.\r\n                        repeat(Math.floor(kendo.parseFloat(productsArray[index].average_rating))):\r\n                            `<ons-icon icon=\"md-star-outline\" style=\"color: lightgray\" fixed-width></ons-icon>`.repeat(5)}\r\n                            <span style=\"display: inline-block; color: gray;\">\r\n                            ${Math.floor(kendo.parseFloat(productsArray[index].average_rating)) > 0 ? \r\n                        `(${productsArray[index].rating_count})` : \"\"}\r\n                           </span>\r\n                        </div>\r\n                        <div class=\"e-card-sub-title\" style=\"text-align: left;\">&#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}</div>\r\n                        <div class=\"e-card-sub-title\" style=\"text-align: left; text-decoration: line-through; \r\n                        ${productsArray[index].on_sale === true ? \"visibility: visible\": \"visibility: hidden\"}\">&#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].regular_price), \"n2\")}</div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>`;\r\n\r\n                    }\r\n\r\n                    // check if the contents are to be overwritten\r\n                    if(overwriteContent === true){ // content wants to be overwritten\r\n                        $('#products-page #products-contents-container').html(productsContent);\r\n                    }\r\n                    else{ // content is NOT to be overwritten\r\n                        if(appendContent === true){ // append content\r\n                            $('#products-page #products-contents-container').append(productsContent);\r\n                        }\r\n                        else{ // prepend content\r\n                            $('#products-page #products-contents-container').prepend(productsContent);\r\n                        }\r\n                    }\r\n\r\n                    // allow infinite page scroll to be triggered\r\n                    $('#products-page').get(0)._allowInfinitePageScroll = true;\r\n                    resolve(productsArray.length); // resolve the promise with length of the productsArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method scrolls the page to the top\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollPageToTop(){\r\n            window.setTimeout(function(){\r\n                $('#products-page .page__content').animate({ scrollTop: 0 }, 400);\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks any product item from the products collection\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the 'appropriate' cached array of product items\r\n         *\r\n         * @param productPage {Integer} specifies which query page/collection from the cached products\r\n         * the clicked product item belongs to.\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async productItemClicked(productIndex, productPage){\r\n            // handle the function task in a different event queue\r\n            window.setTimeout(async function(){\r\n\r\n                try{\r\n                    // get the product items collection\r\n                    let productItemsArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData((\"\" + productPage).padStart(7, \"0\") + \"products\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n\r\n                    // display the products details page using the selected product\r\n                    $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : productItemsArray[productIndex]}});\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Product Details page\r\n     */\r\n    productDetailsPageViewModel: {\r\n\r\n        /**\r\n         * holds the object which contains the current product and its details\r\n         */\r\n        currentProductDetails: null,\r\n\r\n        /**\r\n         * holds the index position (within the productVaritionsArray) of the\r\n         * current product variation selected by the user\r\n         */\r\n        currentProductVariationIndex: -1,\r\n\r\n        /**\r\n         * holds the product variations array\r\n         */\r\n        productVariationsArray: [],\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#product-details-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#product-details-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#product-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#product-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#product-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n                    // create the \"Pick Quantity\" button\r\n                    new ej.inputs.NumericTextBox({\r\n                        cssClass: 'product-details-quantity-class',\r\n                        currency: null,\r\n                        decimals: 0,\r\n                        floatLabelType: 'Auto',\r\n                        format: 'n',\r\n                        showSpinButton: false,\r\n                        min: 1,\r\n                        max: 10,\r\n                        placeholder: 'Pick Quantity',\r\n                        step: 1,\r\n                        strictMode: true,\r\n                        // sets value to the NumericTextBox\r\n                        value: 1\r\n                    }).appendTo('#product-details-quantity');\r\n\r\n                    // create the \"Add To Cart\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#product-details-add-to-cart');\r\n\r\n                    // create the \"Customise\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-brush utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#product-details-customise-product');\r\n\r\n                    // create the \"Review\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-small',\r\n                        iconCss: \"zmdi zmdi-star-outline\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo('#product-details-review');\r\n\r\n                    // create the \"Share\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-small',\r\n                        iconCss: \"zmdi zmdi-share\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo('#product-details-share');\r\n\r\n                    // create the product-rater widget. which is contained in the 'rate-product-modal'\r\n                    $('#rate-product-modal #rate-product-rater-widget').rateYo({\r\n                        starWidth: \"20px\",\r\n                        normalFill: \"#808080\",\r\n                        ratedFill: \"#F39C12\",\r\n                        numStars: 5,\r\n                        precision: 0,\r\n                        rating: 0,\r\n                        fullStar: true,\r\n                        spacing: \"10px\",\r\n                        onChange: async function(ratingValue, ratingWidgetInstance){\r\n                            // enable the the comment input and \"Rate\" button\r\n                            $('#rate-product-modal #rate-product-comment').removeAttr(\"disabled\");\r\n                            $('#rate-product-modal #rate-product-rate-button').removeAttr(\"disabled\");\r\n                        }\r\n                    });\r\n\r\n                    // load product variations asynchronously without waiting for the response\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.loadProductVariations();\r\n                    // load product details\r\n                    let productDetailsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.loadProduct();\r\n                    // display the loaded product details\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.displayProductDetails(productDetailsArray[0]);\r\n                    // enable the \"Add To Cart\" button\r\n                    $('#product-details-page #product-details-add-to-cart').removeAttr(\"disabled\");\r\n\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the preloader\r\n                    $('#product-details-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update cart count\r\n            $('#product-details-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustResize');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.currentProductDetails = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.currentProductVariationIndex = -1;\r\n            // reset the product variations array\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.productVariationsArray = [];\r\n\r\n            // destroy the ej2 components on the page\r\n            $('#product-details-quantity').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-review').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-share').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-add-to-cart').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-customise-product').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy any product variation dropdown list\r\n            $('#product-details-page .product-details-variation-option').each(function(index, element){\r\n                element.ej2_instances[0].destroy(); // destroy the dropdown list component\r\n            });\r\n\r\n            // destroy the product rater widget\r\n            $(\"#rate-product-modal #rate-product-rater-widget\").rateYo(\"destroy\");\r\n\r\n            // reset the review comment textarea\r\n            $('#rate-product-modal #rate-product-comment').val(\"\");\r\n            $('#rate-product-modal #rate-product-comment').attr(\"disabled\", true);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // get the pages stack from the app main navigator\r\n            var pagesStackArray = $('#app-main-navigator').get(0).pages;\r\n\r\n            // check that there is more than 1 page in the stack\r\n            if(pagesStackArray.length > 1){ // there is more than 1 page in the page stack\r\n                // get the previous Page in stack before this one\r\n                let previousPage = $(pagesStackArray[pagesStackArray.length - 2]).get(0);\r\n\r\n                // check which page has is being displayed AFTER a page was popped\r\n                switch(previousPage.id){\r\n                    case \"app-main-page\": // the page that is being displayed is the \"App-Main\" page\r\n                        // check which page on the app-main tab is visible\r\n                        if($('#app-main-tabbar').get(0).getActiveTabIndex() === 4){ // the \"Products\" page is visible\r\n                            // get back to the previous page on the app-main navigator stack\r\n                            // and set the 'resetPageDisplay' to false\r\n                            $('#app-main-navigator').get(0)._resetPageDisplay = false;\r\n                            // allow infinite page scroll to be triggered on the \"Products\" page\r\n                            $('#products-page').get(0)._allowInfinitePageScroll = true;\r\n                            $('#app-main-navigator').get(0).popPage();\r\n                        }\r\n                        else{\r\n                            // get back to the previous page on the app-main navigator stack\r\n                            $('#app-main-navigator').get(0).popPage();\r\n                        }\r\n                        break;\r\n                    default:\r\n                        // get back to the previous page on the app-main navigator stack\r\n                        $('#app-main-navigator').get(0).popPage();\r\n                        break\r\n                }\r\n            }\r\n            else{ // there is only 1 page in the stack\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Share\" button is clicked\r\n         * @returns {Promise<void>}\r\n         */\r\n        async shareButtonClicked(){\r\n            var shareOptions = {}; // holds the options for sharing\r\n            shareOptions.message = \"check out this #ShopOakExclusive product\";\r\n            shareOptions.chooserTitle = \"share product with...\";\r\n\r\n            // handle the task in a separate event block\r\n            window.setTimeout(function(){\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                    currentProductVariationIndex !== -1){ // a product variation was selected\r\n                    // get the index of the currently selected variation\r\n                    let productVariationIndex = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.currentProductVariationIndex;\r\n                    // get the currently selected product variation using the selected index\r\n                    let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        productVariationsArray[productVariationIndex];\r\n                    // update the url for the product\r\n                    shareOptions.url = productVariation.permalink;\r\n                    // update the file/image of the product to be share\r\n                    shareOptions.files = [productVariation.image && productVariation.image !== \"\"? productVariation.image.src :\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                            currentProductDetails.images[0].src];\r\n                }\r\n                else{ // no product variation was selected, so use the default product details\r\n                    shareOptions.url = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        currentProductDetails.permalink;\r\n                    // update the file/image of the product to be share\r\n                    shareOptions.files = [utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        currentProductDetails.images[0].src];\r\n                }\r\n\r\n                // also copy the text to clipboard\r\n                cordova.plugins.clipboard.copy(`${shareOptions.message} | ${shareOptions.url}`,\r\n                    function(){\r\n                        // inform the user that message has been copied to clipboard\r\n                        window.plugins.toast.showWithOptions({\r\n                            message: \"shared message copied to clipboard\",\r\n                            duration: 3000,\r\n                            position: \"center\",\r\n                            styling: {\r\n                                cornerRadius: 0,\r\n                                opacity: 1,\r\n                                backgroundColor: '#3F51B5',\r\n                                textColor: '#FFFFFF',\r\n                                textSize: 14\r\n                            }\r\n                        });\r\n                    }, function(){});\r\n                // open the device share dialog\r\n                window.plugins.socialsharing.shareWithOptions(shareOptions, function(){}, function(){});\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Rate\" button is clicked\r\n         * @returns {Promise<void>}\r\n         */\r\n        async rateButtonClicked(){\r\n\r\n            let userDetails = null; // holds the user details\r\n\r\n            // display page preloader\r\n            $('#product-details-page .page-preloader').css(\"display\", \"block\");\r\n\r\n            // check if a user has signed in\r\n            try{\r\n                // load the use details from the encrypted app database\r\n                userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n            }\r\n            catch(err){\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please sign in to rate this product`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                // hide page preloader\r\n                $('#product-details-page .page-preloader').css(\"display\", \"none\");\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to rate this product`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                // hide page preloader\r\n                $('#product-details-page .page-preloader').css(\"display\", \"none\");\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            try{\r\n                // display the page loader modal\r\n                $('#product-details-page .modal').css(\"display\", \"table\");\r\n\r\n                // check if the current user has ever purchased this product before\r\n                let ordersArray = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                            `/wp-json/wc/v3/orders`,\r\n                        type: \"get\",\r\n                        //contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: {status: \"completed\", customer: userDetails.id,\r\n                            product: utopiasoftware\r\n                                [utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                                currentProductDetails.id}\r\n                    }\r\n                ));\r\n\r\n                if(ordersArray.length === 0){ // user has NOT placed a completed order for this product before\r\n                    throw \"error\"; // throw error\r\n                }\r\n            }\r\n            catch(err){\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Sorry, you need to have purchased this product before it can be rated`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n            finally{\r\n                // hide page preloader\r\n                $('#product-details-page .page-preloader').css(\"display\", \"none\");\r\n                // hide page loader\r\n                $('#product-details-page .modal').css(\"display\", \"none\");\r\n            }\r\n\r\n            // set the handlers for the buttons on the \"Rate Product\" modal\r\n            $('#rate-product-modal #rate-product-cancel-button').get(0).onclick = async function(){ // handler for Cancel button\r\n                // hide \"Rate Product\" modal\r\n                await $('#rate-product-modal').get(0).hide();\r\n            };\r\n\r\n            $('#rate-product-modal #rate-product-rate-button').get(0).onclick = async function(){ // handler for Rate button\r\n                try{\r\n\r\n                    // hide \"Rate Product\" modal\r\n                    await $('#rate-product-modal').get(0).hide();\r\n\r\n                    // inform user that review is being sent\r\n                    $('#loader-modal-message').html(\"Sending User Review...\");\r\n                    await $('#loader-modal').get(0).show(); // show loader\r\n\r\n                    // send the user's review to the server\r\n                    await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                `/wp-json/wc/v3/products/reviews`,\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify({product_id: utopiasoftware\r\n                                    [utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                                    currentProductDetails.id, status: \"hold\",\r\n                                reviewer: userDetails.first_name, reviewer_email: userDetails.email,\r\n                                review: $('#rate-product-modal #rate-product-comment').val().trim() + \" \",\r\n                                rating: $('#rate-product-modal #rate-product-rater-widget').rateYo(\"rating\"),\r\n                                verified: true})\r\n                        }\r\n                    ));\r\n\r\n                    // reset the review widget and the review comment textarea\r\n                    $('#rate-product-modal #rate-product-rater-widget').rateYo(\"rating\", 0);\r\n                    $('#rate-product-modal #rate-product-comment').val(\"\");\r\n                    $('#rate-product-modal #rate-product-comment').attr(\"disabled\", true);\r\n\r\n                    // hide the loader\r\n                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show success\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'success-ej2-toast';\r\n                    toast.timeOut = 3500;\r\n                    toast.content = `Thank you. Your product review has been received`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                catch(err){\r\n\r\n                    // hide the loader\r\n                    await $('#loader-modal').get(0).hide(); // hide loader\r\n\r\n                    // display \"Rate Product\" modal\r\n                    await $('#rate-product-modal').get(0).show();\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3500;\r\n                    toast.content = `Error. Your product review could not be sent. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{}\r\n                // hide \"Rate Product\" modal\r\n                await $('#rate-product-modal').get(0).hide();\r\n            };\r\n\r\n            // display \"Rate Product\" modal\r\n            await $('#rate-product-modal').get(0).show();\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#product-details-page #product-details-page-pull-hook').attr(\"disabled\", true);\r\n\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            // disable the \"Add To Cart\" button\r\n            $('#product-details-page #product-details-add-to-cart').attr(\"disabled\", true);\r\n            // remove the spinner from the 'Add To Cart'\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].stop();\r\n\r\n            try{\r\n                // load product variations asynchronously without waiting for the response\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.loadProductVariations();\r\n                // load product details\r\n                let productDetailsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.loadProduct();\r\n                // display the loaded product details\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.displayProductDetails(productDetailsArray[0]);\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#product-details-page #product-details-page-pull-hook').removeAttr(\"disabled\");\r\n                // enable the \"Add To Cart\" button\r\n                $('#product-details-page #product-details-add-to-cart').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load a particular product detail.\r\n         *\r\n         * The product to be loaded can be directly passed to the page for loading OR\r\n         * the id of the product can be provided to the page, so that the product is\r\n         * retrieved from the remote server\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProduct(){\r\n            var productPromisesArray = []; // holds the array for the promises used to load the product\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to see updated product details`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            // check if all the product details were provided to the page\r\n            if($('#app-main-navigator').get(0).topPage.data.product){ // all product details were provided\r\n                let aProduct = $('#app-main-navigator').get(0).topPage.data.product; // get the product details\r\n\r\n                if(!aProduct.regular_price || aProduct.regular_price == \"\"){ // regular price was NOT set, so set it\r\n                    aProduct.regular_price = \"0.00\";\r\n                }\r\n\r\n                // set the current product to that which was provided to the page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                    currentProductDetails = aProduct;\r\n\r\n                productPromisesArray.push(Promise.resolve(aProduct)); // resolve the promise with the product details\r\n            }\r\n            else{ // at least the product id was provided\r\n                // load the requested products list from the server\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/products/${jQuery('#app-main-navigator').get(0).topPage.data.productId}`,\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true\r\n                        }\r\n                    )).then(function(product){\r\n                        if(!product.regular_price || product.regular_price == \"\"){ // regular price was NOT set, so set it\r\n                            product.regular_price = \"0.00\";\r\n                        }\r\n                        // set the current product to that which was retrieved from the server\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                            currentProductDetails = product;\r\n                        resolve(product); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            }\r\n\r\n            return Promise.all(productPromisesArray); // return a Promise which resolves when all promises resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to load a particular product variations.\r\n         *\r\n         * The product variations to be loaded is gotten from the product directly passed to the page OR\r\n         * the prduct id passed to the page\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProductVariations(){\r\n            var productPromisesArray = []; // holds the array for the promises used to load the product\r\n            var productId = null; // holds the product id\r\n\r\n            // check if all the product details were provided to the page\r\n            if($('#app-main-navigator').get(0).topPage.data.product){ // all product details were provided\r\n                // save the product id\r\n                productId = $('#app-main-navigator').get(0).topPage.data.product.id;\r\n\r\n            }\r\n            else{ // at least the product id was provided\r\n                // save the product id\r\n                productId = jQuery('#app-main-navigator').get(0).topPage.data.productId;\r\n            }\r\n\r\n            // load the requested products variations from the server\r\n            productPromisesArray.push(new Promise(function(resolve, reject){\r\n                Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/products/${productId}/variations`,\r\n                        type: \"get\",\r\n                        //contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: {page: 1, per_page: 99, status: 'publish'}\r\n                    }\r\n                )).then(function(productVariations){\r\n                    // map the retrieved variations and save the unique value for the variation.\r\n                    // The unique value is used to uniquely identify the variation\r\n                    productVariations = productVariations.map(function(currentElement, index){\r\n                        // join all options from the variation attributes to create a unique value\r\n                        currentElement._variationValue = currentElement.attributes.map(function(attribute){\r\n                            return attribute.option;\r\n                        }).join(\"\");\r\n\r\n                        return currentElement;\r\n                    });\r\n\r\n                    // save the retrieved production variations\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.productVariationsArray = productVariations;\r\n\r\n                    resolve(productVariations); // resolve the parent promise with the data gotten from the server\r\n\r\n                }).catch(function(err){ // an error occurred\r\n\r\n                    reject(err); // reject the parent promise with the error\r\n                });\r\n            }));\r\n\r\n            return Promise.all(productPromisesArray); // return a Promise which resolves when all promises resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the product details on the page\r\n         *\r\n         * @param productDetails {Object} the product object to be displayed\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayProductDetails(productDetails){\r\n            // update the product details image\r\n            $('#product-details-page .e-card-image').css(\"background-image\", `url(\"${productDetails.images[0].src}\")`);\r\n\r\n            // check if the product is on-sale\r\n            if(productDetails.on_sale === true){ // product is on-sale\r\n                $('#product-details-page .e-card-image').\r\n                html(`\r\n                <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productDetails.price) -\r\n                    kendo.parseFloat(productDetails.regular_price)) /\r\n                    kendo.parseFloat(productDetails.regular_price === \"0.00\" ?\r\n                        productDetails.price : productDetails.regular_price))\r\n                    * 100)}% OFF\r\n                 </span>`);\r\n            }\r\n\r\n            // update the product title/name\r\n            $('#product-details-page .e-card-title').html(`${productDetails.name}`);\r\n            // update product price\r\n            $('#product-details-page .product-details-price').\r\n            html(`&#x20a6;${kendo.toString(kendo.parseFloat(productDetails.price), \"n2\")}`);\r\n\r\n            // check if product is on-sale\r\n            if(productDetails.on_sale === true){ // product is on-sale\r\n                // update the regular price\r\n                $('#product-details-page .product-details-regular-price').\r\n                html(`&#x20a6;${kendo.toString(kendo.parseFloat(productDetails.regular_price), \"n2\")}`);\r\n                // make the regular price visible\r\n                $('#product-details-page .product-details-regular-price').css(\"visibility\", \"visible\");\r\n                // add 'sales' class to the quantity component\r\n                $('#product-details-quantity').get(0).ej2_instances[0].cssClass = \"product-details-quantity-class sales\";\r\n                $('#product-details-quantity').get(0).ej2_instances[0].dataBind();\r\n            }\r\n            else{ // product is NOT on-sale\r\n                // make the regular price invisible\r\n                $('#product-details-page .product-details-regular-price').css(\"visibility\", \"collapse\");\r\n                // remove 'sales' class from the quantity component\r\n                $('#product-details-quantity').get(0).ej2_instances[0].cssClass = \"product-details-quantity-class\";\r\n                $('#product-details-quantity').get(0).ej2_instances[0].dataBind();\r\n            }\r\n\r\n            // reset the product details quantity numeric input field\r\n            $('#product-details-quantity').get(0).ej2_instances[0].value = 1;\r\n            $('#product-details-quantity').get(0).ej2_instances[0].dataBind();\r\n\r\n            // update the product details description\r\n            $('#product-details-page .product-details-description').html(`${productDetails.short_description}`);\r\n\r\n            // destroy any previous product variation dropdown list that may previously exist before creating the new ones\r\n            $('#product-details-page .product-details-variation-option').each(function(index, element){\r\n                element.ej2_instances[0].destroy(); // destroy the dropdown list component\r\n            });\r\n\r\n            // add/update product details variation\r\n            // expand the variations content\r\n            $('#product-details-page .product-details-variations').removeClass('expandable-content');\r\n            let variationContent = ''; // holds the product details variation content\r\n            for(let index = 0; index < productDetails.attributes.length; index++){\r\n                // create the product details variations\r\n                variationContent += `<div class=\"col-xs-4\" style=\"padding-right: 5px; padding-left: 5px;\">\r\n                    <select name=\"${productDetails.attributes[index].name}\" class=\"product-details-variation-option\">\r\n                        ${productDetails.attributes[index].options.map(function(arrayElem){\r\n                            return `<option value=\"${arrayElem}\">${arrayElem}</option>`;\r\n                }).join(\"\")}\r\n                    </select>\r\n                </div>`;\r\n            }\r\n            // insert the created Select inputs to the page\r\n            $('#product-details-page .product-details-variations').html(variationContent);\r\n\r\n            // create the dropdown list from each of the select input\r\n            $('#product-details-page .product-details-variation-option').each(function(index, element){\r\n                // check if this product details has default attributes set\r\n                if(productDetails.default_attributes.length > 0){ // there are default attributes\r\n                    // set those default attributes for the variations\r\n                    $(`option[value=\"${productDetails.default_attributes[index].option}\"]`, element).attr(\"selected\", true);\r\n                }\r\n                // create the dropdown list from the select input\r\n                new ej.dropdowns.DropDownList(\r\n                    {\r\n                        cssClass: \"product-details-variation-class\",\r\n                        placeholder: productDetails.attributes[index].name,\r\n                        floatLabelType: 'Always',\r\n                        change: async function () { // listen for when dropdown list value changes\r\n                            // return a Promise which resolves when the change is completed\r\n                            return new Promise(function(resolve2, reject2){\r\n\r\n                                // handle the change in a separate event block\r\n                                window.setTimeout(async function(){\r\n                                    let concatenatedVarationValue = \"\"; // holds the concatenated variation values\r\n                                    // get the value from all the variation select-input/dropdown and concatenate them\r\n                                    $('#product-details-page .product-details-variation-option').each(function(index2, element2){\r\n                                        concatenatedVarationValue += element2.ej2_instances[0].value;\r\n                                    });\r\n\r\n                                    // since the concatenated variation value, is also what is used to uniquely identify each varition,\r\n                                    // check if there is any variation with the same unique value has the concatenated variation value.\r\n                                    // Also, assign the index position of the 'found' variation (if anty) to the current variation index property\r\n                                    let variationIndexPosition =\r\n                                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        productDetailsPageViewModel.productVariationsArray.findIndex(function(element3){\r\n                                            return concatenatedVarationValue === element3._variationValue;\r\n                                        });\r\n                                    utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                                        currentProductVariationIndex = variationIndexPosition;\r\n\r\n                                    // check if there is a product variation that matches the user's selection\r\n                                    if(utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                                        currentProductVariationIndex !== -1){ // there is a product variation\r\n                                        // get the product variation\r\n                                        let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                            productDetailsPageViewModel.productVariationsArray[variationIndexPosition];\r\n                                        // update the product details display image and price to that of the selected variation (if any)\r\n                                        if(productVariation.image && productVariation.image !== \"\"){\r\n                                            // update the product details image\r\n                                            $('#product-details-page .e-card-image').css(\"background-image\",\r\n                                                `url(\"${productVariation.image.src}\")`);\r\n                                        }\r\n                                        if(productVariation.price && productVariation.price !== \"\"){\r\n                                            // update product price\r\n                                            $('#product-details-page .product-details-price').\r\n                                            html(`&#x20a6;${kendo.toString(kendo.parseFloat(productVariation.price), \"n2\")}`);\r\n                                        }\r\n                                    }\r\n\r\n                                    // resolve the parent Promise object to signified that change is completed\r\n                                    resolve2();\r\n\r\n                                }, 0);\r\n                            });\r\n                        }\r\n                    }).appendTo(element);\r\n            });\r\n\r\n            // collapse the variations content\r\n            $('#product-details-page .product-details-variations').addClass('expandable-content');\r\n\r\n            // update the rating for the product details\r\n            $('#product-details-page .product-details-rating').\r\n            html(`\r\n            ${Math.floor(kendo.parseFloat(productDetails.average_rating)) > 0 ?\r\n                '<ons-icon icon=\"md-star\" fixed-width></ons-icon>'.\r\n                repeat(Math.floor(kendo.parseFloat(productDetails.average_rating))) :\r\n                '<ons-icon icon=\"md-star-outline\" style=\"color: lightgray\" fixed-width></ons-icon>'.repeat(5)}\r\n                <span style=\"display: inline-block; color: gray;\">\r\n                ${Math.floor(kendo.parseFloat(productDetails.average_rating)) > 0 ? \r\n                `(${productDetails.rating_count})` : \"\"}\r\n                </span>\r\n            `);\r\n\r\n            // update the extra/more details for the product\r\n            $('#product-details-page .product-details-more-description').html(`\r\n            ${productDetails.description}`);\r\n\r\n            // update the dimensions for the product details\r\n            $('#product-details-page .product-details-dimensions').html(`\r\n            <span class=\"list-item__subtitle\" style=\"display: block\">length - ${!productDetails.dimensions.length ||\r\n            productDetails.dimensions.length == \"\" ? \"(Not Available)\" : `${productDetails.dimensions.length}`}</span>\r\n            <span class=\"list-item__subtitle\" style=\"display: block\">width - ${!productDetails.dimensions.width ||\r\n            productDetails.dimensions.width == \"\" ? \"(Not Available)\" : `${productDetails.dimensions.width}`}</span>\r\n            <span class=\"list-item__subtitle\" style=\"display: block\">height - ${!productDetails.dimensions.height ||\r\n            productDetails.dimensions.height == \"\" ? \"(Not Available)\" : `${productDetails.dimensions.height}`}</span>`);\r\n\r\n            // update the weight for the product\r\n            $('#product-details-page .product-details-weight').html(`${!productDetails.weight ||\r\n            productDetails.weight == \"\" ? \"(Not Available)\" : `${productDetails.weight}`}`);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the customise button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async customiseButtonClicked(){\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please connect to the Internet to customise product`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // perform the method task in a separate event block\r\n            window.setTimeout(async function(){\r\n                var productUrl = \"\"; // holds the url for the product being customised\r\n\r\n                // check if the user has selected a product variation or if the default product is being customised\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                    currentProductVariationIndex !== -1){ // a product variation was selected\r\n                    // get the index position of the selected variation\r\n                    let variationIndex = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        currentProductVariationIndex;\r\n                    // get the production variation object\r\n                    let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        productVariationsArray[variationIndex];\r\n                    productUrl = productVariation.permalink; // set the product url\r\n                }\r\n                else{ // no product variation was selected, so use the default product details\r\n                    productUrl = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.currentProductDetails.permalink; // set the product url\r\n                }\r\n\r\n                // load the \"Customise Product\" page to the app-main-navigator\r\n                await $('#app-main-navigator').get(0).pushPage(\"customise-product-page.html\");\r\n                // load the product customisation url\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    customiseProductPageViewModel.loadProductCustomisation(productUrl);\r\n\r\n            }, 0);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Add To Cart\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async addToCartButtonClicked(){\r\n\r\n            // disable the \"Add To Cart\" button\r\n            $('#product-details-page #product-details-add-to-cart').attr(\"disabled\", true);\r\n            // add the spinner from the 'Add To Cart'\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].cssClass = '';\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].start();\r\n\r\n            // perform the task of including the product into the local cart in a separate event block\r\n            window.setTimeout(async function(){\r\n                let localCart = []; // holds the local cart collection\r\n                let utopiasoftwareCartObject = {cartData: {}}; // holds the object whose properties make up the cart item\r\n\r\n                // get the cached user cart\r\n                try{\r\n                    localCart = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.loadData(\"user-cart\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n                }\r\n                catch(err){}\r\n\r\n                // check if a product variation was selected\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.currentProductVariationIndex !== -1){ // a product variation was selected\r\n                    // get the selected product variation index position and the accompanying variation object\r\n                    let variationIndex = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.currentProductVariationIndex;\r\n                    let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.productVariationsArray[variationIndex];\r\n\r\n                    utopiasoftwareCartObject.cartData.variation_id = productVariation.id;\r\n\r\n                    // get the search parameters object from the product variation url\r\n                    let searchParams = new URLSearchParams(productVariation.permalink.split(\"?\")[1]);\r\n                    // get the variation attributes from searchParams object and assign them in cartData object\r\n                    utopiasoftwareCartObject.cartData.variation = {};\r\n                    for(let [key, value] of searchParams){\r\n                        utopiasoftwareCartObject.cartData.variation[key] = value;\r\n                    }\r\n\r\n                    // store the product variation object as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.productVariation = productVariation;\r\n                }\r\n                // set the other properties of the cart data\r\n                utopiasoftwareCartObject.cartData.product_id = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.currentProductDetails.id;\r\n                utopiasoftwareCartObject.cartData.quantity = $('#product-details-quantity').get(0).ej2_instances[0].value;\r\n\r\n                // store the product object as additional data just for the mobile app\r\n                utopiasoftwareCartObject.product = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.currentProductDetails;\r\n                // store a unique local-cart uid to identify the product\r\n                utopiasoftwareCartObject.uid = Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine);\r\n\r\n                try{\r\n                    // add the created 'utopiasoftwareCartObject' to the user cart collection\r\n                    localCart.push(utopiasoftwareCartObject);\r\n                    // save the updated cached user cart\r\n                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                        {_id: \"user-cart\", docType: \"USER_CART\", cart: localCart},\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                    // inform the user that the product has been added to cart\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'success-ej2-toast';\r\n                    toast.timeOut = 2000;\r\n                    toast.content = `Product has been added to your cart`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n\r\n                    console.log(\"USER CART OBJECT\", utopiasoftwareCartObject);\r\n                }\r\n                catch(err){\r\n                    console.log(\"PRODUCT DETAILS ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3500;\r\n                    toast.content = `Error adding product to your cart. Try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // enable the \"Add To Cart\" button\r\n                    $('#product-details-page #product-details-add-to-cart').removeAttr(\"disabled\");\r\n                    // hide the spinner from the 'Add To Cart'\r\n                    $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                    $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n                    $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].stop();\r\n                }\r\n\r\n            }, 0);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Customise Product page\r\n     */\r\n    customiseProductPageViewModel: {\r\n\r\n        /**\r\n         * holds the current customisation url that has been loaded\r\n         */\r\n        currentCustomisationUrl : \"\",\r\n\r\n        /**\r\n         * holds the remote/server cart item key for the current customised product\r\n         */\r\n        currentCustomisationCartKey: null,\r\n\r\n        /**\r\n         * holds the number of times the customisation page has been loaded from the parent server\r\n         */\r\n        customisationPageLoadCount: 0,\r\n\r\n        /**\r\n         * holds the fixed-length queue containing the previous cart object and the new/update cart object.\r\n         * The queue can only contain a max of 2 items. older items are pushed out first.\r\n         * The initial cart object is also gotten the first time this app page is loaded or refreshed\r\n         */\r\n        cartsQueue: [],\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        customiseProductPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#customise-product-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        customiseProductPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for listening to messages from the parent site\r\n                window.addEventListener(\"message\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    customiseProductPageViewModel.receiveMessageListener, false);\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#customise-product-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#customise-product-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#customise-product-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#customise-product-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n\r\n                    // create the \"Cancel\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-shopping-cart-add utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#customise-product-cancel');\r\n\r\n                    // create the \"Add To Cart\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#customise-product-add-to-cart');\r\n\r\n\r\n                }\r\n                catch(err){\r\n                    console.log(\"CUSTOMISATION ERROR\", err);\r\n                }\r\n                finally {\r\n\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // update cart count\r\n            $('#customise-product-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // reset the current customisation url\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.currentCustomisationUrl = \"\";\r\n            // reset the current customisation remote cart item key\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.currentCustomisationCartKey = null;\r\n            // reset the customisation page load count\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.customisationPageLoadCount = 0;\r\n            // reset the cartsQueue\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.cartsQueue = [];\r\n\r\n            // remove listener for listening to messages from the parent site\r\n            window.removeEventListener(\"message\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.receiveMessageListener, false);\r\n\r\n            $('#customise-product-cancel').get(0).ej2_instances[0].destroy();\r\n            $('#customise-product-add-to-cart').get(0).ej2_instances[0].destroy();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n            $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to customise product\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to handle the receipt of messages from the parent website\r\n         *\r\n         * @param receiveEvent {Event} this is the event object of the \"Message\" event\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async receiveMessageListener(receiveEvent){\r\n            // check where the message originated from\r\n            if(receiveEvent.origin !== \"https://shopoakexclusive.com\"){ // message is not from the parent website\r\n                return; // exit\r\n            }\r\n\r\n            // check the data that was sent\r\n            if(receiveEvent.data === \"page ready\"){ // parent site is ready to work together\r\n                // update the customisation page load count by 1\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                    customisationPageLoadCount += 1;\r\n                // remove the page preloader\r\n                $('#customise-product-page .page-preloader').css(\"display\", \"none\");\r\n                return;\r\n            }\r\n            else{ // the page sent cart data\r\n                // access the cart data\r\n                let cartData = JSON.parse(receiveEvent.data);\r\n                if(Array.isArray(cartData)){ // the cart data is an array, therefore it's empty\r\n                    // push an empty object into the cart queue property\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.cartsQueue.\r\n                    push({});\r\n                }\r\n                else{ // cart data is not an array\r\n                    // push the cart data into the cart queue\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.cartsQueue.\r\n                    push(cartData);\r\n                }\r\n\r\n                // check if the cartQueue property is greater than its maximum allowed length of 2\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                    cartsQueue.length > 2){ // cartQueue property is greater than 2 elements\r\n                    // remove the oldest element from the queue\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                        cartsQueue.shift();\r\n                }\r\n\r\n                // save the customised product to local cart cache (do this in a separate event queue)\r\n                window.setTimeout(utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                saveCustomisedProductToCart, 0);\r\n\r\n                // enable the \"Add To Cart\" button\r\n                $('#customise-product-page #customise-product-add-to-cart').removeAttr(\"disabled\");\r\n                // hide the spinner on the 'Add To Cart'\r\n                $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n                $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].stop();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // show the page preloader\r\n            $('#customise-product-page .page-preloader').css(\"display\", \"block\");\r\n            // disable the \"Add To Cart\" button\r\n            $('#customise-product-page #customise-product-add-to-cart').attr(\"disabled\", true);\r\n            // remove the spinner from the 'Add To Cart'\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].stop();\r\n\r\n            // hide page loader\r\n            $('#customise-product-page #customise-product-page-iframe-container .modal').css(\"display\", \"none\");\r\n\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#customise-product-page #customise-product-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // reload the current product customisation url  & current remote cart item key into the iframe\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n               customiseProductPageViewModel.\r\n                loadProductCustomisation(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    customiseProductPageViewModel.currentCustomisationUrl,\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        customiseProductPageViewModel.currentCustomisationCartKey);\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                window.setTimeout(function(){ // wait for 2 sec before declaring loading done\r\n                    // enable pull-to-refresh widget till loading is done\r\n                    $('#customise-product-page #customise-product-page-pull-hook').removeAttr(\"disabled\");\r\n                    // signal that loading is done\r\n                    doneCallBack();\r\n                }, 2000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load a particular product/product variation customisation.\r\n         *\r\n         * @param customisationUrl {String} holds the url for the product to be customised\r\n         *\r\n         * @param remoteCartItemKey {String} holds the remote cart item key for the\r\n         * product being customised\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProductCustomisation(customisationUrl = utopiasoftware[utopiasoftware_app_namespace].\r\n            controller.customiseProductPageViewModel.currentCustomisationUrl, remoteCartItemKey){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please connect to the Internet to customise product and Pull Down to refresh`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // display the page preloader\r\n            $('#customise-product-page .page-preloader').css(\"display\", \"block\");\r\n\r\n            // check if the 'remoteCartItemKey' has been provided\r\n            if(remoteCartItemKey){ // the remote cart item key was provided\r\n                if(customisationUrl.indexOf(\"?\") < 0){ // there are NO previous query parameters\r\n                    // attach the cart item key to the available customisation url & load it\r\n                    // load the specified url into the customisation iframe\r\n                    $('#customise-product-page #customise-product-page-iframe').attr(\"src\",\r\n                        customisationUrl + `?cart_item_key=${window.encodeURIComponent(remoteCartItemKey)}`);\r\n                }\r\n                else{ // there are previous query parameters\r\n                    // attach the cart item key to the previous query parameters and load the customisation url\r\n                    // load the specified url into the customisation iframe\r\n                    $('#customise-product-page #customise-product-page-iframe').attr(\"src\",\r\n                        customisationUrl + `&cart_item_key=${window.encodeURIComponent(remoteCartItemKey)}`);\r\n                }\r\n            }\r\n            else{ // NO remote cart item key was provided\r\n                // load the specified url (as is) into the customisation iframe\r\n                $('#customise-product-page #customise-product-page-iframe').attr(\"src\", customisationUrl);\r\n            }\r\n\r\n            // update the current customisation url\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                currentCustomisationUrl = customisationUrl;\r\n\r\n            // update the current remote/server cart item key for the product being customised\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                currentCustomisationCartKey = remoteCartItemKey;\r\n\r\n            // reset the page load count and cartsQueue properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                customisationPageLoadCount = 0;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.cartsQueue = [];\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * method is used to compare the cartQueue property and saves the latest customised product to\r\n         * local cart cache in the app database\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async saveCustomisedProductToCart(){\r\n            // get the previous remote cart object and the new/updated remote cart object\r\n            let previousCartObject = utopiasoftware[utopiasoftware_app_namespace].\r\n                controller.customiseProductPageViewModel.cartsQueue[0];\r\n            let updatedCartObject = utopiasoftware[utopiasoftware_app_namespace].\r\n                controller.customiseProductPageViewModel.cartsQueue[1];\r\n\r\n            // get the latest customised product by comparing the properties of the updateCartObject with the previousCartObject\r\n            for(let property in updatedCartObject){\r\n                // check if this property in the updateCartObject exist in th epreviousCartObject\r\n                if(! previousCartObject[property]){ // property does not exist in the previousCartObject, so this property belongs to the latest customised product\r\n                    // get the latest customised product\r\n                    let customisedProduct = updatedCartObject[property];\r\n\r\n                    console.log(\"CUSTOMISED PRODUCT\", customisedProduct);\r\n\r\n                    let localCart = []; // holds the local cart collection\r\n                    let utopiasoftwareCartObject = {cartData: {}}; // holds the object whose properties make up the cart item\r\n\r\n                    // get the cached user cart\r\n                    try{\r\n                        localCart = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.loadData(\"user-cart\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n\r\n                        // check if this is a save of an \"edited\" previously customised product\r\n                        if(utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                            currentCustomisationCartKey){ // since a current customisation cart key exist, this is an update\r\n\r\n                            // get the utopiasoftwareCartObject for the old customised product being updated.\r\n                            // This old object will be replaced by the newly customised product, so delete it from app local cache/database\r\n                            let customisedIndex = localCart.findIndex(function(cartObject){\r\n                                return cartObject.anon_cart_key === utopiasoftware[utopiasoftware_app_namespace].\r\n                                    controller.customiseProductPageViewModel.currentCustomisationCartKey;\r\n                            });\r\n                            localCart.splice(customisedIndex, 1); // delete the old customised product\r\n                        }\r\n                    }\r\n                    catch(err){}\r\n\r\n                    // set the other properties of the cart data\r\n                    utopiasoftwareCartObject.cartData.product_id = customisedProduct.product_id;\r\n                    utopiasoftwareCartObject.cartData.quantity = customisedProduct.quantity;\r\n                    utopiasoftwareCartObject.cartData.variation_id = customisedProduct.variation_id;\r\n                    utopiasoftwareCartObject.cartData.variation = customisedProduct.variation;\r\n                    utopiasoftwareCartObject.cartData.cart_item_data = {fpd_data: customisedProduct.fpd_data}; // holds the fancy product designer data\r\n\r\n                    // store the cart key used to identify the customised product as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.anon_cart_key = customisedProduct.key;\r\n                    // store the name of the customised product as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.product_name = customisedProduct.product_name;\r\n                    // store the cutomisationUrl of this product as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.customisationUrl = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        customiseProductPageViewModel.currentCustomisationUrl;\r\n                    // store a unique local-cart uid to identify the product just for the mobile app\r\n                    utopiasoftwareCartObject.uid = Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine);\r\n\r\n                    try{\r\n                        // add the created 'utopiasoftwareCartObject' to the user cart collection\r\n                        localCart.push(utopiasoftwareCartObject);\r\n                        // save the updated cached user cart\r\n                        await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"user-cart\", docType: \"USER_CART\", cart: localCart},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        // inform the user that the product has been added to cart\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'success-ej2-toast';\r\n                        toast.timeOut = 2000;\r\n                        toast.content = `Customised product has been added to your cart`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    catch(err){\r\n                        console.log(\"CUSTOMISE PRODUCT ERROR\", err);\r\n\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'error-ej2-toast';\r\n                        toast.timeOut = 3500;\r\n                        toast.content = `Error adding customised product to your cart. Try again`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n\r\n                    }\r\n                    finally{\r\n                        // check if this is a save of an \"edited\" previously customised product\r\n                        if(utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                            currentCustomisationCartKey){ // since a current customisation cart key exist, this is an update\r\n                            // update the 'currentCustomisationCartKey' property with the key of the newly customised product\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                                currentCustomisationCartKey = customisedProduct.key;\r\n                        }\r\n\r\n                        // hide page loader after saving the customised product to user cart\r\n                        $('#customise-product-page #customise-product-page-iframe-container .modal').css(\"display\", \"none\");\r\n                    }\r\n\r\n                    break; // break the for-loop since the latest customised product has been found\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Add To Cart\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async addToCartButtonClicked(){\r\n\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please connect to the Internet to add customised product to cart`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // show the spinner on the 'Add To Cart' button to indicate process is ongoing\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].cssClass = '';\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].start();\r\n\r\n            // display page loader while completing the \"add to cart\" request\r\n            $('#customise-product-page #customise-product-page-iframe-container .modal').css(\"display\", \"table\");\r\n\r\n            // call the method to submit the product customisation form located in the iframe window\r\n            $('#customise-product-page #customise-product-page-iframe').get(0).contentWindow.utopiasoftware_addUsage();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the View Cart page\r\n     */\r\n    viewCartPageViewModel: {\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#view-cart-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#view-cart-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#view-cart-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#view-cart-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#view-cart-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n                    // create the \"Checkout\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#view-cart-checkout');\r\n\r\n                }\r\n                catch(err){\r\n\r\n                    console.log(\"VIEW-CART PAGE\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred. Pull down to refresh`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update cart count\r\n            $('#view-cart-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustResize');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy View Cart button\r\n            $('#view-cart-checkout').get(0).ej2_instances[0].destroy();\r\n            // destroy all the \"Edit\" buttons on the View Cart page\r\n            $(\"#view-cart-page .view-cart-edit-button\").each(function(index, element){\r\n                // destroy the \"Edit\" button\r\n                element.ej2_instances[0].destroy();\r\n            });\r\n\r\n            // destroy all the \"Remove\" buttons required for the View Cart page\r\n            $(\"#view-cart-page .view-cart-remove-button\").each(function(index, element){\r\n                // destroy the \"Remove\" button\r\n                element.ej2_instances[0].destroy();\r\n            });\r\n\r\n            // destroy all the \"Quantity\" input required for the View Cart page\r\n            $(\"#view-cart-page .view-cart-quantity-input\").each(function(index, element){\r\n                // destroy the \"Quantity\" input\r\n                element.ej2_instances[0].destroy();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#view-cart-page #view-cart-page-pull-hook').attr(\"disabled\", true);\r\n\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            // disable the \"Checkout\" button\r\n            $('#view-cart-page #view-cart-checkout').attr(\"disabled\", true);\r\n            // remove the spinner from the 'Add To Cart'\r\n            $('#view-cart-page #view-cart-checkout').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n            $('#view-cart-page #view-cart-checkout').get(0).ej2_instances[0].dataBind();\r\n            $('#view-cart-page #view-cart-checkout').get(0).ej2_instances[0].stop();\r\n\r\n            try{\r\n                // display the loaded product details\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.displayUserCart();\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#view-cart-page #view-cart-page-pull-hook').removeAttr(\"disabled\");\r\n                // enable the \"Checkout\" button\r\n                $('#view-cart-page #view-cart-checkout').removeAttr(\"disabled\");\r\n                // hide the preloader\r\n                $('#view-cart-page .page-preloader').css(\"display\", \"none\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to display the user cart on the View Cart page.\r\n         * @param localCart {Array}\r\n         *\r\n         * @returns Promise\r\n         */\r\n        async displayUserCart(localCart){\r\n            var displayContent = \"\"; // holds the cart content to be displayed\r\n            try{\r\n\r\n                try{\r\n                    // get the localCart from the parameter passed OR from the the cached loCart from app database\r\n                    localCart = localCart || (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"user-cart\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n                }\r\n                catch(err){\r\n                    // if error occurred during local cart retrieval\r\n                    localCart = []; // set localCart to empty array\r\n                }\r\n\r\n                if(localCart.length === 0){ // localCart is empty\r\n                    // display message to inform user that cart is empty\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'default-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Your cart is empty. Go order some products!`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n\r\n                    return; // exit method\r\n                }\r\n\r\n                // destroy all the \"Edit\" buttons on the View Cart page\r\n                $(\"#view-cart-page .view-cart-edit-button\").each(function(index, element){\r\n                    // destroy the \"Edit\" button\r\n                    element.ej2_instances[0].destroy();\r\n                });\r\n\r\n                // destroy all the \"Remove\" buttons required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-remove-button\").each(function(index, element){\r\n                    // destroy the \"Remove\" button\r\n                    element.ej2_instances[0].destroy();\r\n                });\r\n\r\n                // destroy all the \"Quantity\" input required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-quantity-input\").each(function(index, element){\r\n                    // destroy the \"Quantity\" input\r\n                    element.ej2_instances[0].destroy();\r\n                });\r\n\r\n                // display the contents of the cart using a for-loop\r\n                for(let index = 0; index < localCart.length; index++){\r\n                    displayContent +=\r\n                        `<div class=\"col-xs-12\" style=\"border-bottom: 1px lightgray solid\" \r\n                            data-utopiasoftware-product-uid=\"${localCart[index].uid}\">\r\n                        <div class=\"e-card e-card-horizontal\">`;\r\n\r\n                    if(localCart[index].anon_cart_key){ // this item is a customised product\r\n                        displayContent +=\r\n                            `<div class=\"e-card-image\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 30%;\r\n                            min-height: 100%; \r\n                            background-image: url('${localCart[index].cartData.cart_item_data.fpd_data.fpd_product_thumbnail}');\">\r\n                            </div>\r\n                            <div class=\"e-card-stacked\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 70%\">\r\n                            <div class=\"e-card-header\" style=\"padding: 0\">\r\n                            <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                ${localCart[index].product_name}\r\n                            </div>\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 11px; text-align: center; text-transform: capitalize\">\r\n                                &#x20a6;${kendo.toString(localCart[index].cartData.quantity * kendo.parseFloat(localCart[index].cartData.cart_item_data.fpd_data.fpd_product_price), \"n2\")}\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"e-card-content row\" style=\"padding: 0;\">\r\n                            <div class=\"col-xs-3\">\r\n                                <button type=\"button\" class=\"view-cart-edit-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\" \r\n                                        onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        viewCartPageViewModel.\r\n                                        editCartItemButtonClicked('${localCart[index].customisationUrl}', \r\n                                        '${localCart[index].anon_cart_key}')\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-4\">\r\n                                <button type=\"button\" class=\"view-cart-remove-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\" \r\n                                        onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        viewCartPageViewModel.deleteCartItemButtonClicked('${localCart[index].uid}')\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-5\">\r\n                                <input class=\"view-cart-quantity-input\" type=\"number\" style=\"padding-top: 2px;\" \r\n                                value=\"${localCart[index].cartData.quantity}\" \r\n                                data-utopiasoftware-product-uid=\"${localCart[index].uid}\">\r\n                            </div>\r\n                            </div>\r\n                            </div>`;\r\n                    }\r\n                    else if(localCart[index].productVariation){ // this product was NOT saved with customisation, but has variations\r\n                        displayContent +=\r\n                            `<div class=\"e-card-image\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 30%;\r\n                            min-height: 100%; \r\n                            background-image: \r\n                            url('${localCart[index].productVariation.image && localCart[index].productVariation.image !== \"\" ?\r\n                                localCart[index].productVariation.image.src : localCart[index].product.images[0].src}');\">\r\n                            </div>\r\n                            <div class=\"e-card-stacked\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 70%\">\r\n                            <div class=\"e-card-header\" style=\"padding: 0\">\r\n                            <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                ${localCart[index].product.name}\r\n                            </div>\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 11px; text-align: center; text-transform: capitalize\">\r\n                                &#x20a6;${kendo.toString(localCart[index].cartData.quantity * kendo.parseFloat((localCart[index].productVariation.price && localCart[index].productVariation.price !== \"\" ?\r\n                                localCart[index].productVariation.price : localCart[index].product.price)), \"n2\")}\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"e-card-content row\" style=\"padding: 0;\">\r\n                            <div class=\"col-xs-3\">\r\n                            </div>\r\n                            <div class=\"col-xs-4\">\r\n                                <button type=\"button\" class=\"view-cart-remove-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\" \r\n                                        onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        viewCartPageViewModel.deleteCartItemButtonClicked('${localCart[index].uid}')\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-5\">\r\n                                <input class=\"view-cart-quantity-input\" type=\"number\" style=\"padding-top: 2px;\" \r\n                                value=\"${localCart[index].cartData.quantity}\" \r\n                                data-utopiasoftware-product-uid=\"${localCart[index].uid}\">\r\n                            </div>\r\n                            </div>\r\n                            </div>`;\r\n                    }\r\n                    else if(! localCart[index].productVariation) { // this product was NOT ssaved with customisation, and has NO variations\r\n                        displayContent +=\r\n                            `<div class=\"e-card-image\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 30%;\r\n                            min-height: 100%; \r\n                            background-image: url('${localCart[index].product.images[0].src}');\">\r\n                            </div>\r\n                            <div class=\"e-card-stacked\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 70%\">\r\n                            <div class=\"e-card-header\" style=\"padding: 0\">\r\n                            <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                ${localCart[index].product.name}\r\n                            </div>\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 11px; text-align: center; text-transform: capitalize\">\r\n                                &#x20a6;${kendo.toString(localCart[index].cartData.quantity * kendo.parseFloat(localCart[index].product.price), \"n2\")}\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"e-card-content row\" style=\"padding: 0;\">\r\n                            <div class=\"col-xs-3\">                          \r\n                            </div>\r\n                            <div class=\"col-xs-4\">\r\n                                <button type=\"button\" class=\"view-cart-remove-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\" \r\n                                        onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        viewCartPageViewModel.deleteCartItemButtonClicked('${localCart[index].uid}')\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-5\">\r\n                                <input class=\"view-cart-quantity-input\" type=\"number\" style=\"padding-top: 2px;\" \r\n                                value=\"${localCart[index].cartData.quantity}\" \r\n                                data-utopiasoftware-product-uid=\"${localCart[index].uid}\">\r\n                            </div>\r\n                            </div>\r\n                            </div>`;\r\n                    }\r\n\r\n                    displayContent +=\r\n                        `</div>\r\n                         </div>`;\r\n                }\r\n\r\n                // attach the displayContent to the page\r\n                $('#view-cart-page #view-cart-contents-container').html(displayContent);\r\n\r\n                // create all the \"Edit\" buttons required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-edit-button\").each(function(index, element){\r\n                    // create the \"Edit\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-round',\r\n                        iconCss: \"zmdi zmdi-edit utopiasoftware-icon-zoom-one-point-two\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo(element);\r\n                });\r\n\r\n                // create all the \"Remove\" buttons required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-remove-button\").each(function(index, element){\r\n                    // create the \"Remove\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-round',\r\n                        iconCss: \"zmdi zmdi-delete utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo(element);\r\n                });\r\n\r\n                // create all the \"Quantity\" input required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-quantity-input\").each(function(index, element){\r\n                    new ej.inputs.NumericTextBox({\r\n                        value: element.value,\r\n                        cssClass: 'view-cart-quantity-input-class',\r\n                        currency: null,\r\n                        decimals: 0,\r\n                        floatLabelType: 'Auto',\r\n                        format: 'n',\r\n                        showSpinButton: true,\r\n                        min: 1,\r\n                        max: 10,\r\n                        placeholder: ' ',\r\n                        step: 1,\r\n                        strictMode: true,\r\n                        width: '60%',\r\n                        // sets value to the NumericTextBox\r\n                        value: 1,\r\n                        change: function(){ // track changes in the quantity numeric input for every product\r\n                            let currentQuantityValue = this.value; // holds the current quantity value from the numeric input\r\n                            let product_uid = $(element).attr('data-utopiasoftware-product-uid');\r\n                            // dissplay page preloader\r\n                            $('#view-cart-page .page-preloader').css(\"display\", \"block\");\r\n\r\n                            // handle task in a separate event block\r\n                            window.setTimeout(async function(){\r\n                                try {\r\n\r\n                                    // find the product to be updated within the app localCart\r\n                                    let selectedProduct = localCart.find(function(productElement){\r\n                                        return productElement.uid === product_uid;\r\n                                    });\r\n                                    // update the quantity for the selected product\r\n                                    selectedProduct.cartData.quantity = currentQuantityValue;\r\n                                    // save the updated localCart object to the app cache/persistent storage\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                        {_id: \"user-cart\", docType: \"USER_CART\", cart: localCart},\r\n                                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                                    // display the updated user cart\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                    viewCartPageViewModel.displayUserCart(localCart);\r\n\r\n                                    // inform the user that the product has been added to cart\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast to show that an error\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'success-ej2-toast';\r\n                                    toast.timeOut = 2000;\r\n                                    toast.content = `Product quantity updated`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                                catch(err){\r\n                                    console.log(\"UPDATE PRODUCT QUANTITY\", err);\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast to show that an error occurred\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'error-ej2-toast';\r\n                                    toast.timeOut = 3500;\r\n                                    toast.content = `Product quantity not updated. Try again`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                                finally{\r\n                                    // hide page preloader\r\n                                    $('#view-cart-page .page-preloader').css(\"display\", \"none\");\r\n                                }\r\n\r\n                            }, 0);\r\n                        }\r\n                    }).appendTo(element);\r\n                });\r\n\r\n\r\n                // update the total price of items displayed\r\n                $('#view-cart-page #view-cart-total-price').html(`&#x20a6;${kendo.toString(\r\n                    utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.viewCartPageViewModel.calculateCartTotalPrice(localCart), \"n2\")}`);\r\n            }\r\n            finally{\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is a utility/helper function used to view/load and display the user's cart\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async viewCartPage(){\r\n\r\n            try{\r\n                // load the View Cart page\r\n                await $('#app-main-navigator').get(0).bringPageTop(\"view-cart-page.html\");\r\n                // display the user cart\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.displayUserCart();\r\n                // enable the checkout button\r\n                $('#view-cart-page #view-cart-checkout').removeAttr(\"disabled\");\r\n            }\r\n            catch(err){\r\n                console.log(\"VIEW-CART PAGE\", err);\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = `Sorry, an error occurred. Pull down to refresh`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally {\r\n                // hide the preloader\r\n                $('#view-cart-page .page-preloader').css(\"display\", \"none\");\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is a utility function used to calculate the approximate total process of all items in\r\n         * a user's local cart\r\n         *\r\n         * @param localCart {Array} containing an array of items in the user's local cart\r\n         *\r\n         * @returns {number} the total price for all the items contained in cart\r\n         */\r\n        calculateCartTotalPrice(localCart = []){\r\n\r\n            if(localCart.length === 0){ // this is an empty cart, so just return 0\r\n                return 0.00;\r\n            }\r\n\r\n            // run an array reduce function which gets the sub-total price of each item in the cart by multiplying their\r\n            // quantity by the unit price. Then adding all sub-totals to get the total price\r\n\r\n            return localCart.reduce(function(accumulator, currentElement, currentIndex, thisArray){\r\n\r\n                console.log(\"ACCUMULATOR\", accumulator);\r\n                console.log(\"CURRENT INDEX\", currentIndex);\r\n                // check the types of products in the cart\r\n                if(currentElement.anon_cart_key){ // this item is a customised product\r\n                    // multiply the product unit price with the specified quantity and add the to the current cumulative total\r\n                    return accumulator + (currentElement.cartData.quantity *\r\n                        kendo.parseFloat(currentElement.cartData.cart_item_data.fpd_data.fpd_product_price));\r\n                }\r\n                else if(currentElement.productVariation){ // this product was NOT saved with customisation, but has variations\r\n                    // multiply the product unit price with the specified quantity and add the to the current cumulative total\r\n                    return accumulator + (currentElement.cartData.quantity *\r\n                    kendo.parseFloat((currentElement.productVariation.price && currentElement.productVariation.price !== \"\" ?\r\n                        currentElement.productVariation.price : currentElement.product.price)));\r\n                }\r\n                else if(! currentElement.productVariation) { // this product was NOT saved with customisation, and has NO variations\r\n                    // multiply the product unit price with the specified quantity and add the to the current cumulative total\r\n                    return accumulator + (currentElement.cartData.quantity * kendo.parseFloat(currentElement.product.price));\r\n                }\r\n\r\n            }, 0);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Delete/Remove\" cart item button (attached to each product on the\r\n         * View Cart page) is clicked.\r\n         *\r\n         * @param productUId {String} the unique uid created for each product in\r\n         * the user's local cart. This identifies the product to be deleted from cart\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async deleteCartItemButtonClicked (productUId = \"\"){\r\n\r\n            // attach functions to handle the \"Reject/No\" and \"Accept/Yes\" buttons click event.\r\n            // These buttons are located in the 'Delete Cart Item Action Sheet'.\r\n            // Click event handlers must always be defined for these buttons when using this action sheet\r\n\r\n            // function for \"Reject/No\" button\r\n            $('#view-cart-page-delete-cart-item-action-sheet #view-cart-page-delete-cart-item-no').get(0).onclick =\r\n                async function(){\r\n                    // hide the action sheet\r\n                    await document.getElementById('view-cart-page-delete-cart-item-action-sheet').hide();\r\n                };\r\n\r\n            // function for \"Accept/Yes\" button\r\n            $('#view-cart-page-delete-cart-item-action-sheet #view-cart-page-delete-cart-item-yes').get(0).onclick =\r\n                async function(){\r\n                    let localCart = []; // holds the local cart array\r\n                    try{\r\n\r\n                        // display page preloader\r\n                        $('#view-cart-page .page-preloader').css(\"display\", \"block\");\r\n                        // hide the action sheet\r\n                        await document.getElementById('view-cart-page-delete-cart-item-action-sheet').hide();\r\n\r\n                        try{\r\n                            // get the localCart from the cached localCart of the app database\r\n                            localCart = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                            loadData(\"user-cart\",\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n                        }\r\n                        catch(err){}\r\n\r\n                        // get the product to be deleted from the cart\r\n                        let productIndex = localCart.findIndex(function(productElement, index){\r\n                            // check if this is the product being search for by comparing the product uid\r\n                            return productUId === productElement.uid;\r\n                        });\r\n\r\n                        // check if a product was found\r\n                        if(productIndex !== -1){ // product was found\r\n                            // delete the product from localCart\r\n                            localCart.splice(productIndex, 1);\r\n                        }\r\n\r\n                        // save the updated cart\r\n                        await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"user-cart\", docType: \"USER_CART\", cart: localCart},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        // hide from display, the cart item belonging to the deleted product\r\n                        let $cartDisplayedItem = $(`#view-cart-page .col-xs-12[data-utopiasoftware-product-uid=\"${productUId}\"]`);\r\n                        await kendo.fx($cartDisplayedItem).expand(\"vertical\").duration(250).reverse();\r\n                        // update the total price of items displayed\r\n                        $('#view-cart-page #view-cart-total-price').html(`&#x20a6;${kendo.toString(\r\n                            utopiasoftware[utopiasoftware_app_namespace].\r\n                            controller.viewCartPageViewModel.calculateCartTotalPrice(localCart), \"n2\")}`);\r\n\r\n                        // inform the user that the product has been removed from cart\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 2000;\r\n                        toast.content = `Product has been deleted from your cart`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    catch(err){\r\n                        console.log(\"DELETE CART ERROR\", err);\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'error-ej2-toast';\r\n                        toast.timeOut = 3500;\r\n                        toast.content = `Error deleting product from your cart. Try again`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    finally {\r\n                        // hide page preloader\r\n                        $('#view-cart-page .page-preloader').css(\"display\", \"none\");\r\n                    }\r\n                };\r\n\r\n            // display the delete confirmation dialog\r\n            await document.getElementById('view-cart-page-delete-cart-item-action-sheet').show();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Edit\" cart item button (attached to each product on the\r\n         * View Cart page) is clicked.\r\n         *\r\n         * @param productUrl {String} holds the remote/server url for the product desired to be edited\r\n         *\r\n         * @param cartItemKey {String} holds the remote/server cart key for this product/cart-item\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async editCartItemButtonClicked(productUrl, cartItemKey){\r\n\r\n            // load the \"Customise Product\" page to the app-main-navigator\r\n            await $('#app-main-navigator').get(0).bringPageTop(\"customise-product-page.html\");\r\n            // load the product customisation url\r\n            await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n            customiseProductPageViewModel.loadProductCustomisation(productUrl, cartItemKey);\r\n        },\r\n\r\n        /**\r\n         * method is triggerd when the \"Check Out\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async checkoutButtonClicked(){\r\n\r\n            let userDetails = null; // holds the user details\r\n\r\n            // check if a user has signed in\r\n            try{\r\n                // load the use details from the encrypted app database\r\n                userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n            }\r\n            catch(err){\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please sign in to checkout your cart`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                // send the user to the sign in page\r\n                $('#app-main-navigator').get(0).pushPage('login-page.html');\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // check if the user has any item in cart\r\n            try{\r\n                let localCart = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-cart\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n                if(localCart.length === 0){ // no item in user cart\r\n                    throw \"error\"; // throw error\r\n                }\r\n            }\r\n            catch(err){\r\n                // display message to inform user that cart is empty\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Your cart is empty. Go order some products!`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // check if a billing address has been provided\r\n            if(userDetails.billing.address_1 == \"\"){ // no billing address has been provided\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please update your billing address to checkout your cart`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                $('#app-main-navigator').get(0).pushPage('billing-info-page.html');\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to checkout your cart`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // show the app loader modal\r\n            $('#loader-modal-message').html(\"Preparing Checkout...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            // create the user's order object\r\n            var orderData = {\r\n                status: \"pending\", currency: \"NGN\", customer_id: userDetails.id, billing: userDetails.billing,\r\n                shipping: userDetails.shipping, line_items: []\r\n            };\r\n\r\n            try {\r\n                // get the current user's local cart\r\n                let userCart = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.loadData(\"user-cart\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n\r\n                // loop through the user cart item to create the order items\r\n                for(let index = 0; index < userCart.length; index++){\r\n                    orderData.line_items[index] = userCart[index].cartData;\r\n\r\n                    // add the product name to the order line item\r\n                    if(userCart[index].product){ // this product was added to cart without customisation\r\n                        orderData.line_items[index].name = userCart[index].product.name; // add the product name\r\n                        // calculate the subtotal & total for this line item\r\n                        orderData.line_items[index].subtotal =\r\n                            \"\" + kendo.parseFloat(userCart[index].product.price) * orderData.line_items[index].quantity;\r\n                        orderData.line_items[index].total =\r\n                            \"\" + kendo.parseFloat(userCart[index].product.price) * orderData.line_items[index].quantity;\r\n                    }\r\n                    else{ // this product was added to cart via customisation\r\n                        orderData.line_items[index].name = userCart[index].product_name; // add the product name\r\n                    }\r\n\r\n                    orderData.line_items[index].meta_data = []; // create the meta-data array for each order line item\r\n\r\n                    // check if the product being ordered has a variation\r\n                    if(userCart[index].cartData.variation_id){ // this product has a variation\r\n                        if(!userCart[index].cartData.cart_item_data){ // if the product has no customisation data\r\n                            // calculate the subtotal & total for this line item\r\n                            orderData.line_items[index].subtotal =\r\n                            \"\" + kendo.parseFloat(userCart[index].productVariation.price) * orderData.line_items[index].quantity;\r\n                            orderData.line_items[index].total =\r\n                                \"\" + kendo.parseFloat(userCart[index].productVariation.price) * orderData.line_items[index].quantity;\r\n                        }\r\n\r\n                        // add the variation attributes to the line item meta data\r\n                        for(let key in userCart[index].cartData.variation){\r\n\r\n                            orderData.line_items[index].meta_data.push({\r\n                                // add the variation attributes for this product to the line items meta-data array.\r\n                                // the meta-data object key value is gotten by splitting the variation key\r\n                                key: key.split(\"_\")[1],\r\n                                value: userCart[index].cartData.variation[key]\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    // check if the product has any customisation data to attach\r\n                    if(userCart[index].cartData.cart_item_data){\r\n                        console.log(\"ORDER ITEM\", userCart[index].cartData);\r\n                        // calculate the subtotal & total for this line item\r\n                        orderData.line_items[index].subtotal =\r\n                            \"\" + kendo.parseFloat(userCart[index].cartData.cart_item_data.fpd_data.fpd_product_price)\r\n                            * orderData.line_items[index].quantity;\r\n                        orderData.line_items[index].total =\r\n                            \"\" + kendo.parseFloat(userCart[index].cartData.cart_item_data.fpd_data.fpd_product_price)\r\n                            * orderData.line_items[index].quantity;\r\n\r\n                        orderData.line_items[index].meta_data.push({\r\n                            // add the customisation data for this product to the line items meta-data array.\r\n                            key: \"_fpd_data\",\r\n                            value: userCart[index].cartData.cart_item_data.fpd_data.fpd_product\r\n                        }, {\r\n                            // add the customisation data for this product to the line items meta-data array.\r\n                            key: \"_fpd_print_order\",\r\n                            value: userCart[index].cartData.cart_item_data.fpd_data.fpd_print_order\r\n                        });\r\n\r\n                        // delete the 'cart_item_data' property from the line item because it is not needed for submisssion\r\n                        delete orderData.line_items[index].cart_item_data;\r\n                    }\r\n                }\r\n\r\n                console.log(\"ORDER DATA\", orderData);\r\n\r\n                // create the order on the remote server\r\n                orderData = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/orders`,\r\n                        type: \"post\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(orderData)\r\n                    }\r\n                ));\r\n\r\n                // check if the checkout page has previously been displayed in the app-main navigator\r\n                var pagesStackArray = $('#app-main-navigator').get(0).pages; // holds the array of pages in the app-main navigator\r\n                var indexOfCheckoutPage = pagesStackArray.findIndex(function(page, pageIndex){\r\n                    // test if the page is the checkout page\r\n                    return $(pagesStackArray[pageIndex]).get(0).id === \"checkout-page\";\r\n                });\r\n\r\n                // check if the checkout page was found in the app-main navigator stack\r\n                if(indexOfCheckoutPage > -1){ // checkout page was found\r\n                    // remove the checkout page from the app-main navigator before re-displaying it\r\n                    await $('#app-main-navigator').get(0).removePage(indexOfCheckoutPage);\r\n                }\r\n                // display the checkout page using the selected order\r\n                await $('#app-main-navigator').get(0).pushPage(\"checkout-page.html\", {data: {orderData}});\r\n            }\r\n            catch(err){\r\n                err = JSON.parse(err.responseText);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Checkout failed. ${err.message || \"\"}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // hide the app loader\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Profile page\r\n     */\r\n    profilePageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the profile form\r\n         */\r\n        profileFormValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        profilePageViewModel.backButtonClicked;\r\n\r\n                // initialise the profile form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidator =\r\n                    $('#profile-page #profile-form').parsley();\r\n\r\n                // listen for profile form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#profile-page #profile-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for profile form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#profile-page #profile-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for profile form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidated);\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#profile-page .content').on(\"scroll\", utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.profilePageViewModel.scrollAndResizeEventListener);\r\n\r\n\r\n                try{\r\n\r\n                    // create the tooltip objects for the profile form\r\n                    $('#profile-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopLeft',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#profile-page #profile-form').get(0));\r\n                    });\r\n\r\n                    // create the \"Cancel\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-shopping-cart-add utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#profile-cancel');\r\n\r\n                    // create the \"Update\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#profile-update');\r\n\r\n                    // display the user's profile on the profile form\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.displayProfileContent();\r\n                }\r\n                catch(err){\r\n                    console.log(\"PROFILE ERROR\", err);\r\n                }\r\n                finally {\r\n\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // update cart count\r\n            $('#profile-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            //add listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.addEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                profilePageViewModel.scrollAndResizeEventListener, false);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // hide the tooltips on the profile form\r\n            $('#profile-page #profile-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // reset all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidator.reset();\r\n\r\n            //remove listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.removeEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                profilePageViewModel.scrollAndResizeEventListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the tooltips on the profile form\r\n            $('#profile-page #profile-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // destroy the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the \"Cancel\" and \"Update\" buttons\r\n            $('#profile-page #profile-cancel').get(0).ej2_instances[0].destroy();\r\n            $('#profile-page #profile-update').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidator.destroy();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the profile page is scrolled or the display window is resized by\r\n         * virtue of the device keyboard being displayed\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollAndResizeEventListener(){\r\n            // place function execution in the event queue to be executed ASAP\r\n            window.setTimeout(function(){\r\n                // adjust the tooltips elements on the profile form\r\n                $(\"#profile-page #profile-form ons-input\").each(function(index, element){\r\n                    document.getElementById('profile-form').ej2_instances[index].refresh(element);\r\n                });\r\n\r\n            }, 0);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Update\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async updateButtonClicked(){\r\n\r\n            // run the validation method for the profile form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.profilePageViewModel.profileFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the profile form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async profileFormValidated(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to update your profile`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // disable the \"Update\" button\r\n            $('#profile-page #profile-update').attr(\"disabled\", true);\r\n            // show the spinner on the 'Update' button to indicate process is ongoing\r\n            $('#profile-page #profile-update').get(0).ej2_instances[0].cssClass = '';\r\n            $('#profile-page #profile-update').get(0).ej2_instances[0].dataBind();\r\n            $('#profile-page #profile-update').get(0).ej2_instances[0].start();\r\n\r\n            // display page loader while completing the \"update profile\" request\r\n            $('#profile-page .modal').css(\"display\", \"table\");\r\n\r\n            var promisesArray = []; // holds the array for the promises used to complete the process\r\n\r\n            var promisesArrayPromise = null; // holds the promise gotten from the promisesArray\r\n\r\n            try{\r\n                // load the use details from the encrypted app database\r\n                let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                console.log(\"USER DETAILS BEFORE PROFILE UPDATE\", userDetails);\r\n\r\n                // temporary hold the user id and password\r\n                let userId = userDetails.id;\r\n                let userPassword = userDetails.password;\r\n\r\n                // use the input from the profile form to update the user details\r\n                userDetails.first_name = $('#profile-page #profile-form #profile-first-name').val().trim();\r\n                userDetails.last_name = $('#profile-page #profile-form #profile-last-name').val().trim();\r\n\r\n                // check if user details has the billing property\r\n                if(!userDetails.billing){ // no billing property, so create it\r\n                    // create the billing property\r\n                    userDetails.billing = {};\r\n                }\r\n\r\n                // set the billing email to the email of the user\r\n                userDetails.billing.email = $('#profile-page #profile-form #profile-email').val().trim();\r\n                // set the billing first name and last name to that of the user\r\n                userDetails.billing.first_name = userDetails.first_name;\r\n                userDetails.billing.last_name = userDetails.last_name;\r\n\r\n                // update the user phone number\r\n                userDetails.billing.phone = $('#profile-page #profile-form #profile-phone-number').val().trim();\r\n                if(userDetails.billing.phone.startsWith(\"0\")){ // phone number starts with zero\r\n                    // replace the starting zero with '+234'\r\n                    userDetails.billing.phone = userDetails.billing.phone.replace(/0/i, \"+234\");\r\n                }\r\n\r\n                // delete the properties not needed for the update from the userDetails object\r\n                delete userDetails.id;\r\n                delete userDetails.password;\r\n\r\n                // now send the user profile update request to the remote server\r\n                promisesArray.push(Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/customers/${userId}`,\r\n                        type: \"put\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(userDetails)\r\n                    }\r\n                )));\r\n\r\n                // get the promise created from the promisesArray\r\n                promisesArrayPromise = Promise.all(promisesArray);\r\n\r\n                // get the result from the promisesArray\r\n                let resultsArray = await promisesArrayPromise;\r\n\r\n                // add the user's password to the user details retrieved from the server\r\n                resultsArray[0].password = userPassword;\r\n\r\n                // save the created user details data to ENCRYPTED app database as cached data\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails: resultsArray[0]},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'success-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `User profile updated`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n            }\r\n            catch (err) {\r\n                err = JSON.parse(err.responseText);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `User profile update failed. ${err.message || \"\"}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally {\r\n                // enable the \"Update\" button\r\n                $('#profile-page #profile-update').removeAttr(\"disabled\");\r\n                // hide the spinner on the 'Update' button to indicate process is ongoing\r\n                $('#profile-page #profile-update').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#profile-page #profile-update').get(0).ej2_instances[0].dataBind();\r\n                $('#profile-page #profile-update').get(0).ej2_instances[0].stop();\r\n\r\n                // hide page loader\r\n                $('#profile-page .modal').css(\"display\", \"none\");\r\n            }\r\n\r\n            return promisesArrayPromise; // return the resolved promisesArray\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to load the current user profile data into the profile form\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayProfileContent(){\r\n\r\n            try{\r\n                // load the user profile details from the app database\r\n                let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                console.log(\"USER DETAILS\", userDetails);\r\n\r\n                // display the user profile data in the profile form\r\n                $('#profile-page #profile-form #profile-email').val(userDetails.email);\r\n                $('#profile-page #profile-form #profile-first-name').val(userDetails.first_name || \"\");\r\n                $('#profile-page #profile-form #profile-last-name').val(userDetails.last_name || \"\");\r\n                $('#profile-page #profile-form #profile-phone-number').\r\n                val(userDetails.billing && userDetails.billing.phone ? userDetails.billing.phone : \"\");\r\n            }\r\n            finally {\r\n                // hide page preloader\r\n                $('#profile-page .page-preloader').css(\"display\", \"none\");\r\n                // hide page modal loader\r\n                $('#profile-page .modal').css(\"display\", \"none\");\r\n                // enable the \"Update\" button\r\n                $('#profile-page #profile-update').removeAttr(\"disabled\");\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Change Password page\r\n     */\r\n    changePasswordPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the change password form\r\n         */\r\n        changePasswordFormValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        changePasswordPageViewModel.backButtonClicked;\r\n\r\n                // initialise the changePassword form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.changePasswordPageViewModel.changePasswordFormValidator =\r\n                    $('#change-password-page #change-password-form').parsley();\r\n\r\n                // listen for changePassword form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.changePasswordPageViewModel.\r\n                changePasswordFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#change-password-page #change-password-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for changePassword form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.changePasswordPageViewModel\r\n                    .changePasswordFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#change-password-page #change-password-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for profile form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.changePasswordPageViewModel.\r\n                changePasswordFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        changePasswordPageViewModel.changePasswordFormValidated);\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#change-password-page .content').on(\"scroll\", utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.changePasswordPageViewModel.scrollAndResizeEventListener);\r\n\r\n\r\n                try{\r\n\r\n                    // create the tooltip objects for the changePassword form\r\n                    $('#change-password-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopLeft',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#change-password-page #change-password-form').get(0));\r\n                    });\r\n\r\n                    // create the button for switching password visibility on the signup page\r\n                    new ej.buttons.Button({\r\n                        isToggle: true,\r\n                        cssClass: 'e-flat e-small e-round',\r\n                        iconCss: \"zmdi zmdi-eye\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo($('#change-password-view-button', $thisPage).get(0));\r\n\r\n                    // create the \"Cancel\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-shopping-cart-add utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#change-password-cancel');\r\n\r\n                    // create the \"Update\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#change-password-update');\r\n\r\n                }\r\n                catch(err){\r\n                    console.log(\"CHANGE PASSWORD ERROR\", err);\r\n                }\r\n                finally {\r\n                    // hide the page preloader\r\n                    $('#change-password-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide page loader\r\n                    $('#change-password-page .modal').css(\"display\", \"none\");\r\n                    // enable the update button\r\n                    $('#change-password-page #change-password-update').removeAttr(\"disabled\");\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // update cart count\r\n            $('#change-password-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            //add listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.addEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                changePasswordPageViewModel.scrollAndResizeEventListener, false);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // hide the tooltips on the changePassword form\r\n            $('#change-password-page #change-password-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // reset all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.changePasswordPageViewModel.\r\n            changePasswordFormValidator.reset();\r\n\r\n            //remove listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.removeEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                changePasswordPageViewModel.scrollAndResizeEventListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the tooltips on the changePassword form\r\n            $('#change-password-page #change-password-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // destroy the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the \"Cancel\" and \"Update\" buttons\r\n            $('#change-password-page #change-password-cancel').get(0).ej2_instances[0].destroy();\r\n            $('#change-password-page #change-password-update').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the password visibility button\r\n            $('#change-password-page #change-password-view-button').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.changePasswordPageViewModel.\r\n            changePasswordFormValidator.destroy();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Password Visibility button is clicked\r\n         *\r\n         * @param buttonElement {HTMLElement} button element being clicked\r\n         *\r\n         * @param inputId {String} the id for the input whose content visibility is being changed\r\n         */\r\n        passwordVisibilityButtonClicked(buttonElement, inputId){\r\n\r\n            // check the state of the button is it 'active' or not\r\n            if(! $(buttonElement).hasClass('e-active')){ // button is not active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"text\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye-off';\r\n                ej2Button.dataBind();\r\n            }\r\n            else{ // button is active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"password\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye';\r\n                ej2Button.dataBind();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the profile page is scrolled or the display window is resized by\r\n         * virtue of the device keyboard being displayed\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollAndResizeEventListener(){\r\n            // place function execution in the event queue to be executed ASAP\r\n            window.setTimeout(function(){\r\n                // adjust the tooltips elements on the changePassword form\r\n                $(\"#change-password-page #change-password-form ons-input\").each(function(index, element){\r\n                    document.getElementById('change-password-form').ej2_instances[index].refresh(element);\r\n                });\r\n\r\n            }, 0);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Update\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async updateButtonClicked(){\r\n\r\n            // run the validation method for the profile form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.changePasswordPageViewModel.\r\n            changePasswordFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the changePassword form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async changePasswordFormValidated(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to change password`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // disable the \"Update\" button\r\n            $('#change-password-page #change-password-update').attr(\"disabled\", true);\r\n            // show the spinner on the 'Update' button to indicate process is ongoing\r\n            $('#change-password-page #change-password-update').get(0).ej2_instances[0].cssClass = '';\r\n            $('#change-password-page #change-password-update').get(0).ej2_instances[0].dataBind();\r\n            $('#change-password-page #change-password-update').get(0).ej2_instances[0].start();\r\n\r\n            // display page loader while completing the \"update profile\" request\r\n            $('#change-password-page .modal').css(\"display\", \"table\");\r\n\r\n            var promisesArray = []; // holds the array for the promises used to complete the process\r\n\r\n            var promisesArrayPromise = null; // holds the promise gotten from the promisesArray\r\n\r\n            try{\r\n                // load the use details from the encrypted app database\r\n                let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                console.log(\"USER DETAILS BEFORE PASSWORD CHANGE\", userDetails);\r\n\r\n                // check if the current password input matches that in the current user password\r\n                try{\r\n                    await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json\",\r\n                            type: \"get\",\r\n                            // contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    Base64.encode(`${userDetails.email}:${jQuery('#change-password-current-password').val().trim()}`));\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false\r\n                        }\r\n                    ));\r\n                }\r\n                catch(err){ // if an error occurs, it meanns the inputed current password DOES NOT MATCH the current user password\r\n                    // throw an error object because user current password does not match\r\n                    throw {responseText: JSON.stringify({message: \"current password is incorrect.\"})};\r\n                }\r\n\r\n                // temporary hold the user id\r\n                let userId = userDetails.id;\r\n                // delete the billing and shipping info from the userData object being updated because it's not needed.\r\n                // if the password change is successful, the response will include\r\n                // the billing and shipping retrieved from the server.\r\n                delete userDetails.billing;\r\n                delete userDetails.shipping;\r\n\r\n                // use the new password input to change/update the user password\r\n                userDetails.password = $('#change-password-page #change-password-form #change-password-new-password').val().trim();\r\n\r\n                // now send the user profile/password change request to the remote server\r\n                promisesArray.push(Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/customers/${userId}`,\r\n                        type: \"put\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(userDetails)\r\n                    }\r\n                )));\r\n\r\n                // get the promise created from the promisesArray\r\n                promisesArrayPromise = Promise.all(promisesArray);\r\n\r\n                // get the result from the promisesArray\r\n                let resultsArray = await promisesArrayPromise;\r\n\r\n                // add the user's new password to the user details retrieved from the server\r\n                resultsArray[0].password =\r\n                    $('#change-password-page #change-password-form #change-password-new-password').val().trim();\r\n\r\n                console.log(\"PASSWORD CHANGED\", resultsArray[0]);\r\n\r\n                // save the created user details data to ENCRYPTED app database as cached data\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails: resultsArray[0]},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'success-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `User password changed`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n            }\r\n            catch (err) {\r\n                err = JSON.parse(err.responseText);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `User password change failed. ${err.message || \"\"}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally {\r\n                // enable the \"Update\" button\r\n                $('#change-password-page #change-password-update').removeAttr(\"disabled\");\r\n                // hide the spinner on the 'Update' button to indicate process is ongoing\r\n                $('#change-password-page #change-password-update').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#change-password-page #change-password-update').get(0).ej2_instances[0].dataBind();\r\n                $('#change-password-page #change-password-update').get(0).ej2_instances[0].stop();\r\n\r\n                // hide page loader\r\n                $('#change-password-page .modal').css(\"display\", \"none\");\r\n            }\r\n\r\n            return promisesArrayPromise; // return the resolved promisesArray\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Billing Info page\r\n     */\r\n    billingInfoPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the billing address form\r\n         */\r\n        billingInfoFormValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        billingInfoPageViewModel.backButtonClicked;\r\n\r\n                // initialise the billing info form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.billingInfoFormValidator =\r\n                    $('#billing-info-page #billing-info-form').parsley();\r\n\r\n                // initialise the custom validation for the billing info 'country' field\r\n                $('#billing-info-page #billing-info-form #billing-info-country').parsley({\r\n                    value: function(parsley) {\r\n                        // return the value from the dropdownlist\r\n                        return $('#billing-info-country').get(0).ej2_instances[0].value;\r\n                    }\r\n                });\r\n\r\n                // initialise the custom validation for the billing info 'state' field\r\n                $('#billing-info-page #billing-info-form #billing-info-state').parsley({\r\n                    value: function(parsley) { // function returns a 'custom' value\r\n                        // get the State dropdownlist component\r\n                        let stateDropDownList = $('#billing-info-state').get(0).ej2_instances[0];\r\n                        // check if the dropdownlist is enabled or not\r\n                        if(stateDropDownList.enabled !== true){ // dropdownlist is disabled\r\n                            return \" \"; // return an empty string\r\n                        }\r\n                        else{ // dropdownlist is enabled\r\n                            return stateDropDownList.value; // return the value from the dropdownlist\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // listen for billing form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.billingInfoFormValidator.\r\n                on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#billing-info-page #billing-info-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for billing info form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.billingInfoFormValidator.\r\n                on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#billing-info-page #billing-info-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for billing info form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.billingInfoFormValidator.\r\n                on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.billingInfoFormValidated);\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#billing-info-page .content').on(\"scroll\", utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.billingInfoPageViewModel.scrollAndResizeEventListener);\r\n\r\n\r\n                try{\r\n                    // create the \"Cancel\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-shopping-cart-add utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#billing-info-cancel');\r\n\r\n                    // create the \"Update\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#billing-info-update');\r\n\r\n                    let countryDataArray = []; // holds the array containing country objects\r\n\r\n                    // load the country data from the local list with the app\r\n                    countryDataArray = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: 'country-list.json',\r\n                            type: \"get\",\r\n                            //contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {}\r\n                        }\r\n                    ));\r\n\r\n                    // create the tooltip objects for the billing info form\r\n                    $('#billing-info-form textarea, #billing-info-form ons-input, #billing-info-form #billing-info-country, #billing-info-form #billing-info-state', $thisPage).\r\n                    each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopLeft',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#billing-info-page #billing-info-form').get(0));\r\n                    });\r\n\r\n                    // create the Country dropdown list from the select input\r\n                    new ej.dropdowns.DropDownList(\r\n                        {\r\n                            cssClass: \"billing-info-dropdownlist\",\r\n                            dataSource: countryDataArray,\r\n                            fields: { value: 'code', text: 'name'},\r\n                            placeholder: \"Country\",\r\n                            floatLabelType: 'Auto',\r\n                            value: 'NG',\r\n                            itemTemplate: '<span>${name}</span>',\r\n                            valueTemplate: '<span>${name}</span>'\r\n                        }).appendTo('#billing-info-country');\r\n\r\n                    // create the Country dropdown list from the select input\r\n                    new ej.dropdowns.DropDownList(\r\n                        {\r\n                            cssClass: \"billing-info-dropdownlist\",\r\n                            dataSource: countryDataArray.find(function(countryElement){\r\n                                return countryElement.code === \"NG\";\r\n                            }).states,\r\n                            fields: { value: 'code', text: 'name'},\r\n                            placeholder: \"State\",\r\n                            floatLabelType: 'Auto',\r\n                            itemTemplate: '<span>${name}</span>',\r\n                            valueTemplate: '<span>${name}</span>',\r\n                            select: async function () { // listen for when dropdown list value is changed by selection\r\n\r\n                                // handle method task in a different event block\r\n                                window.setTimeout(function(){\r\n                                    $('#billing-info-page #billing-info-form').get(0).\r\n                                        ej2_instances[$('#billing-info-state').get(0)._utopiasoftware_validator_index].close();\r\n                                    // call the method used to trigger the form validation\r\n                                    /*utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                    billingInfoPageViewModel.updateButtonClicked()*/\r\n                                }, 0);\r\n                            }\r\n                        }).appendTo('#billing-info-state');\r\n\r\n                    // display the billing info on the billing info form\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.displayContent();\r\n                }\r\n                catch(err){\r\n                    console.log(\"BILLING ADDRESS ERROR\", err);\r\n                }\r\n                finally {\r\n\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // update cart count\r\n            $('#billing-info-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            //add listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.addEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                billingInfoPageViewModel.scrollAndResizeEventListener, false);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // hide the tooltips on the profile form\r\n            $('#billing-info-page #billing-info-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // reset all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.billingInfoFormValidator.reset();\r\n\r\n            //remove listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.removeEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                billingInfoPageViewModel.scrollAndResizeEventListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the tooltips on the profile form\r\n            $('#billing-info-page #billing-info-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // destroy the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the Country & State DropDownLists\r\n            $('#billing-info-page #billing-info-country').get(0).ej2_instances[0].destroy();\r\n            $('#billing-info-page #billing-info-state').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the \"Cancel\" and \"Update\" buttons\r\n            $('#billing-info-page #billing-info-cancel').get(0).ej2_instances[0].destroy();\r\n            $('#billing-info-page #billing-info-update').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.billingInfoFormValidator.destroy();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the profile page is scrolled or the display window is resized by\r\n         * virtue of the device keyboard being displayed\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollAndResizeEventListener(){\r\n            // place function execution in the event queue to be executed ASAP\r\n            window.setTimeout(function(){\r\n                // adjust the tooltips elements on the profile form\r\n                $('#billing-info-form textarea, #billing-info-form ons-input, #billing-info-form #billing-info-country, #billing-info-form #billing-info-state').\r\n                each(function(index, element){\r\n                    document.getElementById('billing-info-form').ej2_instances[index].refresh(element);\r\n                });\r\n\r\n            }, 0);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Update\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async updateButtonClicked(){\r\n\r\n            // run the validation method for the billing-info form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.billingInfoPageViewModel.\r\n            billingInfoFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the billing-info form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async billingInfoFormValidated(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to update your billing address`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // disable the \"Update\" button\r\n            $('#billing-info-page #billing-info-update').attr(\"disabled\", true);\r\n            // show the spinner on the 'Update' button to indicate process is ongoing\r\n            $('#billing-info-page #billing-info-update').get(0).ej2_instances[0].cssClass = '';\r\n            $('#billing-info-page #billing-info-update').get(0).ej2_instances[0].dataBind();\r\n            $('#billing-info-page #billing-info-update').get(0).ej2_instances[0].start();\r\n\r\n            // display page loader while completing the \"update profile\" request\r\n            $('#billing-info-page .modal').css(\"display\", \"table\");\r\n\r\n            var promisesArray = []; // holds the array for the promises used to complete the process\r\n\r\n            var promisesArrayPromise = null; // holds the promise gotten from the promisesArray\r\n\r\n            try{\r\n                // load the use details from the encrypted app database\r\n                let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                console.log(\"USER DETAILS BEFORE BILLING INFO UPDATE\", userDetails);\r\n\r\n                // temporary hold the user id and password\r\n                let userId = userDetails.id;\r\n                let userPassword = userDetails.password;\r\n\r\n                // check if user details has the billing property\r\n                if(!userDetails.billing){ // no billing property, so create it\r\n                    // create the billing property\r\n                    userDetails.billing = {};\r\n                }\r\n\r\n                // set the billing email to the email of the user\r\n                userDetails.billing.email = userDetails.email;\r\n\r\n                // use the input from the profile form to update the user details\r\n                userDetails.billing.company = $('#billing-info-page #billing-info-company').val().trim();\r\n                userDetails.billing.address_1 = $('#billing-info-page #billing-info-address-1').val().trim();\r\n                userDetails.billing.address_2 = $('#billing-info-page #billing-info-address-2').val().trim();\r\n                userDetails.billing.postcode = $('#billing-info-page #billing-info-postcode').val().trim();\r\n                userDetails.billing.city = $('#billing-info-page #billing-info-city').val().trim();\r\n                userDetails.billing.country = $('#billing-info-page #billing-info-country').get(0).ej2_instances[0].value;\r\n                userDetails.billing.state = $('#billing-info-page #billing-info-state').get(0).ej2_instances[0].value ?\r\n                    $('#billing-info-page #billing-info-state').get(0).ej2_instances[0].value : \"\";\r\n\r\n                // delete the properties not needed for the update from the userDetails object\r\n                delete userDetails.id;\r\n                delete userDetails.password;\r\n\r\n                // now send the user profile update request to the remote server\r\n                promisesArray.push(Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/customers/${userId}`,\r\n                        type: \"put\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(userDetails)\r\n                    }\r\n                )));\r\n\r\n                // get the promise created from the promisesArray\r\n                promisesArrayPromise = Promise.all(promisesArray);\r\n\r\n                // get the result from the promisesArray\r\n                let resultsArray = await promisesArrayPromise;\r\n\r\n                // add the user's password to the user details retrieved from the server\r\n                resultsArray[0].password = userPassword;\r\n\r\n                // save the created user details data to ENCRYPTED app database as cached data\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails: resultsArray[0]},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'success-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `User billing address updated`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n            }\r\n            catch (err) {\r\n                err = JSON.parse(err.responseText);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `User billing address update failed. ${err.message || \"\"}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally {\r\n                // enable the \"Update\" button\r\n                $('#billing-info-page #billing-info-update').removeAttr(\"disabled\");\r\n                // hide the spinner on the 'Update' button to indicate process is ongoing\r\n                $('#billing-info-page #billing-info-update').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#billing-info-page #billing-info-update').get(0).ej2_instances[0].dataBind();\r\n                $('#billing-info-page #billing-info-update').get(0).ej2_instances[0].stop();\r\n\r\n                // hide page loader\r\n                $('#billing-info-page .modal').css(\"display\", \"none\");\r\n            }\r\n\r\n            return promisesArrayPromise; // return the resolved promisesArray\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to load the current billing info data into the billing info form\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayContent(){\r\n\r\n            try{\r\n                // load the user profile details from the app database\r\n                let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                console.log(\"USER DETAILS\", userDetails);\r\n\r\n                // display the user billing info data in the billing info form\r\n                $('#billing-info-page #billing-info-form #billing-info-company').\r\n                val(userDetails.billing && userDetails.billing.company ? userDetails.billing.company : \"\");\r\n                $('#billing-info-page #billing-info-form #billing-info-address-1').\r\n                val(userDetails.billing && userDetails.billing.address_1 ? userDetails.billing.address_1 : \"\");\r\n                $('#billing-info-page #billing-info-form #billing-info-address-2').\r\n                val(userDetails.billing && userDetails.billing.address_2 ? userDetails.billing.address_2 : \"\");\r\n                $('#billing-info-page #billing-info-form #billing-info-postcode').\r\n                val(userDetails.billing && userDetails.billing.postcode ? userDetails.billing.postcode : \"\");\r\n                $('#billing-info-page #billing-info-form #billing-info-city').\r\n                val(userDetails.billing && userDetails.billing.city ? userDetails.billing.city : \"\");\r\n\r\n                // get the country dropdownlist\r\n                var countryDropDownList = $('#billing-info-page #billing-info-form #billing-info-country').get(0).ej2_instances[0];\r\n                // temporarily remove the select event listener for the country dropdownlist\r\n                countryDropDownList.removeEventListener(\"select\");\r\n                // update the select dropdownlist for country\r\n                countryDropDownList.value = (userDetails.billing && userDetails.billing.country && userDetails.billing.country !== \"\")\r\n                    ? userDetails.billing.country : 'NG';\r\n                countryDropDownList.dataBind();\r\n\r\n                // update the select dropdownlist for state\r\n                let statesDropDownList = $('#billing-info-page #billing-info-form #billing-info-state').get(0).ej2_instances[0];\r\n                statesDropDownList.dataSource = countryDropDownList.dataSource.find(function(countryElement){\r\n                    return countryElement.code === countryDropDownList.value;\r\n                }).states;\r\n                statesDropDownList.dataBind();\r\n                statesDropDownList.value = (userDetails.billing && userDetails.billing.state && userDetails.billing.state !== \"\")\r\n                    ? userDetails.billing.state : null;\r\n                statesDropDownList.dataBind();\r\n                // check if the state dropdownlist has a value\r\n                if(statesDropDownList.value){ // check if the state dropdownlist has a value\r\n                    statesDropDownList.enabled = true; // enable the state dropdownlist\r\n                    statesDropDownList.dataBind();\r\n                }\r\n                else if(countryDropDownList.value === 'NG'){ // if the country selected is nigeria\r\n                    statesDropDownList.enabled = true; // enable the state dropdownlist\r\n                    statesDropDownList.dataBind();\r\n                }\r\n                else { // the state dropdown has no value and the country selected is not nigeria\r\n                    statesDropDownList.enabled = false; // disable the state dropdownlist\r\n                    statesDropDownList.dataBind();\r\n                }\r\n                console.log(\"STATE VALUE\", statesDropDownList.value);\r\n\r\n            }\r\n            finally {\r\n                // hide page preloader\r\n                $('#billing-info-page .page-preloader').css(\"display\", \"none\");\r\n                // hide page modal loader\r\n                $('#billing-info-page .modal').css(\"display\", \"none\");\r\n                // enable the \"Update\" button\r\n                $('#billing-info-page #billing-info-update').removeAttr(\"disabled\");\r\n\r\n                // reinstate the country dropdownlist \"select\" listener in a separate event block\r\n                window.setTimeout(async function(){\r\n                    // reinstate the country dropdownlist \"select\" listener\r\n                    countryDropDownList.addEventListener(\"select\", async function () { // listen for when dropdown list value is changed by selection\r\n                        let countryDropDownList = this; // holds this dropdown list\r\n\r\n                        // execute the task in a separate event block\r\n                        window.setTimeout(async function(){\r\n                            // get the country object and its states that represents the country value selected\r\n                            let countryStatesArray = countryDropDownList.getDataByValue(countryDropDownList.value).states;\r\n                            // get the state dropdownlist\r\n                            let stateDropDownList = $('#billing-info-page #billing-info-form #billing-info-state').\r\n                            get(0).ej2_instances[0];\r\n                            // reset the selected value for the State\r\n                            stateDropDownList.value = null;\r\n                            // reset the dataSource for the State\r\n                            stateDropDownList.dataSource = countryStatesArray;\r\n\r\n                            if(countryStatesArray.length > 0 ){ // there are states in the selected country\r\n                                // enable the State dropdownlist for user selection\r\n                                stateDropDownList.enabled = true;\r\n                            }\r\n                            else{ // there are NO states in the selected country\r\n                                // disable the State dropdownlist for user selection\r\n                                stateDropDownList.enabled = false;\r\n                                // since the dropdownlist is disabled, remove any tooltip that is being displayed on this component\r\n                                $('#billing-info-page #billing-info-form').get(0).\r\n                                    ej2_instances[$('#billing-info-state').get(0)._utopiasoftware_validator_index].close();\r\n                            }\r\n\r\n                            // bind/update all changes made to the State dropdownlist\r\n                            stateDropDownList.dataBind();\r\n\r\n                        }, 0);\r\n                    });\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Shipping Info page\r\n     */\r\n    shippingInfoPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the shipping info form\r\n         */\r\n        shippingInfoFormValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        shippingInfoPageViewModel.backButtonClicked;\r\n\r\n                // initialise the shipping info form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.shippingInfoFormValidator =\r\n                    $('#shipping-info-page #shipping-info-form').parsley();\r\n\r\n                // initialise the custom validation for the shipping info 'country' field\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-country').parsley({\r\n                    value: function(parsley) {\r\n                        // return the value from the dropdownlist\r\n                        return $('#shipping-info-country').get(0).ej2_instances[0].value;\r\n                    }\r\n                });\r\n\r\n                // initialise the custom validation for the shipping info 'state' field\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-state').parsley({\r\n                    value: function(parsley) { // function returns a 'custom' value\r\n                        // get the State dropdownlist component\r\n                        let stateDropDownList = $('#shipping-info-state').get(0).ej2_instances[0];\r\n                        // check if the dropdownlist is enabled or not\r\n                        if(stateDropDownList.enabled !== true){ // dropdownlist is disabled\r\n                            return \" \"; // return an empty string\r\n                        }\r\n                        else{ // dropdownlist is enabled\r\n                            return stateDropDownList.value; // return the value from the dropdownlist\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // listen for shipping form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.shippingInfoFormValidator.\r\n                on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#shipping-info-page #shipping-info-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for shipping info form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.shippingInfoFormValidator.\r\n                on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#shipping-info-page #shipping-info-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for shipping info form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.shippingInfoFormValidator.\r\n                on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.shippingInfoFormValidated);\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#shipping-info-page .content').on(\"scroll\", utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.shippingInfoPageViewModel.scrollAndResizeEventListener);\r\n\r\n\r\n                try{\r\n                    // create the \"Cancel\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-shopping-cart-add utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#shipping-info-cancel');\r\n\r\n                    // create the \"Update\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#shipping-info-update');\r\n\r\n                    let countryDataArray = []; // holds the array containing country objects\r\n\r\n                    // load the country data from the local list with the app\r\n                    countryDataArray = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: 'country-list.json',\r\n                            type: \"get\",\r\n                            //contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {}\r\n                        }\r\n                    ));\r\n\r\n                    // create the tooltip objects for the shipping info form\r\n                    $('#shipping-info-form textarea, #shipping-info-form ons-input, #shipping-info-form #shipping-info-country, #shipping-info-form #shipping-info-state', $thisPage).\r\n                    each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopLeft',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#shipping-info-page #shipping-info-form').get(0));\r\n                    });\r\n\r\n                    // create the Country dropdown list from the select input\r\n                    new ej.dropdowns.DropDownList(\r\n                        {\r\n                            cssClass: \"shipping-info-dropdownlist\",\r\n                            dataSource: countryDataArray,\r\n                            fields: { value: 'code', text: 'name'},\r\n                            placeholder: \"Country\",\r\n                            floatLabelType: 'Auto',\r\n                            value: 'NG',\r\n                            itemTemplate: '<span>${name}</span>',\r\n                            valueTemplate: '<span>${name}</span>'\r\n                        }).appendTo('#shipping-info-country');\r\n\r\n                    // create the Country dropdown list from the select input\r\n                    new ej.dropdowns.DropDownList(\r\n                        {\r\n                            cssClass: \"shipping-info-dropdownlist\",\r\n                            dataSource: countryDataArray.find(function(countryElement){\r\n                                return countryElement.code === \"NG\";\r\n                            }).states,\r\n                            fields: { value: 'code', text: 'name'},\r\n                            placeholder: \"State\",\r\n                            floatLabelType: 'Auto',\r\n                            itemTemplate: '<span>${name}</span>',\r\n                            valueTemplate: '<span>${name}</span>',\r\n                            select: async function () { // listen for when dropdown list value is changed by selection\r\n\r\n                                // handle method task in a different event block\r\n                                window.setTimeout(function(){\r\n                                    // since the dropdownlist value has changed, remove any tooltip that is being displayed on this component\r\n                                    $('#shipping-info-page #shipping-info-form').get(0).\r\n                                        ej2_instances[$('#shipping-info-state').get(0)._utopiasoftware_validator_index].close();\r\n                                }, 0);\r\n                            }\r\n                        }).appendTo('#shipping-info-state');\r\n\r\n                    // display the shipping info on the shipping info form\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.displayContent();\r\n                }\r\n                catch(err){\r\n                    console.log(\"SHIPPING INFO ERROR\", err);\r\n                }\r\n                finally {\r\n\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // update cart count\r\n            $('#shipping-info-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            //add listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.addEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                shippingInfoPageViewModel.scrollAndResizeEventListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // hide the tooltips on the profile form\r\n            $('#shipping-info-page #shipping-info-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // reset all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.shippingInfoFormValidator.reset();\r\n\r\n            //remove listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.removeEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                shippingInfoPageViewModel.scrollAndResizeEventListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the tooltips on the shipping form\r\n            $('#shipping-info-page #shipping-info-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // destroy the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the Country & State DropDownLists\r\n            $('#shipping-info-page #shipping-info-country').get(0).ej2_instances[0].destroy();\r\n            $('#shipping-info-page #shipping-info-state').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the \"Cancel\" and \"Update\" buttons\r\n            $('#shipping-info-page #shipping-info-cancel').get(0).ej2_instances[0].destroy();\r\n            $('#shipping-info-page #shipping-info-update').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.shippingInfoFormValidator.destroy();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the profile page is scrolled or the display window is resized by\r\n         * virtue of the device keyboard being displayed\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollAndResizeEventListener(){\r\n            // place function execution in the event queue to be executed ASAP\r\n            window.setTimeout(function(){\r\n                // adjust the tooltips elements on the shipping form\r\n                $('#shipping-info-form textarea, #shipping-info-form ons-input, #shipping-info-form #shipping-info-country, #shipping-info-form #shipping-info-state').\r\n                each(function(index, element){\r\n                    document.getElementById('shipping-info-form').ej2_instances[index].refresh(element);\r\n                });\r\n\r\n            }, 0);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Update\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async updateButtonClicked(){\r\n\r\n            // run the validation method for the shipping-info form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.shippingInfoPageViewModel.\r\n            shippingInfoFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the shipping-info form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async shippingInfoFormValidated(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to update shipping information`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // disable the \"Update\" button\r\n            $('#shipping-info-page #shipping-info-update').attr(\"disabled\", true);\r\n            // show the spinner on the 'Update' button to indicate process is ongoing\r\n            $('#shipping-info-page #shipping-info-update').get(0).ej2_instances[0].cssClass = '';\r\n            $('#shipping-info-page #shipping-info-update').get(0).ej2_instances[0].dataBind();\r\n            $('#shipping-info-page #shipping-info-update').get(0).ej2_instances[0].start();\r\n\r\n            // display page loader while completing the \"update profile\" request\r\n            $('#shipping-info-page .modal').css(\"display\", \"table\");\r\n\r\n            var promisesArray = []; // holds the array for the promises used to complete the process\r\n\r\n            var promisesArrayPromise = null; // holds the promise gotten from the promisesArray\r\n\r\n            try{\r\n                // load the use details from the encrypted app database\r\n                let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                console.log(\"USER DETAILS BEFORE SHIPPING INFO UPDATE\", userDetails);\r\n\r\n                // temporary hold the user id and password\r\n                let userId = userDetails.id;\r\n                let userPassword = userDetails.password;\r\n\r\n                // check if user details has the shipping property\r\n                if(!userDetails.shipping){ // no shipping property, so create it\r\n                    // create the shipping property\r\n                    userDetails.shipping = {};\r\n                }\r\n\r\n                // use the input from the shipping form to update the user details\r\n                userDetails.shipping.first_name = $('#shipping-info-page #shipping-info-first-name').val().trim();\r\n                userDetails.shipping.last_name = $('#shipping-info-page #shipping-info-last-name').val().trim();\r\n                userDetails.shipping.company = $('#shipping-info-page #shipping-info-company').val().trim();\r\n                userDetails.shipping.address_1 = $('#shipping-info-page #shipping-info-address-1').val().trim();\r\n                userDetails.shipping.address_2 = $('#shipping-info-page #shipping-info-address-2').val().trim();\r\n                userDetails.shipping.postcode = $('#shipping-info-page #shipping-info-postcode').val().trim();\r\n                userDetails.shipping.city = $('#shipping-info-page #shipping-info-city').val().trim();\r\n                userDetails.shipping.country = $('#shipping-info-page #shipping-info-country').get(0).ej2_instances[0].value;\r\n                userDetails.shipping.state = $('#shipping-info-page #shipping-info-state').get(0).ej2_instances[0].value ?\r\n                    $('#shipping-info-page #shipping-info-state').get(0).ej2_instances[0].value : \"\";\r\n\r\n                // delete the properties not needed for the update from the userDetails object\r\n                delete userDetails.id;\r\n                delete userDetails.password;\r\n\r\n                // now send the user profile update request to the remote server\r\n                promisesArray.push(Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/customers/${userId}`,\r\n                        type: \"put\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(userDetails)\r\n                    }\r\n                )));\r\n\r\n                // get the promise created from the promisesArray\r\n                promisesArrayPromise = Promise.all(promisesArray);\r\n\r\n                // get the result from the promisesArray\r\n                let resultsArray = await promisesArrayPromise;\r\n\r\n                // add the user's password to the user details retrieved from the server\r\n                resultsArray[0].password = userPassword;\r\n\r\n                // save the created user details data to ENCRYPTED app database as cached data\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"user-details\", docType: \"USER_DETAILS\", userDetails: resultsArray[0]},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'success-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Shipping information updated`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n            }\r\n            catch (err) {\r\n                err = JSON.parse(err.responseText);\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Shipping information update failed. ${err.message || \"\"}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally {\r\n                // enable the \"Update\" button\r\n                $('#shipping-info-page #shipping-info-update').removeAttr(\"disabled\");\r\n                // hide the spinner on the 'Update' button to indicate process is ongoing\r\n                $('#shipping-info-page #shipping-info-update').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#shipping-info-page #shipping-info-update').get(0).ej2_instances[0].dataBind();\r\n                $('#shipping-info-page #shipping-info-update').get(0).ej2_instances[0].stop();\r\n\r\n                // hide page loader\r\n                $('#shipping-info-page .modal').css(\"display\", \"none\");\r\n            }\r\n\r\n            return promisesArrayPromise; // return the resolved promisesArray\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to load the current shipping info data into the shipping info form\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayContent(){\r\n\r\n            try{\r\n                // load the user profile details from the app database\r\n                let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                console.log(\"USER DETAILS\", userDetails);\r\n\r\n                // display the user shipping info data in the shipping info form\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-first-name').\r\n                val(userDetails.shipping && userDetails.shipping.first_name ? userDetails.shipping.first_name : \"\");\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-last-name').\r\n                val(userDetails.shipping && userDetails.shipping.last_name ? userDetails.shipping.last_name : \"\");\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-company').\r\n                val(userDetails.shipping && userDetails.shipping.company ? userDetails.shipping.company : \"\");\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-address-1').\r\n                val(userDetails.shipping && userDetails.shipping.address_1 ? userDetails.shipping.address_1 : \"\");\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-address-2').\r\n                val(userDetails.shipping && userDetails.shipping.address_2 ? userDetails.shipping.address_2 : \"\");\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-postcode').\r\n                val(userDetails.shipping && userDetails.shipping.postcode ? userDetails.shipping.postcode : \"\");\r\n                $('#shipping-info-page #shipping-info-form #shipping-info-city').\r\n                val(userDetails.shipping && userDetails.shipping.city ? userDetails.shipping.city : \"\");\r\n\r\n                // get the country dropdownlist\r\n                var countryDropDownList = $('#shipping-info-page #shipping-info-form #shipping-info-country').get(0).ej2_instances[0];\r\n                // temporarily remove the select event listener for the country dropdownlist\r\n                countryDropDownList.removeEventListener(\"select\");\r\n                // update the select dropdownlist for country\r\n                countryDropDownList.value = (userDetails.shipping && userDetails.shipping.country && userDetails.shipping.country !== \"\")\r\n                    ? userDetails.shipping.country : 'NG';\r\n                countryDropDownList.dataBind();\r\n\r\n                // update the select dropdownlist for state\r\n                let statesDropDownList = $('#shipping-info-page #shipping-info-form #shipping-info-state').get(0).ej2_instances[0];\r\n                statesDropDownList.dataSource = countryDropDownList.dataSource.find(function(countryElement){\r\n                    return countryElement.code === countryDropDownList.value;\r\n                }).states;\r\n                statesDropDownList.dataBind();\r\n                statesDropDownList.value = (userDetails.shipping && userDetails.shipping.state && userDetails.shipping.state !== \"\")\r\n                    ? userDetails.shipping.state : null;\r\n                statesDropDownList.dataBind();\r\n                // check if the state dropdownlist has a value\r\n                if(statesDropDownList.value){ // check if the state dropdownlist has a value\r\n                    statesDropDownList.enabled = true; // enable the state dropdownlist\r\n                    statesDropDownList.dataBind();\r\n                }\r\n                else if(countryDropDownList.value === 'NG'){ // if the country selected is nigeria\r\n                    statesDropDownList.enabled = true; // enable the state dropdownlist\r\n                    statesDropDownList.dataBind();\r\n                }\r\n                else { // the state dropdown has no value and the country selected is not nigeria\r\n                    statesDropDownList.enabled = false; // disable the state dropdownlist\r\n                    statesDropDownList.dataBind();\r\n                }\r\n                console.log(\"STATE VALUE\", statesDropDownList.value);\r\n\r\n            }\r\n            finally {\r\n                // hide page preloader\r\n                $('#shipping-info-page .page-preloader').css(\"display\", \"none\");\r\n                // hide page modal loader\r\n                $('#shipping-info-page .modal').css(\"display\", \"none\");\r\n                // enable the \"Update\" button\r\n                $('#shipping-info-page #shipping-info-update').removeAttr(\"disabled\");\r\n\r\n                // reinstate the country dropdownlist \"select\" listener in a separate event block\r\n                window.setTimeout(async function(){\r\n                    // reinstate the country dropdownlist \"select\" listener\r\n                    countryDropDownList.addEventListener(\"select\", async function () { // listen for when dropdown list value is changed by selection\r\n                        let countryDropDownList = this; // holds this dropdown list\r\n\r\n                        // execute the task in a separate event block\r\n                        window.setTimeout(async function(){\r\n                            // get the country object and its states that represents the country value selected\r\n                            let countryStatesArray = countryDropDownList.getDataByValue(countryDropDownList.value).states;\r\n                            // get the state dropdownlist\r\n                            let stateDropDownList = $('#shipping-info-page #shipping-info-form #shipping-info-state').\r\n                            get(0).ej2_instances[0];\r\n                            // reset the selected value for the State\r\n                            stateDropDownList.value = null;\r\n                            // reset the dataSource for the State\r\n                            stateDropDownList.dataSource = countryStatesArray;\r\n\r\n                            if(countryStatesArray.length > 0 ){ // there are states in the selected country\r\n                                // enable the State dropdownlist for user selection\r\n                                stateDropDownList.enabled = true;\r\n                            }\r\n                            else{ // there are NO states in the selected country\r\n                                // disable the State dropdownlist for user selection\r\n                                stateDropDownList.enabled = false;\r\n                                // since the dropdownlist is disabled, remove any tooltip that is being displayed on this component\r\n                                $('#shipping-info-page #shipping-info-form').get(0).\r\n                                    ej2_instances[$('#shipping-info-state').get(0)._utopiasoftware_validator_index].close();\r\n                            }\r\n\r\n                            // bind/update all changes made to the State dropdownlist\r\n                            stateDropDownList.dataBind();\r\n\r\n                        }, 0);\r\n                    });\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Checkout page\r\n     */\r\n    checkoutPageViewModel: {\r\n\r\n\r\n        /**\r\n         * holds the user's Order object which will be sent to the server\r\n         */\r\n        chekoutOrder : null,\r\n\r\n        /**\r\n         * holds the array/list of countries where the user's shipping address can be located\r\n         */\r\n        countryArray: [],\r\n\r\n        /**\r\n         * holds the array/list of shipping zones where an order can be delivered\r\n         */\r\n        shoppingZonesArray: [],\r\n\r\n        /**\r\n         * flag whether to update the billing details for the\r\n         * checkout order data using the billing details of the current user\r\n         */\r\n        updateOrderBillingDetails: false,\r\n\r\n        /**\r\n         * flag whether to update the shipping details for the\r\n         * checkout order data using the shipping details of the current user\r\n         */\r\n        updateOrderShippingDetails: false,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        checkoutPageViewModel.backButtonClicked;\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#checkout-page .content').on(\"scroll\", utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.checkoutPageViewModel.scrollAndResizeEventListener);\r\n\r\n                // set the order object to be used by this page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder =\r\n                $('#app-main-navigator').get(0).topPage.data.orderData;\r\n\r\n                try{\r\n\r\n                    // create the accorodion ej2 component used on the \"Checkout\" page\r\n                    new ej.navigations.Accordion({\r\n                        expandMode: 'Single',\r\n                        expanded: utopiasoftware[utopiasoftware_app_namespace].\r\n                            controller.checkoutPageViewModel.scrollAndResizeEventListener\r\n                    }).appendTo('#checkout-accordion');\r\n\r\n                    // create the Shipping method dropdown list from the select input\r\n                    new ej.dropdowns.DropDownList(\r\n                        {\r\n                            cssClass: \"shipping-method-dropdownlist\",\r\n                            dataSource: [],\r\n                            fields: { value: 'method_id', text: 'title'},\r\n                            placeholder: \"Shipping Method\",\r\n                            floatLabelType: 'Auto',\r\n                            enabled: false,\r\n                            itemTemplate: '<span>${title}</span>',\r\n                            valueTemplate: '<span>${title}</span>'\r\n                        }).appendTo('#checkout-shipping-method-type');\r\n\r\n                    // create the payment method dropdown list from the select input\r\n                    new ej.dropdowns.DropDownList(\r\n                        {\r\n                            cssClass: \"payment-method-dropdownlist\",\r\n                            dataSource: [],\r\n                            fields: { value: 'id', text: 'title'},\r\n                            placeholder: \"Payment Method\",\r\n                            floatLabelType: 'Auto',\r\n                            enabled: false,\r\n                            itemTemplate: '<span>${title}</span>',\r\n                            valueTemplate: '<span>${title}</span>'\r\n                        }).appendTo('#checkout-payment-method-type');\r\n\r\n                    // create the payment voucher multiselect dropdown list from the select input\r\n                    new ej.dropdowns.MultiSelect(\r\n                        {\r\n                            cssClass: \"payment-voucher-dropdownlist\",\r\n                            dataSource: [],\r\n                            //fields: { value: 'id', text: 'method_title'},\r\n                            placeholder: \"Payment Coupons\",\r\n                            floatLabelType: 'Auto',\r\n                            mode: \"Box\",\r\n                            showClearButton: false,\r\n                            showDropDownIcon: false,\r\n                            enabled: false\r\n                        }).appendTo('#checkout-payment-vouchers');\r\n\r\n                    // create the \"Make Payment\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#checkout-make-payment');\r\n\r\n                    // create the tooltips for the checkout page\r\n                    $('.utopiasoftware-checkout-failure', $thisPage).\r\n                    each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the page element\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopCenter',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($thisPage.get(0));\r\n                    });\r\n\r\n                    //load the remote list of payment methods, list of shipping zones & local list of\r\n                    // countries for the app; create a remote user cart containing the current checkout order for the user\r\n                    let promisesArray = []; // holds all created promises\r\n\r\n                    promisesArray.push(Promise.resolve($.ajax( // load the list of payment gateways\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/payment_gateways`,\r\n                            type: \"get\",\r\n                            //contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {}\r\n                        }\r\n                    )));\r\n                    promisesArray.push(Promise.resolve($.ajax( // load the list of shipping zones\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/shipping/zones`,\r\n                            type: \"get\",\r\n                            //contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {}\r\n                        }\r\n                    )));\r\n                    promisesArray.push(Promise.resolve($.ajax( // load the list of available countries\r\n                        {\r\n                            url: 'country-list.json',\r\n                            type: \"get\",\r\n                            //contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {}\r\n                        }\r\n                    )));\r\n                    // create the user remote cart\r\n                    promisesArray.push(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    checkoutPageViewModel.createRemoteCartFromOrder());\r\n\r\n                    // wait for all promises to resolve\r\n                    promisesArray = await Promise.all(promisesArray);\r\n\r\n                    // filter only pay method that are enabled\r\n                    promisesArray[0] = promisesArray[0].filter(function(paymentElem){\r\n                        return paymentElem.enabled === true;\r\n                    });\r\n\r\n                    // assign the payment method array as the dataSource for the payment method dropdownlist\r\n                    $('#checkout-payment-method-type').get(0).ej2_instances[0].dataSource = promisesArray[0];\r\n                    $('#checkout-payment-method-type').get(0).ej2_instances[0].dataBind();\r\n\r\n                    //store the list of shipping zones as a view-model property\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        checkoutPageViewModel.shoppingZonesArray = promisesArray[1];\r\n\r\n                    //store the list of countries as a view-model property\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        checkoutPageViewModel.countryArray = promisesArray[2];\r\n\r\n                }\r\n                catch(err){\r\n                    // get back to the previous page on the app-main navigator stack\r\n                    await $('#app-main-navigator').get(0).popPage();\r\n\r\n                    console.log(\"CHECKOUT ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Error preparing checkout. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide page preloader\r\n                    $('#checkout-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide page modal loader\r\n                    $('#checkout-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: async function(){\r\n            // check if the payment method element exists on page\r\n            if($('#checkout-page #checkout-payment-method-type').length == 0){ // if length is zero, element does not exist\r\n                return; // exit the method\r\n            }\r\n\r\n            // get payment method dropdownlist component\r\n            var paymentMethodDropDown = $('#checkout-payment-method-type').get(0).ej2_instances[0];\r\n\r\n            console.log(\"CHECKOUT DATASOURCE\", paymentMethodDropDown.dataSource);\r\n\r\n\r\n            // check if the datasource for the payment method has been set\r\n            if(paymentMethodDropDown.dataSource.length == 0){ // datasource for the payment method dropdownlist has not been set\r\n                // re-execute this method again after some time\r\n                window.setTimeout(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    checkoutPageViewModel.pageShow, 500);\r\n\r\n                return;\r\n            }\r\n\r\n            window.SoftInputMode.set('adjustResize'); // adjust device input mode\r\n\r\n            //add listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.addEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                checkoutPageViewModel.scrollAndResizeEventListener, false);\r\n\r\n            // show page preloader\r\n            $('#checkout-page .page-preloader').css(\"display\", \"block\");\r\n            // show page modal loader\r\n            $('#checkout-page .modal').css(\"display\", \"table\");\r\n\r\n\r\n            try{\r\n                // display the content of the checkout page\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    checkoutPageViewModel.displayContent();\r\n            }\r\n            catch(err){\r\n                console.log(\"CHECKOUT SHOW ERROR\", err);\r\n                // hide page preloader\r\n                $('#checkout-page .page-preloader').css(\"display\", \"none\");\r\n                // hide page modal loader\r\n                $('#checkout-page .modal').css(\"display\", \"none\");\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Checkout error. Please retry or Pull Down to refresh`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n\r\n            try{\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                checkoutPageViewModel.validateOrderCheckout();\r\n            }\r\n            catch(err){\r\n                /*console.log(\"CHECKOUT SHOW ERROR\", err);\r\n                // hide page preloader\r\n                $('#checkout-page .page-preloader').css(\"display\", \"none\");\r\n                // hide page modal loader\r\n                $('#checkout-page .modal').css(\"display\", \"none\");\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast message\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Checkout error. Please retry or Pull Down to refresh`;\r\n                toast.dataBind();\r\n                toast.show();*/\r\n\r\n            }\r\n            finally {\r\n                // hide page preloader\r\n                $('#checkout-page .page-preloader').css(\"display\", \"none\");\r\n                // hide page modal loader\r\n                $('#checkout-page .modal').css(\"display\", \"none\");\r\n            }\r\n\r\n            console.log(\"END OF CHECKOUT SHOW\");\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            //add listener for when the window is resized by virtue of the device keyboard being shown\r\n            window.removeEventListener(\"resize\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                checkoutPageViewModel.scrollAndResizeEventListener, false);\r\n\r\n\r\n            // close the tooltips on the page\r\n            $('#checkout-page').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n            console.log(\"END OF CHECKOUT HIDE\");\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the shipping method dropdownlist\r\n            $('#checkout-page #checkout-shipping-method-type').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the payment method dropdownlist\r\n            $('#checkout-page #checkout-payment-method-type').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the payment voucher multiselect dropdownlist\r\n            $('#checkout-page #checkout-payment-vouchers').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the \"Make Payment\"\r\n            $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the page accordion\r\n            $('#checkout-page #checkout-accordion').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy the tooltips on the page\r\n            $('#checkout-page').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // destroy the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // reset the view-model properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.countryArray = [];\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.shoppingZonesArray = [];\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                updateOrderBillingDetails = false;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                updateOrderShippingDetails = false;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is scrolled or the display window is resized by\r\n         * virtue of the device keyboard being displayed\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollAndResizeEventListener(){\r\n            // place function execution in the event queue to be executed ASAP\r\n            window.setTimeout(function(){\r\n                // adjust the tooltips elements on the checkout page\r\n                $('#checkout-page .utopiasoftware-checkout-failure').\r\n                each(function(index, element){\r\n                    document.getElementById('checkout-page').ej2_instances[index].refresh(element);\r\n                });\r\n\r\n            }, 0);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Edit\" button for the personal details is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async editPersonalDetailsButtonClicked(){\r\n\r\n            // check if the profile page has previously been displayed in the app-main navigator\r\n            var pagesStackArray = $('#app-main-navigator').get(0).pages; // holds the array of pages in the app-main navigator\r\n            var indexOfPage = pagesStackArray.findIndex(function(page, pageIndex){\r\n                // test if the page is the profile page\r\n                return $(pagesStackArray[pageIndex]).get(0).id === \"profile-page\";\r\n            });\r\n\r\n            // check if the profile page was found in the app-main navigator stack\r\n            if(indexOfPage > -1){ // profile page was found\r\n                // remove the profile page from the app-main navigator before re-displaying it\r\n                await $('#app-main-navigator').get(0).removePage(indexOfPage);\r\n            }\r\n            // display the profile page\r\n            $('#app-main-navigator').get(0).pushPage('profile-page.html');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Edit\" button for the billing details is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async editBillingDetailsButtonClicked(){\r\n            // set the update billing details flag to true\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                updateOrderBillingDetails = true;\r\n\r\n            // check if the billing-info page has previously been displayed in the app-main navigator\r\n            var pagesStackArray = $('#app-main-navigator').get(0).pages; // holds the array of pages in the app-main navigator\r\n            var indexOfPage = pagesStackArray.findIndex(function(page, pageIndex){\r\n                // test if the page is the billing-info page\r\n                return $(pagesStackArray[pageIndex]).get(0).id === \"billing-info-page\";\r\n            });\r\n\r\n            // check if the billing-info page was found in the app-main navigator stack\r\n            if(indexOfPage > -1){ // billing-info page was found\r\n                // remove the billing-info page from the app-main navigator before re-displaying it\r\n                await $('#app-main-navigator').get(0).removePage(indexOfPage);\r\n            }\r\n            // display the billing details page\r\n            $('#app-main-navigator').get(0).pushPage('billing-info-page.html');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Edit\" button for the shipping details is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async editShippingDetailsButtonClicked(){\r\n            // set the update shipping details flag to true\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                updateOrderShippingDetails = true;\r\n\r\n            // check if the shipping-info page has previously been displayed in the app-main navigator\r\n            var pagesStackArray = $('#app-main-navigator').get(0).pages; // holds the array of pages in the app-main navigator\r\n            var indexOfPage = pagesStackArray.findIndex(function(page, pageIndex){\r\n                // test if the page is the shipping-info page\r\n                return $(pagesStackArray[pageIndex]).get(0).id === \"shipping-info-page\";\r\n            });\r\n\r\n            // check if the shipping-info page was found in the app-main navigator stack\r\n            if(indexOfPage > -1){ // shipping-info page was found\r\n                // remove the shipping-info page from the app-main navigator before re-displaying it\r\n                await $('#app-main-navigator').get(0).removePage(indexOfPage);\r\n            }\r\n            // display the shipping details page\r\n            $('#app-main-navigator').get(0).pushPage('shipping-info-page.html');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Edit\" button for the shipping method is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async editShippingMethodButtonClicked(){\r\n\r\n            // handle the task in a separate event block\r\n            window.setTimeout(function(){\r\n                // enable the shipping method dropdownlist\r\n                let shippingMethodDropdownList = $('#checkout-page #checkout-shipping-method-type').get(0).ej2_instances[0];\r\n                shippingMethodDropdownList.enabled = true;\r\n                shippingMethodDropdownList.dataBind();\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Edit\" button for the payment method is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async editPaymentMethodButtonClicked(){\r\n\r\n            // handle the task in a separate event block\r\n            window.setTimeout(function(){\r\n                // enable the payment method dropdownlist\r\n                let paymentMethodDropdownList = $('#checkout-page #checkout-payment-method-type').get(0).ej2_instances[0];\r\n                paymentMethodDropdownList.enabled = true;\r\n                paymentMethodDropdownList.dataBind();\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggerd when  the \"Apply\" coupon button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async applyCouponButtonClicked(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to apply coupon`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            try{\r\n                // show the page loader modal\r\n                $('#checkout-page .modal').css(\"display\", \"table\");\r\n\r\n                // check if user has entered any  coupon code\r\n                if($('#checkout-page #checkout-payment-voucher-code').val().trim() === \"\"){ // no coupon code entered\r\n                    throw \"error - no coupon code provided\"; // throw error\r\n                }\r\n\r\n                // check if the coupon is valid or not\r\n                let couponsArray = await Promise.resolve($.ajax( // load the list of shipping zones\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                            `/wp-json/wc/v3/coupons`,\r\n                        type: \"get\",\r\n                        //contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: {code: $('#checkout-page #checkout-payment-voucher-code').val().trim()}\r\n                    }\r\n                ));\r\n\r\n                // check if any coupons were found\r\n                if(couponsArray.length == 0){ // no coupons were found\r\n                    throw \"error - no coupon found\";\r\n                }\r\n\r\n                // get a local/deep-clone copy of the page's checkout order object\r\n                let localOrderObject = JSON.parse(JSON.\r\n                stringify(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder));\r\n                // update the coupons for the local order object to be sent to the server\r\n                localOrderObject.coupon_lines = localOrderObject.coupon_lines.map(function(couponElem){\r\n                    return {code: couponElem.code};\r\n                });\r\n                localOrderObject.coupon_lines.push({code: couponsArray[0].code}); // add the new coupon\r\n\r\n                // update the checkout order data on the remote server\r\n                localOrderObject = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                            `/wp-json/wc/v3/orders/${localOrderObject.id}`,\r\n                        type: \"put\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(localOrderObject)\r\n                    }\r\n                ));\r\n\r\n                // update the page checkout order with the updated order from the server\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                    chekoutOrder = localOrderObject;\r\n\r\n                // clear the coupon code entered into the coupon/voucher input\r\n                $('#checkout-page #checkout-payment-voucher-code').val(\"\");\r\n\r\n                // redisplay the page (redisplaying the page also hides the page loader when the process is complete)\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.pageShow();\r\n            }\r\n            catch(err){\r\n\r\n                // hide the page loader modal\r\n                $('#checkout-page .modal').css(\"display\", \"none\");\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Coupon not applied. Invalid coupon code`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggerd when  the \"Add\" note button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async addNoteButtonClicked(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to add shipping notes to the order`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            try{\r\n\r\n                // show page loader\r\n                $('#checkout-page .modal').css(\"display\", \"table\");\r\n\r\n                // get a local/deep-clone copy of the page's checkout order object\r\n                let localOrderObject = JSON.parse(JSON.\r\n                stringify(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder));\r\n                // update the customer note for the local order object to be sent to the server\r\n                localOrderObject.customer_note = $('#checkout-page #checkout-payment-order-note-text').val().trim();\r\n                // update the coupons for the local order object to be sent to the server\r\n                localOrderObject.coupon_lines = localOrderObject.coupon_lines.map(function(couponElem){\r\n                    return {code: couponElem.code};\r\n                });\r\n\r\n                // update the checkout order data on the remote server\r\n                localOrderObject = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                            `/wp-json/wc/v3/orders/${localOrderObject.id}`,\r\n                        type: \"put\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(localOrderObject)\r\n                    }\r\n                ));\r\n\r\n                // update the page checkout order with the updated order from the server\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                    chekoutOrder = localOrderObject;\r\n\r\n                // clear the coupon code entered into the coupon/voucher input\r\n                $('#checkout-page #checkout-payment-order-note-text').val(\"\");\r\n\r\n                // redisplay the page (redisplaying the page also hides the page loader when the process is complete)\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.pageShow();\r\n            }\r\n            catch(err){\r\n\r\n                // hide the page loader modal\r\n                $('#checkout-page .modal').css(\"display\", \"none\");\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Shipping note could not added. Please retry`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Make Payment\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async makePaymentButtonClicked(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to make payment`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                // enable the \"Make Payment\" button\r\n                $('#checkout-page #checkout-make-payment').removeAttr(\"disabled\");\r\n                // hide the spinner from the 'Make Payment'\r\n                $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].dataBind();\r\n                $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].stop();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // check what payment method is being used\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                chekoutOrder.payment_method === \"paystack\"){ // user selected the paystack (Pay With Card)\r\n\r\n                // disable the \"Make Payment\" button\r\n                $('#checkout-page #checkout-make-payment').attr(\"disabled\", true);\r\n\r\n                // inform the user that payment gateway is being prepared\r\n                $('#loader-modal-message').html(\"Preparing Payment Channel...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n\r\n                try{\r\n                    // load the user profile details from the app database\r\n                    var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"user-details\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                    // initialise a paystack (payment) transaction\r\n                    let payStackResponse = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: `https://api.paystack.co/transaction/initialize`,\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Bearer \" +\r\n                                    Base64.decode(utopiasoftware[utopiasoftware_app_namespace].paystackAccessor));\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify({email: userDetails.email,\r\n                            amount: \"\" + (kendo.parseFloat(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                checkoutPageViewModel.chekoutOrder.total) * 100),\r\n                                callback_url: \"https://shopoakexclusive.com/\"})\r\n                        }\r\n                    ));\r\n\r\n                    if(payStackResponse.status === true){ // request for transaction initialisation was successful\r\n                        // open inapp browser for user to make payment (using the authorization_url from payStack response)\r\n                        let transactionCompletedUrl = await new Promise(function(resolve, reject){\r\n                            // create/open inapp browser\r\n                            let transactionInAppBrowser =\r\n                                cordova.InAppBrowser.open(window.encodeURI(payStackResponse.data.authorization_url), '_blank',\r\n                                    'location=yes,clearcache=yes,clearsessioncache=yes,closebuttoncolor=#ffffff,hardwareback=no,hidenavigationbuttons=yes,hideurlbar=no,zoom=no,toolbarcolor=#3f51b5');\r\n\r\n                            // add event listeners for the transaction inapp browswer\r\n                            transactionInAppBrowser.addEventListener(\"loadstart\", function(loadStartEvent){\r\n\r\n                                // check which url is being loaded\r\n                                if(loadStartEvent.url.startsWith(\"https://shopoakexclusive.com/\")){ // transaction was completed\r\n                                    // set a flag to indicate that the transaction was completed\r\n                                    transactionInAppBrowser._utopiasoftware_transaction_completed = true;\r\n                                    // retrieve the full transaction completed url\r\n                                    transactionInAppBrowser._utopiasoftware_transaction_completed_url = loadStartEvent.url;\r\n                                    // exit/close the inapp browser\r\n                                    transactionInAppBrowser.close();\r\n                                }\r\n                            });\r\n                            transactionInAppBrowser.addEventListener(\"loaderror\", function(loadErrorEvent){\r\n                                // there is an error loading the transaction page, so exit/close inapp browser\r\n                                transactionInAppBrowser.close();\r\n                            });\r\n                            transactionInAppBrowser.addEventListener(\"exit\", function(exitEvent){\r\n                                // check if the transaction was completed or not\r\n                                if(transactionInAppBrowser._utopiasoftware_transaction_completed === true){ // transaction completed\r\n                                    // resolve parent promise\r\n                                    resolve(transactionInAppBrowser._utopiasoftware_transaction_completed_url);\r\n                                }\r\n                                else{ // transaction was not completed\r\n                                    reject(); // reject parent promise\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        // get the search parameters object from the transaction completed url\r\n                        let searchParams = new URLSearchParams(transactionCompletedUrl.split(\"?\")[1]);\r\n                        // get the 'reference' search parameter value\r\n                        let completedTransactionReference = searchParams.get(\"reference\");\r\n\r\n                        // check if the transaction reference query parameter exist\r\n                        if(!completedTransactionReference || completedTransactionReference === \"\"){ // IT DOES NOT EXIST\r\n                            throw \"error\"; // throw an error\r\n                        }\r\n\r\n                        // inform the user that their order is being placed\r\n                        $('#loader-modal-message').html(\"Completing Order Placement...\");\r\n\r\n                        // get a local/deep-clone copy of the page's checkout order object\r\n                        let localOrderObject = JSON.parse(JSON.\r\n                        stringify(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder));\r\n                        // update the order status (by setting the order paid flag) and transaction reference\r\n                        localOrderObject.transaction_id = completedTransactionReference;\r\n                        localOrderObject.set_paid = true;\r\n                        // update the coupons for the local order object to be sent to the server\r\n                        localOrderObject.coupon_lines = localOrderObject.coupon_lines.map(function(couponElem){\r\n                            return {code: couponElem.code};\r\n                        });\r\n\r\n                        // update the checkout order data on the remote server\r\n                        localOrderObject = await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                    `/wp-json/wc/v3/orders/${localOrderObject.id}`,\r\n                                type: \"put\",\r\n                                contentType: \"application/json\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                        utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                },\r\n                                dataType: \"json\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: false,\r\n                                data: JSON.stringify(localOrderObject)\r\n                            }\r\n                        ));\r\n\r\n                        try{\r\n                            // delete user cart data\r\n                            await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                            removeData(\"user-cart\",\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                        }\r\n                        catch(err){}\r\n\r\n\r\n                        // update the checkout-order-placement-modal with the checkout order number\r\n                        $('#checkout-order-placement-modal .order-number').html(localOrderObject.number);\r\n\r\n                        // add the click handler for the 'checkout-order-placement-modal-ok-button'\r\n                        $('#checkout-order-placement-modal #checkout-order-placement-modal-ok-button').get(0).\r\n                            onclick = async function(){\r\n                            // reload the app main page\r\n                            await $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n                            // hide the 'checkout-order-placement-modal'\r\n                            await $('#checkout-order-placement-modal').get(0).hide();\r\n                        };\r\n\r\n                        // show the 'checkout-order-placement-modal'\r\n                        await $('#checkout-order-placement-modal').get(0).show();\r\n\r\n\r\n                    }\r\n                    else{ // request for transaction initialisation was NOT successful\r\n                        throw \"error\";\r\n                    }\r\n                }\r\n                catch(err){\r\n                    console.log(\"PAYMENT ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3500;\r\n                    toast.content = `Error making payment for this order. Try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // enable the \"Make Payment\" button\r\n                    $('#checkout-page #checkout-make-payment').removeAttr(\"disabled\");\r\n                    // hide the spinner from the 'Make Payment'\r\n                    $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                    $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].dataBind();\r\n                    $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].stop();\r\n\r\n                    // hide loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                chekoutOrder.payment_method === \"cod\"){ // user selected the cod (Cash on Delivery)\r\n\r\n                // disable the \"Make Payment\" button\r\n                $('#checkout-page #checkout-make-payment').attr(\"disabled\", true);\r\n\r\n                // inform the user that their order is being placed\r\n                $('#loader-modal-message').html(\"Completing Order Placement...\");\r\n                await $('#loader-modal').get(0).show(); // show loader\r\n\r\n                try{\r\n\r\n                    // get a local/deep-clone copy of the page's checkout order object\r\n                    let localOrderObject = JSON.parse(JSON.\r\n                    stringify(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder));\r\n                    // update the order status to \"processing\"\r\n                    localOrderObject.status = \"processing\";\r\n                    // update the coupons for the local order object to be sent to the server\r\n                    localOrderObject.coupon_lines = localOrderObject.coupon_lines.map(function(couponElem){\r\n                        return {code: couponElem.code};\r\n                    });\r\n\r\n                    // update the checkout order data on the remote server\r\n                    localOrderObject = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                `/wp-json/wc/v3/orders/${localOrderObject.id}`,\r\n                            type: \"put\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify(localOrderObject)\r\n                        }\r\n                    ));\r\n\r\n                    try{\r\n                        // delete user cart data\r\n                        await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                        removeData(\"user-cart\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                    }\r\n                    catch(err){}\r\n\r\n\r\n                    // update the checkout-order-placement-modal with the checkout order number\r\n                    $('#checkout-order-placement-modal .order-number').html(localOrderObject.number);\r\n\r\n                    // add the click handler for the 'checkout-order-placement-modal-ok-button'\r\n                    $('#checkout-order-placement-modal #checkout-order-placement-modal-ok-button').get(0).\r\n                        onclick = async function(){\r\n                        // reload the app main page\r\n                        await $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n                        // hide the 'checkout-order-placement-modal'\r\n                        await $('#checkout-order-placement-modal').get(0).hide();\r\n                    };\r\n\r\n                    // show the 'checkout-order-placement-modal'\r\n                    await $('#checkout-order-placement-modal').get(0).show();\r\n\r\n                }\r\n                catch(err){\r\n                    console.log(\"PAYMENT ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3500;\r\n                    toast.content = `Error placing this order. Try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // enable the \"Make Payment\" button\r\n                    $('#checkout-page #checkout-make-payment').removeAttr(\"disabled\");\r\n                    // hide the spinner from the 'Make Payment'\r\n                    $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                    $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].dataBind();\r\n                    $('#checkout-page #checkout-make-payment').get(0).ej2_instances[0].stop();\r\n\r\n                    // hide loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }\r\n\r\n                return; // exit method\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to load the current checkout/order data into the page\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayContent(){\r\n\r\n            try{\r\n                // load the user profile details from the app database\r\n                var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                // check if the checkout order billing data should be updated with the current user's billing\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                    updateOrderBillingDetails === true){ // billing data should be updated\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder.billing =\r\n                        userDetails.billing;\r\n                    // reset the flag\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                        updateOrderBillingDetails = false;\r\n                }\r\n\r\n                // check if the checkout order shipping data should be updated with the current user's shipping\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                    updateOrderShippingDetails === true){ // shipping data should be updated\r\n                    // updatte the shipping data\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder.shipping =\r\n                        userDetails.shipping;\r\n                    // reset the shipping method to 'nothing' (to ensure the user chooses a shipping method for their new\r\n                    // shipping address)\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder.\r\n                        shipping_lines[0] = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                checkoutPageViewModel.chekoutOrder.shipping_lines[0] || {};\r\n                    Object.assign(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                                                    chekoutOrder.shipping_lines[0],\r\n                            {method_id: \"\", method_title: \"\", instance_id: \"\" });\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder.\r\n                        shipping_lines[0].total = \"\";\r\n\r\n                    // reset the flag\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                        updateOrderShippingDetails = false;\r\n                }\r\n\r\n                // get the order object set on this page\r\n                let orderData = utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder;\r\n\r\n                console.log(\"CHECK OUT USER DETAILS\", userDetails);\r\n\r\n                // display the checkout data\r\n                $('#checkout-page #checkout-personal-details-email').html(userDetails.email);\r\n                $('#checkout-page #checkout-personal-details-first-name').html(userDetails.first_name);\r\n                $('#checkout-page #checkout-personal-details-last-name').html(userDetails.last_name);\r\n\r\n                $('#checkout-page #checkout-billing-information-address').html(orderData.billing.address_1);\r\n                $('#checkout-page #checkout-billing-information-city').html(orderData.billing.city);\r\n\r\n                $('#checkout-page #checkout-shipping-information-first-name').html(orderData.shipping.first_name);\r\n                $('#checkout-page #checkout-shipping-information-last-name').html(orderData.shipping.last_name);\r\n                $('#checkout-page #checkout-shipping-information-address').html(orderData.shipping.address_1);\r\n                $('#checkout-page #checkout-shipping-information-city').html(orderData.shipping.city);\r\n\r\n                // get the shipping zone the of the user by checking the user's shipping country\r\n                let shippingCountryCode =  orderData.shipping.country == \"\" ? 'NG': orderData.shipping.country;\r\n                let shippingZoneId = 0; // set the shipping zone id to the default i.e. 'Rest of the world'\r\n                // find the country with the specified country code\r\n                let shippingCountry = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    checkoutPageViewModel.countryArray.find(function(countryElem){\r\n                        return countryElem.code === shippingCountryCode;\r\n                });\r\n                // check if a shipping country was discovered\r\n                if(shippingCountry){ // a shipping country was discovered\r\n                    // get the shipping zone id which the shipping country belongs to\r\n                    let shippingZone = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        checkoutPageViewModel.shoppingZonesArray.find(function(shippingZoneElem){\r\n                            return shippingZoneElem.name === shippingCountry.name;\r\n                    });\r\n                    if(shippingZone){ // a shipping zone was found\r\n                        //get the id of the discovered shipping zone\r\n                        shippingZoneId = shippingZone.id;\r\n                    }\r\n                }\r\n\r\n                // get the shipping methods attached to the discovered shipping zone\r\n                let shippingMethodsArray = await Promise.resolve($.ajax( // load the list of shipping zones\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                            `/wp-json/wc/v3/shipping/zones/${shippingZoneId}/methods`,\r\n                        type: \"get\",\r\n                        //contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: {}\r\n                    }\r\n                ));\r\n                // filter the shipping methods for only the methods that are enabled\r\n                shippingMethodsArray = shippingMethodsArray.filter(function(shippingMethodElem){\r\n                    return shippingMethodElem.enabled === true;\r\n                });\r\n                // remove the \"select\" event listener for the shipping method dropdownlist\r\n                let shippingMethodDropDown = $('#checkout-shipping-method-type').get(0).ej2_instances[0];\r\n                shippingMethodDropDown.removeEventListener(\"select\");\r\n\r\n                // set the shippingMethodArray as the datasource for the shipping method dropdownlist\r\n                shippingMethodDropDown.dataSource = shippingMethodsArray;\r\n                // set the pre-selected shipping method (i.e. the shippingMethod dropdownlist value)\r\n                // check if there are any shipping lines info available\r\n                if(orderData.shipping_lines.length > 0){ // if length is > 0, there are shipping lines info available\r\n                    // set the shipping method dropdownlist value\r\n                    shippingMethodDropDown.value = orderData.shipping_lines[0].method_id;\r\n                    // check if the shipping method dropdownlist value is an empty string\r\n                    if(shippingMethodDropDown.value === \"\"){ // the value is an empty string\r\n                        shippingMethodDropDown.value = null; // reset the shipping method dropdownlist value to null instead\r\n                    }\r\n                }\r\n                shippingMethodDropDown.dataBind();\r\n\r\n                // add the \"select\" event listener for the shipping method dropdownlist\r\n                shippingMethodDropDown.addEventListener(\"select\", function(){\r\n                    // handle the task in a separate event block\r\n                    window.setTimeout(async function(){\r\n\r\n                        // check if there is Internet connection\r\n                        if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                            // hide all previously displayed ej2 toast\r\n                            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                            $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                            // display toast to show that an error\r\n                            let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                            toast.cssClass = 'error-ej2-toast';\r\n                            toast.timeOut = 3000;\r\n                            toast.content = `Connect to the Internet to change shipping method`;\r\n                            toast.dataBind();\r\n                            toast.show();\r\n\r\n                            return; // exit method\r\n                        }\r\n\r\n                        // display the page loader modal\r\n                        $('#checkout-page .modal').css(\"display\", \"table\");\r\n\r\n                        // get a local/deep-clone copy of the page's checkout order object\r\n                        let localOrderObject = JSON.parse(JSON.\r\n                        stringify(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder));\r\n                        // update the shipping method for the local order object to be sent to the server\r\n                        localOrderObject.shipping_lines[0] = localOrderObject.shipping_lines[0] || {};\r\n                        Object.assign(localOrderObject.shipping_lines[0], {method_id: shippingMethodDropDown.value,\r\n                            method_title: shippingMethodDropDown.text,\r\n                            instance_id: \"\" + shippingMethodDropDown.\r\n                                                getDataByValue(shippingMethodDropDown.value).instance_id});\r\n                        // update the coupons for the local order object to be sent to the server\r\n                        localOrderObject.coupon_lines = localOrderObject.coupon_lines.map(function(couponElem){\r\n                            return {code: couponElem.code};\r\n                        });\r\n\r\n                        // perform some remote /asynchronous tasks needed to update the order shipping method\r\n                        try{\r\n\r\n                            // change the user shipping method on the remote cart using a helper script\r\n                            await Promise.resolve($.ajax(\r\n                                {\r\n                                    url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                        `/oakscripts/setshipping.php`,\r\n                                    type: \"post\",\r\n                                    //contentType: \"application/json\",\r\n                                    beforeSend: function(jqxhr) {\r\n                                        jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                            Base64.encode(`${userDetails.email}:${userDetails.password}`));\r\n                                    },\r\n                                    crossDomain: true,\r\n                                    xhrFields: {\r\n                                        withCredentials: true\r\n                                    },\r\n                                    dataType: \"text\",\r\n                                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                    processData: true,\r\n                                    // send the shipping method data represented by selected shipping method value\r\n                                    data: {id: shippingMethodDropDown.getDataByValue(shippingMethodDropDown.value).instance_id,\r\n                                    method_id: shippingMethodDropDown.getDataByValue(shippingMethodDropDown.value).method_id}\r\n                                }\r\n                            ));\r\n\r\n                            // calculate all the totals for the remote user cart\r\n                            await Promise.resolve($.ajax(\r\n                                {\r\n                                    url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                        `/wp-json/wc/v2/cart/calculate`,\r\n                                    type: \"post\",\r\n                                    contentType: \"application/json\",\r\n                                    beforeSend: function(jqxhr) {\r\n                                        jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                            Base64.encode(`${userDetails.email}:${userDetails.password}`));\r\n                                    },\r\n                                    crossDomain: true,\r\n                                    xhrFields: {\r\n                                        withCredentials: true\r\n                                    },\r\n                                    dataType: \"text\",\r\n                                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                    processData: true,\r\n                                    data: {}\r\n                                }\r\n                            ));\r\n\r\n                            // get all the totals for the remote user cart\r\n                            let remoteCartTotals = await Promise.resolve($.ajax(\r\n                                {\r\n                                    url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                        `/wp-json/wc/v2/cart/totals`,\r\n                                    type: \"get\",\r\n                                    contentType: \"application/json\",\r\n                                    beforeSend: function(jqxhr) {\r\n                                        jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                            Base64.encode(`${userDetails.email}:${userDetails.password}`));\r\n                                    },\r\n                                    crossDomain: true,\r\n                                    xhrFields: {\r\n                                        withCredentials: true\r\n                                    },\r\n                                    dataType: \"json\",\r\n                                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                    processData: true,\r\n                                    data: {}\r\n                                }\r\n                            ));\r\n\r\n                            // update the shipping method for the local order object to be sent to the server\r\n                            localOrderObject.shipping_lines[0].total = \"\" + remoteCartTotals.shipping_total;\r\n\r\n                            // update the checkout order data on the remote server\r\n                            localOrderObject = await Promise.resolve($.ajax(\r\n                                {\r\n                                    url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                        `/wp-json/wc/v3/orders/${localOrderObject.id}`,\r\n                                    type: \"put\",\r\n                                    contentType: \"application/json\",\r\n                                    beforeSend: function(jqxhr) {\r\n                                        jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                            utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                    },\r\n                                    dataType: \"json\",\r\n                                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                    processData: false,\r\n                                    data: JSON.stringify(localOrderObject)\r\n                                }\r\n                            ));\r\n\r\n                            // update the page checkout order with the updated order from the server\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                                chekoutOrder = localOrderObject;\r\n\r\n                            // disable the shipping method dropdownlist\r\n                            shippingMethodDropDown.enabled = false;\r\n                            shippingMethodDropDown.dataBind();\r\n\r\n                            // redisplay the page (redisplaying the page also hides the page loader when the process is complete)\r\n                            await utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.pageShow();\r\n                        }\r\n                        catch(err){\r\n                            console.log(\"CHECKOUT SHIPPING METHOD UPDATE ERROR\", err);\r\n\r\n                            err = JSON.parse(err.responseText.trim());\r\n\r\n                            // hide all previously displayed ej2 toast\r\n                            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                            $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                            // display toast message\r\n                            let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                            toast.cssClass = 'error-ej2-toast';\r\n                            toast.timeOut = 3000;\r\n                            toast.content = `Shipping method not updated, retry. ${err.message || \"\"}`;\r\n                            toast.dataBind();\r\n                            toast.show();\r\n\r\n                            // hide the page loader modal\r\n                            $('#checkout-page .modal').css(\"display\", \"none\");\r\n                        }\r\n\r\n                    }, 0);\r\n                });\r\n\r\n                // remove the \"select\" event listener for the shipping method dropdownlist\r\n                let paymentMethodDropDown = $('#checkout-payment-method-type').get(0).ej2_instances[0];\r\n                paymentMethodDropDown.removeEventListener(\"select\");\r\n\r\n                // set the pre-selected payment method for the order data\r\n                paymentMethodDropDown.value = orderData.payment_method;\r\n                paymentMethodDropDown.dataBind();\r\n\r\n                // add the \"select\" event listener for the payment method dropdownlist\r\n                paymentMethodDropDown.addEventListener(\"select\", function(){\r\n                    // handle the task in a separate event block\r\n                    window.setTimeout(async function(){\r\n\r\n                        // check if there is Internet connection\r\n                        if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                            // hide all previously displayed ej2 toast\r\n                            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                            $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                            // display toast to show that an error\r\n                            let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                            toast.cssClass = 'error-ej2-toast';\r\n                            toast.timeOut = 3000;\r\n                            toast.content = `Connect to the Internet to change payment method`;\r\n                            toast.dataBind();\r\n                            toast.show();\r\n\r\n                            return; // exit method\r\n                        }\r\n\r\n                        // display the page loader modal\r\n                        $('#checkout-page .modal').css(\"display\", \"table\");\r\n\r\n                        // get a local/deep-clone copy of the page's checkout order object\r\n                        let localOrderObject = JSON.parse(JSON.\r\n                        stringify(utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder));\r\n                        // update the payment method for the local order object to be sent to the server\r\n                        localOrderObject.payment_method = paymentMethodDropDown.value;\r\n                        localOrderObject.payment_method_title = paymentMethodDropDown.text;\r\n                        // update the coupons for the local order object to be sent to the server\r\n                        localOrderObject.coupon_lines = localOrderObject.coupon_lines.map(function(couponElem){\r\n                            return {code: couponElem.code};\r\n                        });\r\n\r\n                        // update the checkout order data on the remote server\r\n                        try{\r\n                            localOrderObject = await Promise.resolve($.ajax(\r\n                                {\r\n                                    url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                        `/wp-json/wc/v3/orders/${localOrderObject.id}`,\r\n                                    type: \"put\",\r\n                                    contentType: \"application/json\",\r\n                                    beforeSend: function(jqxhr) {\r\n                                        jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                            utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                    },\r\n                                    dataType: \"json\",\r\n                                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                    processData: false,\r\n                                    data: JSON.stringify(localOrderObject)\r\n                                }\r\n                            ));\r\n\r\n                            // update the page checkout order with the updated order from the server\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.\r\n                                chekoutOrder = localOrderObject;\r\n\r\n                            // disable the payment method dropdownlist\r\n                            paymentMethodDropDown.enabled = false;\r\n                            paymentMethodDropDown.dataBind();\r\n\r\n                            // redisplay the page (redisplaying the page also hides the page loader when the process is complete)\r\n                            await utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.pageShow();\r\n                        }\r\n                        catch(err){\r\n                            console.log(\"CHECKOUT PAYMENT METHOD UPDATE ERROR\", err);\r\n\r\n                            err = JSON.parse(err.responseText);\r\n\r\n                            // hide all previously displayed ej2 toast\r\n                            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                            $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                            // display toast message\r\n                            let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                            toast.cssClass = 'error-ej2-toast';\r\n                            toast.timeOut = 3000;\r\n                            toast.content = `Payment method not updated, retry. ${err.message || \"\"}`;\r\n                            toast.dataBind();\r\n                            toast.show();\r\n\r\n                            // hide the page loader modal\r\n                            $('#checkout-page .modal').css(\"display\", \"none\");\r\n                        }\r\n\r\n                    }, 0);\r\n                });\r\n\r\n                // set the order coupons\r\n                let couponsMultiSelectDropDown = $('#checkout-payment-vouchers').get(0).ej2_instances[0];\r\n                let couponsArray = orderData.coupon_lines.map(function(couponElem){\r\n                    return couponElem.code;\r\n                });\r\n                // set the datasource and the values for the coupons mulitselect dropdown\r\n                couponsMultiSelectDropDown.dataSource = couponsArray;\r\n                couponsMultiSelectDropDown.value = couponsArray;\r\n                couponsMultiSelectDropDown.dataBind();\r\n\r\n                // set the order notes i.e. shipping instructions\r\n                $('#checkout-page #checkout-payment-order-note-text').val(orderData.customer_note);\r\n\r\n                // display the order items\r\n                let orderItemsDisplayContent = ''; // holds the content to be displayed for the order items segment\r\n                for(let index = 0; index < orderData.line_items.length; index++){\r\n                    orderItemsDisplayContent +=\r\n                        `<div class=\"col-xs-6\" style=\"text-align: right; padding-right: 5px;\r\n                        padding-top: 10px; padding-bottom: 10px\">${orderData.line_items[index].name}</div>\r\n                        <div class=\"col-xs-2\" style=\"text-align: left;\r\n                        padding-top: 10px; padding-bottom: 10px\">&times;${orderData.line_items[index].quantity}</div>\r\n                        <div class=\"col-xs-4\" style=\"text-align: left; padding-left: 5px;\r\n                        padding-top: 10px; padding-bottom: 10px\">\r\n                        &#x20a6;${kendo.toString(kendo.parseFloat(orderData.line_items[index].subtotal), \"n2\")}</div>\r\n                        <div class=\"clearfix visible-xs-block\"></div>`;\r\n                }\r\n                $('#checkout-page #checkout-order-items-container').html(orderItemsDisplayContent);\r\n\r\n                // display checkout totals\r\n                $('#checkout-page #checkout-page-items-cost').html(\r\n                `&#x20a6;${kendo.toString((kendo.parseFloat(orderData.total) - kendo.parseFloat(orderData.shipping_total) +\r\n                    kendo.parseFloat(orderData.discount_total)), \"n2\")}`);\r\n                $('#checkout-page #checkout-page-shipping-cost').html(\r\n                    `&#x20a6;${kendo.toString(kendo.parseFloat(orderData.shipping_total), \"n2\")}`\r\n                );\r\n                $('#checkout-page #checkout-page-discount-cost').html(\r\n                    `&#x20a6;${kendo.toString(kendo.parseFloat(orderData.discount_total), \"n2\")}`\r\n                );\r\n                $('#checkout-page #checkout-page-total-cost').html(\r\n                    `&#x20a6;${kendo.toString(kendo.parseFloat(orderData.total), \"n2\")}`\r\n                );\r\n                if(kendo.parseFloat(orderData.discount_total) > 0){ // if the discount total value is > zero\r\n                    // display the discount total to user\r\n                    $('#checkout-page .checkout-page-discount').css(\"display\", \"block\");\r\n                }\r\n                else{ // the discount total is zero\r\n                    // hide the discount total from user\r\n                    $('#checkout-page .checkout-page-discount').css(\"display\", \"none\");\r\n                }\r\n            }\r\n            finally {\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is a utility used to validate the order object/data i.e. the 'chekoutOrder' property of\r\n         * the view-model\r\n         *\r\n         * @returns {Promise<void>} the Promise resolves when the order data is successfully validated; it\r\n         * rejects when the validation fails.\r\n         */\r\n        async validateOrderCheckout(){\r\n\r\n            var validationSuccessful = true; // flag indicates if checkout validation was successful or not\r\n\r\n            return new Promise(async function(resolve, reject){\r\n\r\n                // disable the \"Make Payment\" button\r\n                $('#checkout-page #checkout-make-payment').attr(\"disabled\", true);\r\n\r\n                // get the checkout Order object\r\n                var orderData = utopiasoftware[utopiasoftware_app_namespace].controller.checkoutPageViewModel.chekoutOrder;\r\n\r\n                // validate the personal details segment\r\n                try{\r\n                    // load the user profile details from the app database\r\n                    let userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"user-details\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n                    if(!userDetails.first_name || userDetails.first_name == \"\"){\r\n                        throw \"validation error\";\r\n                    }\r\n                    // user validation was successful\r\n                    $('#checkout-page .checkout-personal-details-accordion-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"inline-block\");\r\n                    $('#checkout-page .checkout-personal-details-accordion-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"none\");\r\n                    // hide error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-personal-details-accordion-item .utopiasoftware-checkout-failure').\r\n                        get(0)._utopiasoftware_validator_index;\r\n                    $('#checkout-page').get(0).ej2_instances[tooltipIndex].close();\r\n                }\r\n                catch(err){\r\n                    // user details could not be loaded, so user validation failed\r\n                    $('#checkout-page .checkout-personal-details-accordion-item .utopiasoftware-checkout-success').\r\n                        css(\"display\", \"none\");\r\n                    $('#checkout-page .checkout-personal-details-accordion-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"inline-block\");\r\n                    // display error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-personal-details-accordion-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    let tooltip = $('#checkout-page').get(0).ej2_instances[tooltipIndex];\r\n                    tooltip.content = \"incomplete personal details\";\r\n                    tooltip.dataBind();\r\n                    tooltip.open( $('#checkout-page .checkout-personal-details-accordion-item .utopiasoftware-checkout-failure')\r\n                        .get(0));\r\n                    // flag validation as failed\r\n                    validationSuccessful = false;\r\n                }\r\n\r\n                // validate the billing details segment\r\n                if(!orderData.billing.address_1 || orderData.billing.address_1 == \"\"){ // the billing address has NOT been provided\r\n                    // signal that billing details validation failed\r\n                    $('#checkout-page .checkout-billing-information-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"none\");\r\n                    $('#checkout-page .checkout-billing-information-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"inline-block\");\r\n                    // display error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-billing-information-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    let tooltip = $('#checkout-page').get(0).ej2_instances[tooltipIndex];\r\n                    tooltip.content = \"incomplete billing details\";\r\n                    tooltip.dataBind();\r\n                    tooltip.open( $('#checkout-page .checkout-billing-information-item .utopiasoftware-checkout-failure')\r\n                        .get(0));\r\n                    // flag validation as failed\r\n                    validationSuccessful = false;\r\n                }\r\n                else{ // the billing address and other billing info have been provided\r\n                    $('#checkout-page .checkout-billing-information-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"inline-block\");\r\n                    $('#checkout-page .checkout-billing-information-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"none\");\r\n                    // hide error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-billing-information-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    $('#checkout-page').get(0).ej2_instances[tooltipIndex].close();\r\n                }\r\n\r\n                // validate the shipping details segment\r\n                if(!orderData.shipping.address_1 || orderData.shipping.address_1 == \"\"){ // the shipping address has NOT been provided\r\n                    // signal that shipping details validation failed\r\n                    $('#checkout-page .checkout-shipping-information-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"none\");\r\n                    $('#checkout-page .checkout-shipping-information-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"inline-block\");\r\n                    // display error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-shipping-information-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    let tooltip = $('#checkout-page').get(0).ej2_instances[tooltipIndex];\r\n                    tooltip.content = \"incomplete shipping details\";\r\n                    tooltip.dataBind();\r\n                    tooltip.open( $('#checkout-page .checkout-shipping-information-item .utopiasoftware-checkout-failure')\r\n                        .get(0));\r\n                    // flag validation as failed\r\n                    validationSuccessful = false;\r\n                }\r\n                else{ // the billing address and other billing info have been provided\r\n                    $('#checkout-page .checkout-shipping-information-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"inline-block\");\r\n                    $('#checkout-page .checkout-shipping-information-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"none\");\r\n                    // hide error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-shipping-information-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    $('#checkout-page').get(0).ej2_instances[tooltipIndex].close();\r\n                }\r\n\r\n                // validate the shipping method segment\r\n                if(! $('#checkout-page #checkout-shipping-method-type').get(0).ej2_instances[0].value){ // no shipping method\r\n                    // signal that shipping method validation failed\r\n                    $('#checkout-page .checkout-shipping-method-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"none\");\r\n                    $('#checkout-page .checkout-shipping-method-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"inline-block\");\r\n                    // display error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-shipping-method-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    let tooltip = $('#checkout-page').get(0).ej2_instances[tooltipIndex];\r\n                    tooltip.content = \"shipping method required\";\r\n                    tooltip.dataBind();\r\n                    tooltip.open( $('#checkout-page .checkout-shipping-method-item .utopiasoftware-checkout-failure')\r\n                        .get(0));\r\n                    // flag validation as failed\r\n                    validationSuccessful = false;\r\n                }\r\n                else{ // shipping method has been set\r\n                    $('#checkout-page .checkout-shipping-method-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"inline-block\");\r\n                    $('#checkout-page .checkout-shipping-method-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"none\");\r\n                    // hide error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-shipping-method-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    $('#checkout-page').get(0).ej2_instances[tooltipIndex].close();\r\n                }\r\n\r\n                // validate the payment method segment\r\n                if(! $('#checkout-page #checkout-payment-method-type').get(0).ej2_instances[0].value){ // no shipping method\r\n                    // signal that payment method validation failed\r\n                    $('#checkout-page .checkout-payment-method-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"none\");\r\n                    $('#checkout-page .checkout-payment-method-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"inline-block\");\r\n                    // display error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-payment-method-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    let tooltip = $('#checkout-page').get(0).ej2_instances[tooltipIndex];\r\n                    tooltip.content = \"payment method required\";\r\n                    tooltip.dataBind();\r\n                    tooltip.open( $('#checkout-page .checkout-payment-method-item .utopiasoftware-checkout-failure')\r\n                        .get(0));\r\n                    // flag validation as failed\r\n                    validationSuccessful = false;\r\n                }\r\n                else{ // payment method has been set\r\n                    $('#checkout-page .checkout-payment-method-item .utopiasoftware-checkout-success').\r\n                    css(\"display\", \"inline-block\");\r\n                    $('#checkout-page .checkout-payment-method-item .utopiasoftware-checkout-failure').\r\n                    css(\"display\", \"none\");\r\n                    // hide error tooltip for this segment\r\n                    let tooltipIndex = $('#checkout-page .checkout-payment-method-item .utopiasoftware-checkout-failure').\r\n                    get(0)._utopiasoftware_validator_index;\r\n                    $('#checkout-page').get(0).ej2_instances[tooltipIndex].close();\r\n                }\r\n\r\n                // check if the checkout order validation failed or succeeded\r\n                if(validationSuccessful === true){ // validation was successful\r\n                    // enable the \"Make Payment\" button\r\n                    $('#checkout-page #checkout-make-payment').removeAttr(\"disabled\");\r\n                    resolve(); // resolve validation promise\r\n                    return;\r\n                }\r\n                else{ // validation failed\r\n                    // disable the \"Make Payment\" button\r\n                    $('#checkout-page #checkout-make-payment').attr(\"disabled\", true);\r\n                    reject(); // reject validation promise\r\n                    return;\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is a utility which is used to create a remote cart object on\r\n         * the server using the order data provided.\r\n         * Creating a remote cart can help with things like shipping calculations etc\r\n         *\r\n         * @param orderData\r\n         * @returns {Promise<void>}\r\n         */\r\n        async createRemoteCartFromOrder(orderData = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                            checkoutPageViewModel.chekoutOrder){\r\n\r\n            return new Promise(async function(resolve, reject){\r\n                try{\r\n\r\n                    // load the user profile details from the app database\r\n                    var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"user-details\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                    // clear the current user cart\r\n                    await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v2/cart/clear`,\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    Base64.encode(`${userDetails.email}:${userDetails.password}`));\r\n                            },\r\n                            crossDomain: true,\r\n                            xhrFields: {\r\n                                withCredentials: true\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {}\r\n                        }\r\n                    ));\r\n\r\n                    // create a loop to add all the line items in the order data to the remote cache\r\n                    let addToCartPromises = []; // holds all the promises used to add all items to the remote cart\r\n                    for(let index = 0; index < orderData.line_items.length; index++){\r\n                        console.log(\"1\");\r\n                        let cartItemData = {};\r\n                        // use the line item meta data to create part of cartItemData\r\n                        for(let metaDataElem of orderData.line_items[index].meta_data){\r\n                            console.log(\"2\");\r\n                            if(metaDataElem.key === \"_fpd_data\"){ // check the \"key\" property of the metaData object\r\n                                console.log(\"3\");\r\n                                if(!cartItemData.cart_item_data){ // if this property is not created\r\n                                    cartItemData.cart_item_data = {}; // create the property\r\n                                }\r\n                                console.log(\"4\");\r\n                                if(!cartItemData.cart_item_data.fpd_data){ // if this property is not created\r\n                                    cartItemData.cart_item_data.fpd_data = {}; // create the property\r\n                                }\r\n\r\n                                console.log(\"5\");\r\n                                // add custom data to the cart item\r\n                                cartItemData.cart_item_data.fpd_data.fpd_product = metaDataElem.value;\r\n                                cartItemData.cart_item_data.fpd_data.fpd_product_price =\r\n                                    (\"\" + orderData.line_items[index].price);\r\n                            }\r\n\r\n                            if(metaDataElem.key === \"_fpd_print_order\"){\r\n                                if(!cartItemData.cart_item_data){ // if this property is not created\r\n                                    cartItemData.cart_item_data = {}; // create the property\r\n                                }\r\n                                if(!cartItemData.cart_item_data.fpd_data){ // if this property is not created\r\n                                    cartItemData.cart_item_data.fpd_data = {}; // create the property\r\n                                }\r\n                                console.log(\"6\");\r\n                                // add custom data to the cart item\r\n                                cartItemData.cart_item_data.fpd_data.fpd_print_order = metaDataElem.value;\r\n                            }\r\n                        } // end of for-of loop\r\n\r\n                        // add the other data for the cartItem\r\n                        cartItemData.product_id = orderData.line_items[index].product_id;\r\n                        cartItemData.variation_id = orderData.line_items[index].variation_id;\r\n                        cartItemData.quantity = orderData.line_items[index].quantity;\r\n                        console.log(\"7\");\r\n\r\n                        // add the created cartItemData to remote user cart\r\n                        addToCartPromises.push(await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v2/cart/add`,\r\n                                type: \"post\",\r\n                                contentType: \"application/json\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                        Base64.encode(`${userDetails.email}:${userDetails.password}`));\r\n                                },\r\n                                crossDomain: true,\r\n                                xhrFields: {\r\n                                    withCredentials: true\r\n                                },\r\n                                dataType: \"json\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: false,\r\n                                data: JSON.stringify(cartItemData)\r\n                            }\r\n                        )));\r\n                        console.log(\"8\");\r\n                    } // end of for loop\r\n\r\n                    // await for all items to be added to cart\r\n                    await Promise.all(addToCartPromises);\r\n                    resolve(); // resolve the parent promise\r\n                }\r\n                finally{\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Track Order page\r\n     */\r\n    trackOrderPageViewModel: {\r\n\r\n        /**\r\n         * holds the array of orders for the search result that was just run by the user\r\n         */\r\n        trackOrderResultsArray: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.backButtonClicked;\r\n\r\n                try{\r\n\r\n                    //instantiate the autocomplete widget for the search input\r\n                    let searchAutoComplete = new ej.dropdowns.AutoComplete({\r\n                        floatLabelType: \"Never\",\r\n                        placeholder: \"Enter Order Number\",\r\n                        allowCustom: true,\r\n                        filterType: \"Contains\",\r\n                        minLength: 10000, // minimum number of characters that will automatically trigger autocomplete search\r\n                        suggestionCount: 20, // specified how many items will be in the popup\r\n                        dataSource: [],\r\n                        blur: function(){ // track when the component has lost focus\r\n                            this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                        },\r\n                        change: function(){ // track when the component's value has changed\r\n\r\n                            let searchValue = \"\"; // holds the term to be searched for\r\n\r\n                            // check if the search component can perform a remote search\r\n                            if(this._allowRemoteSearch !== true){  // remote search is NOT allowed\r\n                                this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                                return; // exit function\r\n                            }\r\n\r\n                            /*// check that there is actually a search term entered in the search component\r\n                            if(!this.value || this.value.trim() === \"\"){ // no search term\r\n                                this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                                return; // exit function\r\n                            }*/\r\n\r\n                            // update the search term value\r\n                            searchValue = this.value ? this.value.trim() : \"\";\r\n\r\n                            // remove the focus from the search autocomplete component\r\n                            this.focusOut();\r\n\r\n                            // run the actual search in a different event queue\r\n                            window.setTimeout(async function() {\r\n                                var searchResultsArray = [];\r\n                                try{\r\n                                    // hide the previously displayed orders info\r\n                                    $('#track-order-page .row').css(\"display\", \"none\");\r\n                                    // show the page loader\r\n                                    $('#track-order-page .modal').css(\"display\", \"table\");\r\n\r\n                                    // load the user profile details from the app database\r\n                                    var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                                    loadData(\"user-details\",\r\n                                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                                    searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                    trackOrderPageViewModel.\r\n                                    loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                                        \"customer\": userDetails.id, \"search\": searchValue});\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.\r\n                                    displayPageContent(searchResultsArray[0]);\r\n\r\n                                    if(searchResultsArray[0].length == 0){ // no orders were found\r\n                                        // hide the previously displayed orders info\r\n                                        $('#track-order-page .row').css(\"display\", \"none\");\r\n                                        // hide the page loader\r\n                                        $('#track-order-page .modal').css(\"display\", \"none\");\r\n\r\n                                        // inform the user that no result for the search was found'\r\n                                        // hide all previously displayed ej2 toast\r\n                                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                        // display toast to show that an error\r\n                                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                        toast.cssClass = 'default-ej2-toast';\r\n                                        toast.timeOut = 3000;\r\n                                        toast.content = `Sorry, no order was found.`;\r\n                                        toast.dataBind();\r\n                                        toast.show();\r\n                                    }\r\n                                    else{ // orders were found\r\n                                        // show the orders info\r\n                                        $('#track-order-page .row').css(\"display\", \"block\");\r\n                                        // hide the page loader\r\n                                        $('#track-order-page .modal').css(\"display\", \"none\");\r\n                                    }\r\n                                }\r\n                                catch(err){\r\n                                    // hide the previously displayed orders info\r\n                                    $('#track-order-page .row').css(\"display\", \"none\");\r\n                                    // show the page loader\r\n                                    $('#track-order-page .modal').css(\"display\", \"none\");\r\n\r\n                                    // remove the focus from the search autocomplete component\r\n                                    $('#track-order-page #track-order-page-input').get(0).ej2_instances[0].focusOut();\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast to show that an error\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'error-ej2-toast';\r\n                                    toast.timeOut = 3000;\r\n                                    toast.content = `Sorry, a search error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"}`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                            }, 0);\r\n\r\n                        }\r\n                    }).appendTo('#track-order-page-input');\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update cart count\r\n            $('#track-order-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.deviceOnlineListener, false);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.deviceOnlineListener, false);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the search input autocomplete component\r\n            $('#track-order-page #track-order-page-input').get(0).ej2_instances[0].destroy();\r\n            // reset the view-model properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.trackOrderResultsArray = null;\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the previous page on the stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to track orders\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the enter button is clicked on the device keyboard\r\n         *\r\n         * @param keyEvent\r\n         * @returns {Promise<void>}\r\n         */\r\n        async enterButtonClicked(keyEvent){\r\n            // check which key was pressed\r\n            if(keyEvent.which === kendo.keys.ENTER) // if the enter key was pressed\r\n            {\r\n                // prevent the default action from occurring\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopImmediatePropagation();\r\n                keyEvent.stopPropagation();\r\n                // hide the device keyboard\r\n                Keyboard.hide();\r\n\r\n                // get the search autocomplete component\r\n                let searchAutoComplete = $('#track-order-page #track-order-page-input').get(0).ej2_instances[0];\r\n                // update the value of the retrieved component\r\n                searchAutoComplete.value = $('#track-order-page #track-order-page-input').val();\r\n                searchAutoComplete._allowRemoteSearch = true; // flag the remote search can occur\r\n                searchAutoComplete.dataBind(); // bind new value to the component\r\n                searchAutoComplete.change(); // trigger the change method\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load orders to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @param queryParam {Object} holds the objects that contains the query\r\n         * params for the type of products to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadOrders(queryParam, pageToAccess = queryParam.page || 1,\r\n                           pageSize = queryParam.per_page || 20){\r\n            queryParam.page = pageToAccess;\r\n            queryParam.per_page = pageSize;\r\n\r\n            var promisesArray = []; // holds the array for the promises used to load the orders\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested products list from the server\r\n                promisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/orders\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: queryParam\r\n                        }\r\n                    )).then(function(ordersArray){\r\n                        // check if the ordersArray contains orders\r\n                        if(ordersArray.length > 0){ // there are orders\r\n                            // update the current search results array with the ordersArray\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.\r\n                                trackOrderResultsArray = ordersArray;\r\n                        }\r\n\r\n                        resolve(ordersArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                promisesArray.push(Promise.reject(\"no internet connection\"));\r\n            }\r\n\r\n            return Promise.all(promisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products on the search popover\r\n         *\r\n         * @param ordersArray\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(ordersArray){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let ordersContent = \"\"; // holds the contents for the orders\r\n\r\n                // check if the ordersArray is empty or not\r\n                if(ordersArray.length <= 0){ // there are no new content to display\r\n\r\n                    resolve(ordersArray.length); // resolve promise with the length of the orders array\r\n                }\r\n                else{ // there are some orders to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < ordersArray.length; index++){\r\n\r\n                        if(ordersArray[index].status === \"pending\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: brown\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.checkoutButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Checkout\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.cancelButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Cancel\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"processing\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: goldenrod\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"on-hold\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: black\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.checkoutButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Checkout\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.cancelButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Cancel\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"completed\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: green\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"cancelled\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: #d64113\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else{\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: black\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                    }\r\n\r\n\r\n                    // attach the new orders to the page\r\n                    $('#track-order-page #track-order-page-orders-container').html(ordersContent);\r\n\r\n                    resolve(ordersArray.length); // resolve the promise with length of the ordersArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the \"Check Out\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async checkoutButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // show the page loader\r\n            $('#track-order-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    trackOrderPageViewModel.trackOrderResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // check if the checkout page has previously been displayed in the app-main navigator\r\n                    var pagesStackArray = $('#app-main-navigator').get(0).pages; // holds the array of pages in the app-main navigator\r\n                    var indexOfCheckoutPage = pagesStackArray.findIndex(function(page, pageIndex){\r\n                        // test if the page is the checkout page\r\n                        return $(pagesStackArray[pageIndex]).get(0).id === \"checkout-page\";\r\n                    });\r\n\r\n                    // check if the checkout page was found in the app-main navigator stack\r\n                    if(indexOfCheckoutPage > -1){ // checkout page was found\r\n                        // remove the checkout page from the app-main navigator before re-displaying it\r\n                        await $('#app-main-navigator').get(0).removePage(indexOfCheckoutPage);\r\n                    }\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"checkout-page.html\", {data: {orderData: selectedOrder}});\r\n                }\r\n                catch(err){\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Order checkout failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#track-order-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Details\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async detailsButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // show the page loader\r\n            $('#track-order-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    trackOrderPageViewModel.trackOrderResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"order-details-page.html\", {data: {orderData: selectedOrder}});\r\n                }\r\n                catch(err){\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Order checkout failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#track-order-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Cancel\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async cancelButtonClicked(buttonElem){\r\n\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to cancel this order`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // attach functions to handle the \"Reject/No\" and \"Accept/Yes\" buttons click event.\r\n            // These buttons are located in the 'Cancel Order Action Sheet'.\r\n            // Click event handlers must always be defined for these buttons when using this action sheet\r\n\r\n            // function for \"Reject/No\" button\r\n            $('#cancel-order-action-sheet #cancel-order-no').get(0).onclick =\r\n                async function(){\r\n                    // hide the action sheet\r\n                    await document.getElementById('cancel-order-action-sheet').hide();\r\n                };\r\n\r\n            // function for \"Accept/Yes\" button\r\n            $('#cancel-order-action-sheet #cancel-order-yes').get(0).onclick =\r\n                async function(){\r\n                    // display the page loader\r\n                    $('#track-order-page .modal').css(\"display\", \"table\");\r\n                    try{\r\n                        // hide the action sheet\r\n                        await document.getElementById('cancel-order-action-sheet').hide();\r\n                        // get the order that was selected for cancellation\r\n                        var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            trackOrderPageViewModel.trackOrderResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n                        // change the selectedOrder status to \"cancelled\"\r\n                        selectedOrder.status = \"cancelled\";\r\n                        // update the selectedOrder status remotely\r\n                        await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                    `/wp-json/wc/v3/orders/${selectedOrder.id}`,\r\n                                type: \"put\",\r\n                                contentType: \"application/json\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                        utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                },\r\n                                dataType: \"json\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: false,\r\n                                data: JSON.stringify(selectedOrder)\r\n                            }\r\n                        ));\r\n\r\n                        // load the user profile details from the app database\r\n                        var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                        loadData(\"user-details\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                        // refresh the contents of the track order page\r\n                        let searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        trackOrderPageViewModel.\r\n                        loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                            \"customer\": userDetails.id,\r\n                            \"search\": $('#track-order-page #track-order-page-input').get(0).ej2_instances[0].value || \"\"});\r\n                        await utopiasoftware[utopiasoftware_app_namespace].controller.trackOrderPageViewModel.\r\n                        displayPageContent(searchResultsArray[0]);\r\n                        // inform the user that the order has been cancelled\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 2000;\r\n                        toast.content = `Order #${selectedOrder.id} has been cancelled`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    catch(err){\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'error-ej2-toast';\r\n                        toast.timeOut = 3500;\r\n                        toast.content = `Error cancelling order #${selectedOrder.id}. Try again`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    finally{\r\n                        // display the page loader\r\n                        $('#track-order-page .modal').css(\"display\", \"none\");\r\n                    }\r\n                };\r\n\r\n            // display the cancel order action sheet\r\n            await document.getElementById('cancel-order-action-sheet').show();\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Reorder\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async reorderButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to make a reorder`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // show the page loader\r\n            $('#track-order-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    trackOrderPageViewModel.trackOrderResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // create a new order object\r\n                    var newOrder = JSON.parse(JSON.stringify(selectedOrder));\r\n                    // delete and reset all necessary properties for the new order\r\n                    delete newOrder.id;\r\n                    newOrder.transaction_id = \"\";\r\n                    newOrder.line_items.forEach(function(lineItem){\r\n                        delete lineItem.id;\r\n                        lineItem.total = lineItem.subtotal; // remove any discounts\r\n                        for(let index = 0; index < lineItem.meta_data.length; index++){\r\n                            delete lineItem.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.tax_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.shipping_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.fee_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    delete newOrder.coupon_lines;\r\n                    delete newOrder.discount_total;\r\n                    delete newOrder.discount_tax;\r\n                    newOrder.set_paid = false;\r\n\r\n                    // update the status of the new order to \"pending\"\r\n                    newOrder.status = \"pending\";\r\n\r\n                    // update the selectedOrder status remotely\r\n                    newOrder = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                `/wp-json/wc/v3/orders`,\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify(newOrder)\r\n                        }\r\n                    ));\r\n\r\n\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"checkout-page.html\", {data: {orderData: newOrder}});\r\n                }\r\n                catch(err){\r\n                    console.log(err, \"REORDER ERROR\");\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Placing new order failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#track-order-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Completed Orders page\r\n     */\r\n    completedOrdersPageViewModel: {\r\n\r\n        /**\r\n         * holds the array of orders for the search result that was just run by the user\r\n         */\r\n        ordersResultsArray: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#completed-orders-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#completed-orders-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#completed-orders-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#completed-orders-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#completed-orders-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n\r\n                    // hide the previously displayed orders info\r\n                    $('#completed-orders-page .row').css(\"display\", \"none\");\r\n                    // show the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"table\");\r\n\r\n                    // load the user profile details from the app database\r\n                    var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"user-details\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                    let searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    completedOrdersPageViewModel.\r\n                    loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                        \"customer\": userDetails.id, \"status\": \"completed\"});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.\r\n                    displayPageContent(searchResultsArray[0]);\r\n\r\n                    if(searchResultsArray[0].length == 0){ // no orders were found\r\n                        // hide the page preloader\r\n                        $('#completed-orders-page .page-preloader').css(\"display\", \"none\");\r\n                        // hide the previously displayed orders info\r\n                        $('#completed-orders-page .row').css(\"display\", \"none\");\r\n                        // hide the page loader\r\n                        $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                        // inform the user that no result for the search was found'\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 3000;\r\n                        toast.content = `Sorry, no order was found.`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    else{ // orders were found\r\n                        // hide the page preloader\r\n                        $('#completed-orders-page .page-preloader').css(\"display\", \"none\");\r\n                        // show the orders info\r\n                        $('#completed-orders-page .row').css(\"display\", \"block\");\r\n                        // hide the page loader\r\n                        $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n                    }\r\n\r\n                }\r\n                catch(err){\r\n                    // hide the page preloader\r\n                    $('#completed-orders-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide the previously displayed orders info\r\n                    $('#completed-orders-page .row').css(\"display\", \"none\");\r\n                    // show the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Sorry, a search error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"}`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update cart count\r\n            $('#completed-orders-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.deviceOnlineListener, false);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.deviceOnlineListener, false);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // reset the view-model properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.ordersResultsArray = null;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the previous page on the stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to view orders\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#completed-orders-page #completed-orders-page-pull-hook').attr(\"disabled\", true);\r\n\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // show the page loader\r\n                $('#completed-orders-page .modal').css(\"display\", \"table\");\r\n\r\n                // load the user profile details from the app database\r\n                var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                let searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                completedOrdersPageViewModel.\r\n                loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                    \"customer\": userDetails.id, \"status\": \"completed\"});\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.\r\n                displayPageContent(searchResultsArray[0]);\r\n\r\n                if(searchResultsArray[0].length == 0){ // no orders were found\r\n                    // hide the page preloader\r\n                    $('#completed-orders-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide the previously displayed orders info\r\n                    $('#completed-orders-page .row').css(\"display\", \"none\");\r\n                    // hide the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                    // inform the user that no result for the search was found'\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'default-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Sorry, no order was found.`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                else{ // orders were found\r\n                    // hide the page preloader\r\n                    $('#completed-orders-page .page-preloader').css(\"display\", \"none\");\r\n                    // show the orders info\r\n                    $('#completed-orders-page .row').css(\"display\", \"block\");\r\n                    // hide the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n\r\n            }\r\n            catch(err){\r\n                // hide the page preloader\r\n                $('#completed-orders-page .page-preloader').css(\"display\", \"none\");\r\n                // show the page loader\r\n                $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Sorry, a search error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#completed-orders-page #completed-orders-page-pull-hook').removeAttr(\"disabled\");\r\n                // hide the preloader\r\n                $('#completed-orders-page .page-preloader').css(\"display\", \"none\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load orders to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @param queryParam {Object} holds the objects that contains the query\r\n         * params for the type of products to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadOrders(queryParam, pageToAccess = queryParam.page || 1,\r\n                         pageSize = queryParam.per_page || 20){\r\n            queryParam.page = pageToAccess;\r\n            queryParam.per_page = pageSize;\r\n\r\n            var promisesArray = []; // holds the array for the promises used to load the orders\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested products list from the server\r\n                promisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/orders\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: queryParam\r\n                        }\r\n                    )).then(function(ordersArray){\r\n                        // check if the ordersArray contains orders\r\n                        if(ordersArray.length > 0){ // there are orders\r\n                            // update the current search results array with the ordersArray\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.\r\n                                ordersResultsArray = ordersArray;\r\n                        }\r\n\r\n                        resolve(ordersArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                promisesArray.push(Promise.reject(\"no internet connection\"));\r\n            }\r\n\r\n            return Promise.all(promisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products on the search popover\r\n         *\r\n         * @param ordersArray\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(ordersArray){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let ordersContent = \"\"; // holds the contents for the orders\r\n\r\n                // check if the ordersArray is empty or not\r\n                if(ordersArray.length <= 0){ // there are no new content to display\r\n\r\n                    resolve(ordersArray.length); // resolve promise with the length of the orders array\r\n                }\r\n                else{ // there are some orders to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < ordersArray.length; index++){\r\n\r\n                        if(ordersArray[index].status === \"pending\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: brown\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.checkoutButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Checkout\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.cancelButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Cancel\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"processing\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: goldenrod\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"on-hold\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: black\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.checkoutButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Checkout\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.cancelButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Cancel\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"completed\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: green\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"cancelled\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: #d64113\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else{\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: black\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                    }\r\n\r\n\r\n                    // attach the new orders to the page\r\n                    $('#completed-orders-page #completed-orders-page-orders-container').html(ordersContent);\r\n\r\n                    resolve(ordersArray.length); // resolve the promise with length of the ordersArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Check Out\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async checkoutButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // show the page loader\r\n            $('#completed-orders-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    completedOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // check if the checkout page has previously been displayed in the app-main navigator\r\n                    var pagesStackArray = $('#app-main-navigator').get(0).pages; // holds the array of pages in the app-main navigator\r\n                    var indexOfCheckoutPage = pagesStackArray.findIndex(function(page, pageIndex){\r\n                        // test if the page is the checkout page\r\n                        return $(pagesStackArray[pageIndex]).get(0).id === \"checkout-page\";\r\n                    });\r\n\r\n                    // check if the checkout page was found in the app-main navigator stack\r\n                    if(indexOfCheckoutPage > -1){ // checkout page was found\r\n                        // remove the checkout page from the app-main navigator before re-displaying it\r\n                        await $('#app-main-navigator').get(0).removePage(indexOfCheckoutPage);\r\n                    }\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"checkout-page.html\", {data: {orderData: selectedOrder}});\r\n                }\r\n                catch(err){\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Order checkout failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Details\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async detailsButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // show the page loader\r\n            $('#completed-orders-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    completedOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"order-details-page.html\", {data: {orderData: selectedOrder}});\r\n                }\r\n                catch(err){\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Order checkout failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Cancel\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async cancelButtonClicked(buttonElem){\r\n\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to cancel this order`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // attach functions to handle the \"Reject/No\" and \"Accept/Yes\" buttons click event.\r\n            // These buttons are located in the 'Cancel Order Action Sheet'.\r\n            // Click event handlers must always be defined for these buttons when using this action sheet\r\n\r\n            // function for \"Reject/No\" button\r\n            $('#cancel-order-action-sheet #cancel-order-no').get(0).onclick =\r\n                async function(){\r\n                    // hide the action sheet\r\n                    await document.getElementById('cancel-order-action-sheet').hide();\r\n                };\r\n\r\n            // function for \"Accept/Yes\" button\r\n            $('#cancel-order-action-sheet #cancel-order-yes').get(0).onclick =\r\n                async function(){\r\n                    // display the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"table\");\r\n                    try{\r\n                        // hide the action sheet\r\n                        await document.getElementById('cancel-order-action-sheet').hide();\r\n                        // get the order that was selected for cancellation\r\n                        var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            completedOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n                        // change the selectedOrder status to \"cancelled\"\r\n                        selectedOrder.status = \"cancelled\";\r\n                        // update the selectedOrder status remotely\r\n                        await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                    `/wp-json/wc/v3/orders/${selectedOrder.id}`,\r\n                                type: \"put\",\r\n                                contentType: \"application/json\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                        utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                },\r\n                                dataType: \"json\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: false,\r\n                                data: JSON.stringify(selectedOrder)\r\n                            }\r\n                        ));\r\n\r\n                        // load the user profile details from the app database\r\n                        var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                        loadData(\"user-details\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                        // refresh the contents of the completed orders page\r\n                        let searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        trackOrderPageViewModel.\r\n                        loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                            \"customer\": userDetails.id,\r\n                            \"status\": \"completed\"});\r\n                        await utopiasoftware[utopiasoftware_app_namespace].controller.completedOrdersPageViewModel.\r\n                        displayPageContent(searchResultsArray[0]);\r\n                        // inform the user that the order has been cancelled\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 2000;\r\n                        toast.content = `Order #${selectedOrder.id} has been cancelled`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    catch(err){\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'error-ej2-toast';\r\n                        toast.timeOut = 3500;\r\n                        toast.content = `Error cancelling order #${selectedOrder.id}. Try again`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    finally{\r\n                        // display the page loader\r\n                        $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n                    }\r\n                };\r\n\r\n            // display the cancel order action sheet\r\n            await document.getElementById('cancel-order-action-sheet').show();\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Reorder\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async reorderButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to make a reorder`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // show the page loader\r\n            $('#completed-orders-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    completedOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // create a new order object\r\n                    var newOrder = JSON.parse(JSON.stringify(selectedOrder));\r\n                    // delete and reset all necessary properties for the new order\r\n                    delete newOrder.id;\r\n                    newOrder.transaction_id = \"\";\r\n                    newOrder.line_items.forEach(function(lineItem){\r\n                        delete lineItem.id;\r\n                        lineItem.total = lineItem.subtotal; // remove any discounts\r\n                        for(let index = 0; index < lineItem.meta_data.length; index++){\r\n                            delete lineItem.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.tax_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.shipping_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.fee_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    delete newOrder.coupon_lines;\r\n                    delete newOrder.discount_total;\r\n                    delete newOrder.discount_tax;\r\n                    newOrder.set_paid = false;\r\n\r\n                    // update the status of the new order to \"pending\"\r\n                    newOrder.status = \"pending\";\r\n\r\n                    // update the selectedOrder status remotely\r\n                    newOrder = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                `/wp-json/wc/v3/orders`,\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify(newOrder)\r\n                        }\r\n                    ));\r\n\r\n\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"checkout-page.html\", {data: {orderData: newOrder}});\r\n                }\r\n                catch(err){\r\n                    console.log(err, \"REORDER ERROR\");\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Placing new order failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#completed-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Pending Orders page\r\n     */\r\n    pendingOrdersPageViewModel: {\r\n\r\n        /**\r\n         * holds the array of orders for the search result that was just run by the user\r\n         */\r\n        ordersResultsArray: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#pending-orders-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#pending-orders-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#pending-orders-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#pending-orders-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#pending-orders-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n\r\n                    // hide the previously displayed orders info\r\n                    $('#pending-orders-page .row').css(\"display\", \"none\");\r\n                    // show the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"table\");\r\n\r\n                    // load the user profile details from the app database\r\n                    var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"user-details\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                    let searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    pendingOrdersPageViewModel.\r\n                    loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                        \"customer\": userDetails.id, \"status\": \"pending\"});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.\r\n                    displayPageContent(searchResultsArray[0]);\r\n\r\n                    if(searchResultsArray[0].length == 0){ // no orders were found\r\n                        // hide the page preloader\r\n                        $('#pending-orders-page .page-preloader').css(\"display\", \"none\");\r\n                        // hide the previously displayed orders info\r\n                        $('#pending-orders-page .row').css(\"display\", \"none\");\r\n                        // hide the page loader\r\n                        $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                        // inform the user that no result for the search was found'\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 3000;\r\n                        toast.content = `Sorry, no order was found.`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    else{ // orders were found\r\n                        // hide the page preloader\r\n                        $('#pending-orders-page .page-preloader').css(\"display\", \"none\");\r\n                        // show the orders info\r\n                        $('#pending-orders-page .row').css(\"display\", \"block\");\r\n                        // hide the page loader\r\n                        $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n                    }\r\n\r\n                }\r\n                catch(err){\r\n                    // hide the page preloader\r\n                    $('#pending-orders-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide the previously displayed orders info\r\n                    $('#pending-orders-page .row').css(\"display\", \"none\");\r\n                    // show the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Sorry, a search error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"}`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update cart count\r\n            $('#pending-orders-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.deviceOnlineListener, false);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.deviceOnlineListener, false);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // reset the view-model properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.ordersResultsArray = null;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the previous page on the stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to view orders\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#pending-orders-page #pending-orders-page-pull-hook').attr(\"disabled\", true);\r\n\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // show the page loader\r\n                $('#pending-orders-page .modal').css(\"display\", \"table\");\r\n\r\n                // load the user profile details from the app database\r\n                var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"user-details\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                let searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                pendingOrdersPageViewModel.\r\n                loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                    \"customer\": userDetails.id, \"status\": \"pending\"});\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.\r\n                displayPageContent(searchResultsArray[0]);\r\n\r\n                if(searchResultsArray[0].length == 0){ // no orders were found\r\n                    // hide the page preloader\r\n                    $('#pending-orders-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide the previously displayed orders info\r\n                    $('#pending-orders-page .row').css(\"display\", \"none\");\r\n                    // hide the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                    // inform the user that no result for the search was found'\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'default-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Sorry, no order was found.`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                else{ // orders were found\r\n                    // hide the page preloader\r\n                    $('#pending-orders-page .page-preloader').css(\"display\", \"none\");\r\n                    // show the orders info\r\n                    $('#pending-orders-page .row').css(\"display\", \"block\");\r\n                    // hide the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n\r\n            }\r\n            catch(err){\r\n                // hide the page preloader\r\n                $('#pending-orders-page .page-preloader').css(\"display\", \"none\");\r\n                // show the page loader\r\n                $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Sorry, a search error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"}`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#pending-orders-page #pending-orders-page-pull-hook').removeAttr(\"disabled\");\r\n                // hide the preloader\r\n                $('#pending-orders-page .page-preloader').css(\"display\", \"none\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load orders to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @param queryParam {Object} holds the objects that contains the query\r\n         * params for the type of products to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadOrders(queryParam, pageToAccess = queryParam.page || 1,\r\n                         pageSize = queryParam.per_page || 20){\r\n            queryParam.page = pageToAccess;\r\n            queryParam.per_page = pageSize;\r\n\r\n            var promisesArray = []; // holds the array for the promises used to load the orders\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested products list from the server\r\n                promisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/orders\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: queryParam\r\n                        }\r\n                    )).then(function(ordersArray){\r\n                        // check if the ordersArray contains orders\r\n                        if(ordersArray.length > 0){ // there are orders\r\n                            // update the current search results array with the ordersArray\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.\r\n                                ordersResultsArray = ordersArray;\r\n                        }\r\n\r\n                        resolve(ordersArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                promisesArray.push(Promise.reject(\"no internet connection\"));\r\n            }\r\n\r\n            return Promise.all(promisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products on the search popover\r\n         *\r\n         * @param ordersArray\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(ordersArray){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let ordersContent = \"\"; // holds the contents for the orders\r\n\r\n                // check if the ordersArray is empty or not\r\n                if(ordersArray.length <= 0){ // there are no new content to display\r\n\r\n                    resolve(ordersArray.length); // resolve promise with the length of the orders array\r\n                }\r\n                else{ // there are some orders to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < ordersArray.length; index++){\r\n\r\n                        if(ordersArray[index].status === \"pending\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: brown\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.checkoutButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Checkout\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.cancelButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Cancel\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"processing\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: goldenrod\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"on-hold\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: black\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.checkoutButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Checkout\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.cancelButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Cancel\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"completed\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: green\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else if(ordersArray[index].status === \"cancelled\"){\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: #d64113\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.reorderButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Reorder\r\n                            </ons-button>\r\n                            <ons-button disable-auto-styling modifier=\"quiet\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.detailsButtonClicked(this)\"\r\n                            style=\"border-color: #ffffff; background-color: #ffffff; color: #363E7C;\r\n                                    margin: 0; padding: 0; transform: scale(0.75);\" data-order-index=\"${index}\">\r\n                                Details\r\n                            </ons-button>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                        else{\r\n                            ordersContent += ` <div class=\"row\" style=\"font-size: 1em; font-weight: 300;\r\n                            border-bottom: 1px lightgray solid; color: #6d6d72;\">\r\n                            <div class=\"col-xs-2\" style=\" word-wrap: break-word; text-align: center; \r\n                            padding-left: 5px; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${ordersArray[index].id}</div>\r\n                            <div class=\"col-xs-4\" style=\" word-wrap: break-word; \r\n                            text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                            ${kendo.toString(kendo.parseFloat(ordersArray[index].total), \"n2\")}\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"text-align: center; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 1px\">\r\n                            <span style=\"display: block; text-transform: uppercase; color: black\">\r\n                                ${ordersArray[index].status}\r\n                            </span>\r\n                            </div>\r\n                            </div>`;\r\n                        }\r\n                    }\r\n\r\n\r\n                    // attach the new orders to the page\r\n                    $('#pending-orders-page #pending-orders-page-orders-container').html(ordersContent);\r\n\r\n                    resolve(ordersArray.length); // resolve the promise with length of the ordersArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Check Out\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async checkoutButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // show the page loader\r\n            $('#pending-orders-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    pendingOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // check if the checkout page has previously been displayed in the app-main navigator\r\n                    var pagesStackArray = $('#app-main-navigator').get(0).pages; // holds the array of pages in the app-main navigator\r\n                    var indexOfCheckoutPage = pagesStackArray.findIndex(function(page, pageIndex){\r\n                        // test if the page is the checkout page\r\n                        return $(pagesStackArray[pageIndex]).get(0).id === \"checkout-page\";\r\n                    });\r\n\r\n                    // check if the checkout page was found in the app-main navigator stack\r\n                    if(indexOfCheckoutPage > -1){ // checkout page was found\r\n                        // remove the checkout page from the app-main navigator before re-displaying it\r\n                        await $('#app-main-navigator').get(0).removePage(indexOfCheckoutPage);\r\n                    }\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"checkout-page.html\", {data: {orderData: selectedOrder}});\r\n                }\r\n                catch(err){\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Order checkout failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Details\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async detailsButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // show the page loader\r\n            $('#pending-orders-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    pendingOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"order-details-page.html\", {data: {orderData: selectedOrder}});\r\n                }\r\n                catch(err){\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Order checkout failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Cancel\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async cancelButtonClicked(buttonElem){\r\n\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to cancel this order`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // attach functions to handle the \"Reject/No\" and \"Accept/Yes\" buttons click event.\r\n            // These buttons are located in the 'Cancel Order Action Sheet'.\r\n            // Click event handlers must always be defined for these buttons when using this action sheet\r\n\r\n            // function for \"Reject/No\" button\r\n            $('#cancel-order-action-sheet #cancel-order-no').get(0).onclick =\r\n                async function(){\r\n                    // hide the action sheet\r\n                    await document.getElementById('cancel-order-action-sheet').hide();\r\n                };\r\n\r\n            // function for \"Accept/Yes\" button\r\n            $('#cancel-order-action-sheet #cancel-order-yes').get(0).onclick =\r\n                async function(){\r\n                    // display the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"table\");\r\n                    try{\r\n                        // hide the action sheet\r\n                        await document.getElementById('cancel-order-action-sheet').hide();\r\n                        // get the order that was selected for cancellation\r\n                        var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            pendingOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n                        // change the selectedOrder status to \"cancelled\"\r\n                        selectedOrder.status = \"cancelled\";\r\n                        // update the selectedOrder status remotely\r\n                        await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                    `/wp-json/wc/v3/orders/${selectedOrder.id}`,\r\n                                type: \"put\",\r\n                                contentType: \"application/json\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                        utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                                },\r\n                                dataType: \"json\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: false,\r\n                                data: JSON.stringify(selectedOrder)\r\n                            }\r\n                        ));\r\n\r\n                        // load the user profile details from the app database\r\n                        var userDetails = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                        loadData(\"user-details\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase)).userDetails;\r\n\r\n                        // refresh the contents of the pending orders page\r\n                        let searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        pendingOrdersPageViewModel.\r\n                        loadOrders({\"page\": 1, \"per_page\": 20, \"order\": \"desc\", \"orderby\": \"date\",\r\n                            \"customer\": userDetails.id,\r\n                            \"status\": \"pending\"});\r\n                        await utopiasoftware[utopiasoftware_app_namespace].controller.pendingOrdersPageViewModel.\r\n                        displayPageContent(searchResultsArray[0]);\r\n                        // inform the user that the order has been cancelled\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'default-ej2-toast';\r\n                        toast.timeOut = 2000;\r\n                        toast.content = `Order #${selectedOrder.id} has been cancelled`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    catch(err){\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'error-ej2-toast';\r\n                        toast.timeOut = 3500;\r\n                        toast.content = `Error cancelling order #${selectedOrder.id}. Try again`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    finally{\r\n                        // display the page loader\r\n                        $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n                    }\r\n                };\r\n\r\n            // display the cancel order action sheet\r\n            await document.getElementById('cancel-order-action-sheet').show();\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Reorder\" button on the\r\n         * Orders Collection is clicked\r\n         *\r\n         * @buttonElem {HTMLButton}\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async reorderButtonClicked(buttonElem){\r\n            var $buttonElement = $(buttonElem); // get a jQuery reference to the button element that was clicked\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to make a reorder`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // show the page loader\r\n            $('#pending-orders-page .modal').css(\"display\", \"table\");\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    pendingOrdersPageViewModel.ordersResultsArray[window.parseInt($buttonElement.attr(\"data-order-index\"))];\r\n\r\n                console.log(\"ORDER INDEX\", $buttonElement.attr(\"data-order-index\"));\r\n\r\n                console.log(\"SELECTED ORDER\", selectedOrder);\r\n\r\n                try{\r\n                    // create a new order object\r\n                    var newOrder = JSON.parse(JSON.stringify(selectedOrder));\r\n                    // delete and reset all necessary properties for the new order\r\n                    delete newOrder.id;\r\n                    newOrder.transaction_id = \"\";\r\n                    newOrder.line_items.forEach(function(lineItem){\r\n                        delete lineItem.id;\r\n                        lineItem.total = lineItem.subtotal; // remove any discounts\r\n                        for(let index = 0; index < lineItem.meta_data.length; index++){\r\n                            delete lineItem.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.tax_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.shipping_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.fee_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    delete newOrder.coupon_lines;\r\n                    delete newOrder.discount_total;\r\n                    delete newOrder.discount_tax;\r\n                    newOrder.set_paid = false;\r\n\r\n                    // update the status of the new order to \"pending\"\r\n                    newOrder.status = \"pending\";\r\n\r\n                    // update the selectedOrder status remotely\r\n                    newOrder = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                `/wp-json/wc/v3/orders`,\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify(newOrder)\r\n                        }\r\n                    ));\r\n\r\n\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).pushPage(\"checkout-page.html\", {data: {orderData: newOrder}});\r\n                }\r\n                catch(err){\r\n                    console.log(err, \"REORDER ERROR\");\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Placing new order failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the page loader\r\n                    $('#pending-orders-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Order Details page\r\n     */\r\n    orderDetailsPageViewModel: {\r\n\r\n\r\n        /**\r\n         * holds the Order object which contains details to be displayed\r\n         */\r\n        orderDetails : null,\r\n\r\n        /**\r\n         * holds the array containing order notes belonging to\r\n         * the specified order object (i.e. orderDetails)\r\n         */\r\n        orderNotesArray: [],\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        orderDetailsPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#order-details-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.orderDetailsPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#order-details-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#order-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#order-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#order-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                // set the order object to be used by this page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.orderDetailsPageViewModel.orderDetails =\r\n                    $('#app-main-navigator').get(0).topPage.data.orderData;\r\n\r\n                try{\r\n\r\n                    // create the \"Reorder\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#order-details-reorder');\r\n\r\n\r\n                    // load the order notes attached to the loaded order details\r\n                    let promisesArray = []; // holds all created promises\r\n                    let orderId = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        orderDetailsPageViewModel.orderDetails.id; // get the id for the specified order object\r\n\r\n                    promisesArray.push(Promise.resolve($.ajax( // load the order notes for the specified order object\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                `/wp-json/wc/v3/orders/${orderId}/notes`,\r\n                            type: \"get\",\r\n                            //contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"type\": \"any\"}\r\n                        }\r\n                    )));\r\n\r\n                    // wait for all promises to resolve\r\n                    promisesArray = await Promise.all(promisesArray);\r\n                    // get the order notes belonging to the specified order object\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        orderDetailsPageViewModel.orderNotesArray = promisesArray[0];\r\n                    // display the order details\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        orderDetailsPageViewModel.displayContent();\r\n\r\n                    // enable the \"Reorder\" button\r\n                    $('#order-details-page #order-details-reorder').removeAttr(\"disabled\");\r\n\r\n                }\r\n                catch(err){\r\n                    console.log(\"ORDER DETAILS ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide page preloader\r\n                    $('#order-details-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide page modal loader\r\n                    $('#order-details-page .modal').css(\"display\", \"none\");\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: async function(){\r\n\r\n            window.SoftInputMode.set('adjustPan'); // adjust device input mode\r\n\r\n            // update cart count\r\n            $('#order-details-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the \"Reorder\" button\r\n            $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].destroy();\r\n\r\n\r\n            // reset the view-model properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.orderDetailsPageViewModel.orderDetails = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.orderDetailsPageViewModel.orderNotesArray = [];\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#order-details-page #order-details-page-pull-hook').attr(\"disabled\", true);\r\n\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // load the order notes attached to the loaded order details\r\n                let promisesArray = []; // holds all created promises\r\n                let orderId = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    orderDetailsPageViewModel.orderDetails.id; // get the id for the specified order object\r\n\r\n                promisesArray.push(Promise.resolve($.ajax( // load the order notes for the specified order object\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                            `/wp-json/wc/v3/orders/${orderId}/notes`,\r\n                        type: \"get\",\r\n                        //contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: {\"type\": \"any\"}\r\n                    }\r\n                )));\r\n\r\n                // wait for all promises to resolve\r\n                promisesArray = await Promise.all(promisesArray);\r\n                // get the order notes belonging to the specified order object\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    orderDetailsPageViewModel.orderNotesArray = promisesArray[0];\r\n                // display the order details\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                orderDetailsPageViewModel.displayContent();\r\n\r\n                // enable the \"Reorder\" button\r\n                $('#order-details-page #order-details-reorder').removeAttr(\"disabled\");\r\n\r\n            }\r\n            catch(err){\r\n                // hide the page preloader\r\n                $('#order-details-page .page-preloader').css(\"display\", \"none\");\r\n                // show the page loader\r\n                $('#order-details-page .modal').css(\"display\", \"none\");\r\n\r\n                console.log(\"ORDER DETAILS ERROR\", err);\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#order-details-page #order-details-page-pull-hook').removeAttr(\"disabled\");\r\n                // hide the preloader\r\n                $('#order-details-page .page-preloader').css(\"display\", \"none\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Reorder\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async reorderButtonClicked(){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to make a reorder`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                // enable the \"Reorder\" button\r\n                $('#order-details-page #order-details-reorder').removeAttr(\"disabled\");\r\n                // hide the spinner from the 'Reorder' button\r\n                $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].dataBind();\r\n                $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].stop();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // show the page loader\r\n            $('#order-details-page .modal').css(\"display\", \"table\");\r\n\r\n            // disable the \"Reorder\" button\r\n            $('#order-details-page #order-details-reorder').attr(\"disabled\", true);\r\n            // add the spinner from the 'Reorder'\r\n            $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].cssClass = '';\r\n            $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].dataBind();\r\n            $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].start();\r\n\r\n            // handle the tasks in a separate queue\r\n            window.setTimeout(async function(){\r\n                // get the selected order to be checked out\r\n                var selectedOrder = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    orderDetailsPageViewModel.orderDetails;\r\n\r\n                try{\r\n                    // create a new order object\r\n                    var newOrder = JSON.parse(JSON.stringify(selectedOrder));\r\n                    // delete and reset all necessary properties for the new order\r\n                    delete newOrder.id;\r\n                    newOrder.transaction_id = \"\";\r\n                    newOrder.line_items.forEach(function(lineItem){\r\n                        delete lineItem.id;\r\n                        lineItem.total = lineItem.subtotal; // remove any discounts\r\n                        for(let index = 0; index < lineItem.meta_data.length; index++){\r\n                            delete lineItem.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.tax_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.shipping_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    newOrder.fee_lines.forEach(function(item){\r\n                        delete item.id;\r\n                        for(let index = 0; index < item.meta_data.length; index++){\r\n                            delete item.meta_data[index].id;\r\n                        }\r\n                    });\r\n                    delete newOrder.coupon_lines;\r\n                    delete newOrder.discount_total;\r\n                    delete newOrder.discount_tax;\r\n                    newOrder.set_paid = false;\r\n\r\n                    // update the status of the new order to \"pending\"\r\n                    newOrder.status = \"pending\";\r\n\r\n                    // update the selectedOrder status remotely\r\n                    newOrder = await Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl +\r\n                                `/wp-json/wc/v3/orders`,\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify(newOrder)\r\n                        }\r\n                    ));\r\n\r\n                    // hide the page loader\r\n                    $('#order-details-page .modal').css(\"display\", \"none\");\r\n\r\n                    // disable the \"Reorder\" button\r\n                    $('#order-details-page #order-details-reorder').removeAttr(\"disabled\", true);\r\n                    // add the spinner from the 'Reorder'\r\n                    $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                    $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].dataBind();\r\n                    $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].stop();\r\n\r\n                    // display the checkout page using the selected order\r\n                    await $('#app-main-navigator').get(0).replacePage(\"checkout-page.html\", {data: {orderData: newOrder}});\r\n                }\r\n                catch(err){\r\n                    console.log(err, \"REORDER ERROR\");\r\n\r\n                    // hide the page loader\r\n                    $('#order-details-page .modal').css(\"display\", \"none\");\r\n\r\n                    // disable the \"Reorder\" button\r\n                    $('#order-details-page #order-details-reorder').removeAttr(\"disabled\", true);\r\n                    // add the spinner from the 'Reorder'\r\n                    $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                    $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].dataBind();\r\n                    $('#order-details-page #order-details-reorder').get(0).ej2_instances[0].stop();\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast message\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Placing new order failed. Please retry`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is used to load the order details data into the page\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayContent(){\r\n\r\n            try{\r\n\r\n                // get the order object set on this page\r\n                let orderData = utopiasoftware[utopiasoftware_app_namespace].controller.orderDetailsPageViewModel.orderDetails;\r\n\r\n                // display the orderDetails data\r\n                $('#order-details-page #order-details-list .order-details-order-number').\r\n                html(`#${orderData.id}`);\r\n                $('#order-details-page #order-details-list .order-details-order-status').\r\n                html(`${orderData.status}`);\r\n                // check if the order created date (in GMT) has a pending 'Z' appended to the time\r\n                if(! orderData.date_created_gmt.endsWith(\"Z\")){ // no pending 'Z', so add the 'Z'\r\n                    // add the pending 'Z' to ensure the date meets the ISO format\r\n                    orderData.date_created_gmt += 'Z';\r\n                }\r\n                $('#order-details-page #order-details-list .order-details-order-date').\r\n                html(`${kendo.toString(new Date(orderData.date_created_gmt), \"MMMM dd, yyyy\")}`);\r\n                $('#order-details-page #order-details-list .order-details-order-total').\r\n                html(`&#x20a6;${kendo.toString(kendo.parseFloat(orderData.total), \"n2\")}`);\r\n                $('#order-details-page #order-details-list .order-details-payment-method').\r\n                html(`${orderData.payment_method_title}`);\r\n                $('#order-details-page #order-details-list .order-details-shipping-method').\r\n                html(`${orderData.shipping_lines[0] ? orderData.shipping_lines[0].method_title : \"\"}`);\r\n                $('#order-details-page #order-details-list .order-details-shipping-cost').\r\n                html(`&#x20a6;${kendo.toString(kendo.parseFloat(orderData.shipping_total), \"n2\")}`);\r\n\r\n                // update the order shipping updates/notes\r\n                let displayContent = ''; // holds the contents to be generated in the for-loop\r\n                for(let index = 0; index < utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    orderDetailsPageViewModel.orderNotesArray.length; index++){ // attach the order updates/notes\r\n\r\n                    let orderNote = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        orderDetailsPageViewModel.orderNotesArray[index]; // get the current order note object\r\n\r\n                    displayContent += `\r\n                    <div class=\"col-xs-6\" style=\"text-align: right; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px;\r\n                            text-transform: lowercase; word-wrap: break-word\">${orderNote.note}</div>`;\r\n\r\n                    // check if the order note created date (in GMT) has a pending 'Z' appended to the time\r\n                    if(! orderNote.date_created_gmt.endsWith(\"Z\")){ // no pending 'Z', so add the 'Z'\r\n                        // add the pending 'Z' to ensure the date meets the ISO format\r\n                        orderNote.date_created_gmt += 'Z';\r\n                    }\r\n\r\n                    displayContent += `\r\n                    <div class=\"col-xs-6\" style=\"text-align: left; padding-left: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px;\r\n                            text-transform: lowercase; word-wrap: break-word\">\r\n                    ${kendo.toString(new Date(orderNote.date_created_gmt), \"MMMM dd, yyyy\")}        \r\n                    </div>\r\n                    <div class=\"clearfix visible-xs-block\"></div>`;\r\n                }\r\n                $('#order-details-page #order-details-list .order-details-order-notes').html(displayContent);\r\n\r\n                // display the items in the order\r\n                displayContent = ''; // reset the displayContent variable for use in the next for-loop\r\n                for(let index = 0; index < orderData.line_items.length; index++){\r\n                    displayContent +=\r\n                        `<div class=\"col-xs-6\" style=\"text-align: right; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.line_items[index].name}</div>\r\n                        <div class=\"col-xs-2\" style=\"text-align: left; padding-left: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">&times;${orderData.line_items[index].quantity}</div>\r\n                        <div class=\"col-xs-4\" style=\"text-align: left; padding-left: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                        &#x20a6;${kendo.toString(kendo.parseFloat(orderData.line_items[index].subtotal), \"n2\")}</div>\r\n                        <div class=\"clearfix visible-xs-block\"></div>`;\r\n                }\r\n                $('#order-details-page #order-details-list .order-details-order-items').html(displayContent);\r\n\r\n                // display the Billing Details\r\n                displayContent = ''; // reset the displayContent variable for next use\r\n\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                ${orderData.billing.first_name + \" \" + orderData.billing.last_name}</div>`;\r\n                //check if the billing details contains a company name\r\n                if(orderData.billing.company && orderData.billing.company !== \"\"){ // there is company name, so display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.company}</div>`;\r\n                }\r\n                // check if the billing details contains a 1st address line\r\n                if(orderData.billing.address_1 && orderData.billing.address_1 !== \"\") { // there is 1st address line, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.address_1}</div>`;\r\n                }\r\n                // check if the billing details contains a 2nd address line\r\n                if(orderData.billing.address_2 && orderData.billing.address_2 !== \"\") { // there is 2nd address line, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.address_2}</div>`;\r\n                }\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.city}</div>`;\r\n                // check if the billing details contains a state\r\n                if(orderData.billing.state && orderData.billing.state !== \"\") { // there is state, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.state}</div>`;\r\n                }\r\n                // check if the billing details contains a postal code\r\n                if(orderData.billing.postcode && orderData.billing.postcode !== \"\") { // there is postal code, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.postcode}</div>`;\r\n                }\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.country}</div>`;\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.phone}</div>`;\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.billing.email}</div>`;\r\n                $('#order-details-page #order-details-list .order-details-billing-details').html(displayContent);\r\n\r\n                // display the Shipping Details\r\n                displayContent = ''; // reset the displayContent variable for next use\r\n\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">\r\n                ${orderData.shipping.first_name + \" \" + orderData.shipping.last_name}</div>`;\r\n                //check if the shipping details contains a company name\r\n                if(orderData.shipping.company && orderData.shipping.company !== \"\"){ // there is company name, so display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.shipping.company}</div>`;\r\n                }\r\n                // check if the shipping details contains a 1st address line\r\n                if(orderData.shipping.address_1 && orderData.shipping.address_1 !== \"\") { // there is 1st address line, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.shipping.address_1}</div>`;\r\n                }\r\n                // check if the shipping details contains a 2nd address line\r\n                if(orderData.shipping.address_2 && orderData.shipping.address_2 !== \"\") { // there is 2nd address line, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.shipping.address_2}</div>`;\r\n                }\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.shipping.city}</div>`;\r\n                // check if the shipping details contains a state\r\n                if(orderData.shipping.state && orderData.shipping.state !== \"\") { // there is state, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.shipping.state}</div>`;\r\n                }\r\n                // check if the shipping details contains a postal code\r\n                if(orderData.shipping.postcode && orderData.shipping.postcode !== \"\") { // there is postal code, display it\r\n                    displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.shipping.postcode}</div>`;\r\n                }\r\n                displayContent += `<div class=\"col-xs-12\" style=\"text-align: left; padding-right: 5px;\r\n                            padding-top: 10px; padding-bottom: 10px\">${orderData.shipping.country}</div>`;\r\n                $('#order-details-page #order-details-list .order-details-shipping-details').html(displayContent);\r\n\r\n            }\r\n            finally {\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n};"]}