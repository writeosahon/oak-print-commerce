{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 18/11/2018.\r\n */\r\n\r\n/**\r\n* file defines all View-Models, Controllers and Event Listeners used by the app\r\n*\r\n* The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n* The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n* also used interchangeably\r\n*/\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * method contains the startup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // disable the default back button handler for the 'search-page-search-input-popover'\r\n            $('#search-page-search-input-popover').get(0).onDeviceBackButton.disable();\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            // create the ej2 bottom toast component for the app\r\n            new ej.notifications.Toast({\r\n                content: '',\r\n                cssClass: 'default-ej2-toast',\r\n                target: document.body,\r\n                position: {X: \"Center\",  Y: \"Bottom\"},\r\n                width: \"100%\",\r\n                timeOut: 0,\r\n                extendedTimeout: 0,\r\n                showCloseButton: true\r\n            }).appendTo($('.page-toast').get(0));\r\n\r\n            // create the ej2 \"timed\" bottom toast component for the app\r\n            new ej.notifications.Toast({\r\n                content: '',\r\n                cssClass: 'default-ej2-toast',\r\n                target: document.body,\r\n                position: {X: \"Center\",  Y: \"Bottom\"},\r\n                width: \"100%\",\r\n                timeOut: 4000, // default 4 sec\r\n                extendedTimeout: 0,\r\n                showCloseButton: true\r\n            }).appendTo($('.timed-page-toast').get(0));\r\n\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // create the pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase = new PouchDB('PrintServiceEcommerce.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // create the encrypted pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase =\r\n                    new PouchDB('PrintServiceEcommerceEncrypted.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // generate a password for encrypting the app database (if it does NOT already exist)\r\n                let secureKey = null;\r\n                try {\r\n                    // get secure key, if it exists\r\n                    secureKey = await new Promise(function(resolve, reject){\r\n                        NativeStorage.getItem(\"utopiasoftware-oak-print-service-secure-key\",resolve, reject);\r\n                    });\r\n                }\r\n                catch(err){ // secure key does not exist\r\n                    // create the secure key\r\n                    secureKey = await new Promise(function(resolve, reject){\r\n                        NativeStorage.setItem(\"utopiasoftware-oak-print-service-secure-key\",\r\n                            {password: Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine)},\r\n                            resolve, reject);\r\n                    });\r\n                }\r\n                // enable the db encryption using the generated password\r\n                await new Promise(function(resolve, reject){\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase.\r\n                    crypto(secureKey.password, {\r\n                        ignore: ['_attachments', '_deleted'],\r\n                        cb: function(err, key){\r\n                            if(err){ // there is an error\r\n                                reject(err); // reject Promise\r\n                            }\r\n                            else{ // no error\r\n                                resolve(key); // resolve Promise\r\n                            }\r\n                        }});\r\n                });\r\n\r\n                // load/set the initial number of items in the user's cart\r\n                try{\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.cartCount =\r\n                        (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.loadData(\"user-cart\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart.length;\r\n                }\r\n                catch(err){}\r\n\r\n                //register the listener for app database changes\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.appDatabaseChangesListenerViewModel.\r\n                    changesEventEmitter = utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                                                changes({\r\n                    live: true,\r\n                    include_docs: true,\r\n                    since: 'now',\r\n                    doc_ids: ['user-cart']\r\n                }).on(\"change\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    appDatabaseChangesListenerViewModel.userCartChanged);\r\n\r\n            }\r\n            catch(err){\r\n                console.log(\"APP LOADING ERROR\", err);\r\n            }\r\n            finally{\r\n\r\n                // load the initial content of the app\r\n                if(true){ // there is a previous logged in user\r\n                    // load the app main page\r\n                    $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n                }\r\n                else{ // there is no previously logged in user\r\n                    // load the login page\r\n                    $('ons-splitter').get(0).content.load(\"login-template\");\r\n                }\r\n\r\n                // set status bar color\r\n                StatusBar.backgroundColorByHexString(\"#363E7C\");\r\n                navigator.splashscreen.hide(); // hide the splashscreen\r\n                utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // flag that app is fully loaded and ready\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * this view-model is used to house the listeners and data/properties which listen for\r\n     * changes in the app database\r\n     */\r\n    appDatabaseChangesListenerViewModel : {\r\n\r\n        /**\r\n         * property holds the Event Emitter object for the changes taking\r\n         * place in the database. This object can be used to cancel event listening at\r\n         * any time\r\n         */\r\n        changesEventEmitter: null,\r\n\r\n        /**\r\n         * methosd is used to listen for changes to the\r\n         * user-cart document i.e. when the local cached user cart is updated/modified\r\n         *\r\n         * @param changesInfo {Object} holds the object containing the changes made to the user cart\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async userCartChanged(changesInfo){\r\n            if(changesInfo.deleted === true){ // the user local cart was deleted\r\n                // reset the cartCount app model property to zero\r\n                utopiasoftware[utopiasoftware_app_namespace].model.cartCount = 0;\r\n            }\r\n            else{ // the user local cart was modified/updated\r\n                // update the cartCount app model property to indicate the number of items in cart (using the updated cart length)\r\n                utopiasoftware[utopiasoftware_app_namespace].model.cartCount =\r\n                    changesInfo.doc.cart.length;\r\n            }\r\n\r\n            // update the cart count being displayed on all current pages\r\n            $('.cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Home page\r\n     */\r\n    homePageViewModel: {\r\n\r\n        /**\r\n         * object is used as the carousel Flickity object for \"New Products\"/ Banner Ads\r\n         */\r\n        newProductsCarousel: null,\r\n\r\n        /**\r\n         * object is used as the carousel Flickity object for \"Featured / Popular Products\"\r\n         */\r\n        featuredProductsCarousel: null,\r\n\r\n        /**\r\n         * object is used as the carousel Flickity object for \"Sales Products\"\r\n         */\r\n        salesProductsCarousel: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#home-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#home-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#home-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#home-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#home-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n                    // create the \"New Products\" carousel\r\n                    let newProductsCarousel = new Flickity($('#home-page #home-latest-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        // adaptiveHeight: true,\r\n                        imagesLoaded: true,\r\n                        cellSelector: '.col-xs-12',\r\n                        autoPlay: 5000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: false\r\n                    });\r\n                    newProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(newProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(newProductsCarousel._utopiasoftware_scrollTimer);\r\n                            newProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        newProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            newProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    newProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // clear the timer\r\n                            return;\r\n                        }\r\n                        // a cell was clicked, so load the product-details page\r\n                        //  $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\", {animation: \"lift\"});\r\n                    });\r\n                    // assign the \"New Product\" carousel to the appropriate object\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel =\r\n                        newProductsCarousel;\r\n\r\n                    // create the \"Featured Products\" carousel\r\n                    let featuredProductsCarousel = new Flickity($('#home-page #home-featured-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        cellSelector: '.col-xs-7',\r\n                        autoPlay: 4000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'center',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: false\r\n                    });\r\n                    featuredProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(featuredProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(featuredProductsCarousel._utopiasoftware_scrollTimer);\r\n                            featuredProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        featuredProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            featuredProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    featuredProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // do nothing\r\n                            return;\r\n                        }\r\n\r\n                        // call the method to load the product details page based on the product item clicked\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                        productItemClicked(window.parseInt($(cellElement).attr('data-product')),\r\n                            $(cellElement).attr('data-segment'));\r\n                    });\r\n                    // assign the \"Featured Products\" carousel to the appropriate object\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel =\r\n                        featuredProductsCarousel;\r\n\r\n                    let salesProductsCarousel = new Flickity($('#home-page #home-sales-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        cellSelector: '.col-xs-7',\r\n                        autoPlay: 4500,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'center',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: false\r\n                    });\r\n                    salesProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(salesProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(salesProductsCarousel._utopiasoftware_scrollTimer);\r\n                            salesProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        salesProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            salesProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    salesProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // do nothing\r\n                            return;\r\n                        }\r\n                        // call the method to load the product details page based on the product item clicked\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                        productItemClicked(window.parseInt($(cellElement).attr('data-product')),\r\n                            $(cellElement).attr('data-segment'));\r\n                    });\r\n                    // assign the \"Sales Products\" carousel to the appropriate object\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel =\r\n                        salesProductsCarousel;\r\n\r\n                    $('#loader-modal').get(0).hide(); // show loader\r\n\r\n                    // display page preloader\r\n                    $('#home-page .page-preloader').css(\"display\", \"block\");\r\n\r\n                    // start loading the page content\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.loadProducts();\r\n\r\n                    // hide the preloader\r\n                    $('#home-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n                catch(err){\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update page title\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"OAK\");\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOnlineListener, false);\r\n\r\n\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel){\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.reloadCells();\r\n            }\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel){\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.featuredProductsCarousel.reloadCells();\r\n            }\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel){\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.salesProductsCarousel.reloadCells();\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the carousels\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.\r\n            newProductsCarousel.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.\r\n                newProductsCarousel = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.\r\n                featuredProductsCarousel.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.\r\n                featuredProductsCarousel = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.\r\n                salesProductsCarousel.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.newProductsCarousel.\r\n                salesProductsCarousel = null;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            ons.notification.confirm('Do you want to close the app?',\r\n                {title: '<img src=\"css/app-images/oak-design-logo.png\" style=\"height: 1.5em; width: auto; margin-right: 0.5em\">Exit App',\r\n                buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog utopiasoftware-oak-alert-dialog'}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see live products\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#home-page #home-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.loadProducts();\r\n                // hide the preloader\r\n                $('#home-page .page-preloader').css(\"display\", \"none\");\r\n            }\r\n            catch(err){ // an error occurred\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#home-page #home-page-pull-hook').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load all products to the page\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProducts(){\r\n            var productTypesPromisesArray = []; // holds the array for all the promises of the product types to be loaded\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load banner products\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"private\",\r\n                            \"type\": \"external\", \"page\": 1, \"per_page\": 5}\r\n                        }\r\n                    )).then(function(productsArray){\r\n                        // save the retrieved data to app database as cache\r\n                        utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"banner-products\", docType: \"BANNER_PRODUCTS\", products: productsArray},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // hide the \"Products\" segment\r\n                        // remove the previously slides from the carousel\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            newProductsCarousel.\r\n                        remove($('#home-page #home-latest-design-block .row .col-xs-12').get());\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-12\" style=\"padding-left: 0; padding-right: 0;\">\r\n                                    <div class=\"e-card\" style=\"min-height: 40vh; max-height: 90vh\">\r\n                                        <div class=\"e-card-image\" style=\"\">\r\n                                        <img src=\"${productsArray[index].images[0].src}\" style=\"width: 100%; height: auto; max-height: 90vh\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            newProductsCarousel.append($(columnContent));\r\n                        }\r\n                        $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // show the \"Products\" segment\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // show the \"Products\" segment\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load featured products\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 5, \"featured\": true}\r\n                        }\r\n                    )).then(function(productsArray){\r\n\r\n                        // save the retrieved data to app database as cache\r\n                        utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"popular-products\", docType: \"POPULAR_PRODUCTS\", products: productsArray},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.\r\n                            remove($('#home-page #home-featured-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                 data-product=\"${index}\" data-segment=\"featured\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load sales products\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 5, \"on_sale\": true}\r\n                        }\r\n                    )).then(function(productsArray){\r\n\r\n                        // save the retrieved data to app database as cache\r\n                        utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"sales-products\", docType: \"SALES_PRODUCTS\", products: productsArray},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.\r\n                            remove($('#home-page #home-sales-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            if(!productsArray[index].regular_price || productsArray[index].regular_price == \"\"){ // regular price was NOT set, so set it\r\n                                productsArray[index].regular_price = \"0.00\";\r\n                            }\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                    data-product=\"${index}\" data-segment=\"sales\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productsArray[index].price) -\r\n                                    kendo.parseFloat(productsArray[index].regular_price)) /\r\n                                    kendo.parseFloat(productsArray[index].regular_price === \"0.00\" ? \r\n                                         productsArray[index].price : productsArray[index].regular_price)) \r\n                                    * 100)}% OFF\r\n                                                    </span>\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center; text-decoration: line-through\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].regular_price), \"n2\")}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                // display toast to show that there is no internet connection\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.content = \"No Internet connection. Pull down to refresh and see live products\";\r\n                toast.dataBind();\r\n                toast.show();\r\n                // load banner products from cached data\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"banner-products\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        return cachedProductsData.products;\r\n                    }).\r\n                    then(function(productsArray){\r\n                        $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // hide the \"Products\" segment\r\n                        // remove the previously slides from the carousel\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                        newProductsCarousel.\r\n                        remove($('#home-page #home-latest-design-block .row .col-xs-12').get());\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-12\" style=\"padding-left: 0; padding-right: 0;\">\r\n                                    <div class=\"e-card\" style=\"min-height: 40vh; max-height: 90vh\">\r\n                                        <div class=\"e-card-image\" style=\"\">\r\n                                        <img src=\"css/app-images/blank-img.png\" style=\"width: 100%; height: auto; max-height: 90vh\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            newProductsCarousel.append($(columnContent));\r\n                        }\r\n                        $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // show the \"Products\" segment\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        $('#home-page #home-latest-design-block').css(\"opacity\", \"1\"); // show the \"Products\" segment\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load featured products from cached data\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"popular-products\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        return cachedProductsData.products;\r\n                    }).then(function(productsArray){\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.\r\n                            remove($('#home-page #home-featured-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-featured-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                    data-product=\"${index}\" data-segment=\"featured\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            featuredProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n\r\n                // load sales products from cached data\r\n                productTypesPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"sales-products\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        return cachedProductsData.products;\r\n                    }).then(function(productsArray){\r\n                        if(productsArray.length > 0){\r\n                            // show the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"1\", \"display\": \"block\"});\r\n                            // remove the previously slides from the carousel\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.\r\n                            remove($('#home-page #home-sales-design-block .row .col-xs-7').get());\r\n                        }\r\n                        else{\r\n                            // hide the \"Products\" segment\r\n                            $('#home-page #home-sales-design-block').css({\"opacity\": \"0\", \"display\": \"none\"});\r\n                        }\r\n\r\n                        // attach the products to the page\r\n                        for(let index = 0; index < productsArray.length; index++){\r\n                            if(!productsArray[index].regular_price || productsArray[index].regular_price == \"\"){ // regular price was NOT set, so set it\r\n                                productsArray[index].regular_price = \"0.00\";\r\n                            }\r\n                            let columnContent =\r\n                                `<div class=\"col-xs-7\" style=\"margin-left: 20.5%; margin-right: 20.5%;\" \r\n                                  data-product=\"${index}\" data-segment=\"sales\">\r\n                                    <div class=\"e-card\" style=\"min-height: 34vh;\">\r\n                                        <div class=\"e-card-image\" style=\"height: 60%; \r\n                                        background-image: url('${productsArray[index].images[0].src}');\">\r\n                                        <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productsArray[index].price) -\r\n                                    kendo.parseFloat(productsArray[index].regular_price)) /\r\n                                    kendo.parseFloat(productsArray[index].regular_price === \"0.00\" ?\r\n                                        productsArray[index].price : productsArray[index].regular_price))\r\n                                    * 100)}% OFF\r\n                                                    </span>\r\n                                        </div>\r\n                                        <div class=\"e-card-header\">\r\n                                            <div class=\"e-card-header-caption\">\r\n                                                <div class=\"e-card-sub-title\" style=\"color: #000000; text-align: center; font-size: 14px; text-transform: capitalize\">\r\n                                                    ${productsArray[index].name}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center; text-decoration: line-through\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].regular_price), \"n2\")}\r\n                                                </div>\r\n                                                <div class=\"e-card-sub-title\" style=\"text-align: center;\">\r\n                                                &#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>`;\r\n                            // append the content\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.\r\n                            salesProductsCarousel.append($(columnContent));\r\n                        }\r\n                        resolve(); // resolve the parent promise\r\n                    }).catch(function(err){\r\n\r\n                        reject(); // reject the parent promise\r\n                    });\r\n                }));\r\n            }\r\n\r\n            return Promise.all(productTypesPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user wishes to view more featured products\r\n         * @returns {Promise<void>}\r\n         */\r\n        async showMoreFeaturedProducts(){\r\n            // load the products page in a separate event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // navigate to the products page\r\n                    await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                    // request for products from the category that was clicked\r\n                    let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20, \"featured\": true});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // hide the preloader for the products page\r\n                    $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user wishes to view more featured products\r\n         * @returns {Promise<void>}\r\n         */\r\n        async showMoreSalesProducts(){\r\n            // load the products page in a separate event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // navigate to the products page\r\n                    await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                    // request for products from the category that was clicked\r\n                    let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20, \"on_sale\": true});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // hide the preloader for the products page\r\n                    $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks any product item from the Feature/Popular OR\r\n         * Sales segments\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the 'appropriate' cached array of product items\r\n         *\r\n         * @param segmentType {String} specifies which segment the clicked product item belongs to.\r\n         * Possible options are: 'featured', 'sales'\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async productItemClicked(productIndex, segmentType){\r\n            // handle the function task in a different event queue\r\n            window.setTimeout(async function(){\r\n                var productItemsArray = []; // holds the array of 'appropriate' product items\r\n\r\n                try{\r\n                    // find out what segment type the clicked product belongs to\r\n                    switch (segmentType) {\r\n                        case \"featured\": // Featured/popular product\r\n                            // get the 'appropriate' product items collection\r\n                            productItemsArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                            loadData(\"popular-products\",\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n                            break;\r\n\r\n                        case \"sales\": // Sales product\r\n                            // get the 'appropriate' product items collection\r\n                            productItemsArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                            loadData(\"sales-products\",\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n                            break;\r\n                    }\r\n\r\n                    // display the products details page using the selected product\r\n                    $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : productItemsArray[productIndex]}});\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Categories page\r\n     */\r\n    categoriesPageViewModel: {\r\n\r\n        /**\r\n         * property holds the current \"page\" of the categories being accessed\r\n         */\r\n        currentPage: 0,\r\n\r\n        /**\r\n         * property holds the size i.e. number of items that can be contained in currentPage being accessed\r\n         */\r\n        pageSize: 100,\r\n\r\n        /**\r\n         * property holds the height of the \"content view\" for the page\r\n         */\r\n        viewContentHeight: 0,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#categories-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#categories-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#categories-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#categories-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#categories-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                // get the height of the view content container\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.viewContentHeight =\r\n                    Math.floor($('#categories-page .page__content').height());\r\n\r\n                // listen for the scroll event on the page\r\n                $('#categories-page .page__content').on(\"scroll\", function(){\r\n                    // handle the logic in a different event queue slot\r\n                    window.setTimeout(function(){\r\n                        // get the scrollTop position of the view content\r\n                        var scrollTop = Math.floor($('#categories-page .page__content').scrollTop());\r\n\r\n                        // get the percentage of scroll that has taken place from the top position\r\n                        var percentageScroll = (scrollTop /  utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                categoriesPageViewModel.viewContentHeight) * 100;\r\n                        if(percentageScroll >= 50){ // if the scroll position is >= halfway\r\n                            $('#categories-page #categories-page-scroll-top-fab').css(\r\n                                {\"transform\": \"scale(1)\",\r\n                                \"display\": \"inline-block\"});\r\n                        }\r\n                        else{ // if the scroll position is < halfway\r\n                            $('#categories-page #categories-page-scroll-top-fab').css({\"transform\": \"scale(0)\"});\r\n                        }\r\n                    }, 0);\r\n                });\r\n\r\n                // listen for when a category card is clicked\r\n                $thisPage.on(\"click\", \".e-card\", function(clickEvent){\r\n                    // load the products page in a separate event queue\r\n                    window.setTimeout(async function(){\r\n                        try{\r\n                            // navigate to the products page\r\n                            await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                            // request for products from the category that was clicked\r\n                            let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                            loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20,\r\n                                \"category\": $(clickEvent.currentTarget).attr(\"data-category-id\")});\r\n                            await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                        }\r\n                        catch(err){\r\n\r\n                            // hide all previously displayed ej2 toast\r\n                            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                            // display toast to show that an error\r\n                            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                            toast.cssClass = 'error-ej2-toast';\r\n                            toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                            toast.dataBind();\r\n                            toast.show();\r\n                        }\r\n                        finally{\r\n                            // hide the preloader for the products page\r\n                            $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                        }\r\n                    }, 0);\r\n                });\r\n\r\n                try{\r\n                    // start loading the page content\r\n                    let categoryArray = await utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.loadCategories();\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.displayPageContent(categoryArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the preloader\r\n                    $('#categories-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Products\"); // update the title of the page\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n            // hide the page scroll fab\r\n            $('#categories-page #categories-page-scroll-top-fab').css({\"display\": \"none\"});\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the \"Home\" page (tab)\r\n            $('#app-main-tabbar').get(0).setActiveTab(0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see updated products\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#categories-page #categories-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // start loading the page content\r\n                let categoryArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                categoriesPageViewModel.loadCategories(1, utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.categoriesPageViewModel.pageSize);\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.categoriesPageViewModel.displayPageContent(categoryArray[0]);\r\n            }\r\n            catch(err){ // an error occurred\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#categories-page #categories-page-pull-hook').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load products categories to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadCategories(pageToAccess = utopiasoftware[utopiasoftware_app_namespace].\r\n                                            controller.categoriesPageViewModel.currentPage + 1,\r\n                             pageSize = utopiasoftware[utopiasoftware_app_namespace].\r\n                                        controller.categoriesPageViewModel.pageSize){\r\n            var categoryPromisesArray = []; // holds the array for the promises used to load the product categories\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested categories list from the server\r\n                categoryPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products/categories\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {\"order\": \"asc\", \"orderby\": \"name\", \"hide_empty\": true,\r\n                                \"page\": pageToAccess, \"per_page\": pageSize}\r\n                        }\r\n                    )).then(function(categoriesArray){\r\n                        // check if there is any data to cache in the app database\r\n                        if(categoriesArray.length > 0){ // there is data to cache\r\n                            // remove the 'uncategorized' category\r\n                            categoriesArray = categoriesArray.filter(function(element){\r\n                                return element.slug !== 'uncategorized';\r\n                            });\r\n                            // generate an id for the data being cached\r\n                            let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"categories\";\r\n                            // save the retrieved data to app database as cached data\r\n                            utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                {_id: cachedDataId, docType: \"PRODUCT_CATEGORIES\", categories: categoriesArray},\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                            // update the current page being viewed\r\n                            utopiasoftware[utopiasoftware_app_namespace].\r\n                                controller.categoriesPageViewModel.currentPage = pageToAccess;\r\n                        }\r\n                        resolve(categoriesArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading product categories with Internet Connection\r\n            else{ // there is no internet connection\r\n                // display toast to show that there is no internet connection\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.content = \"No Internet connection. Pull down to refresh and see updated products\";\r\n                toast.dataBind();\r\n                toast.show();\r\n                // load the requested product categories from cached data\r\n                categoryPromisesArray.push(new Promise(function(resolve, reject){\r\n                    // generate the id for the cached data being retrieved\r\n                    let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"categories\";\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(cachedDataId, utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedCategoriesData){\r\n                        resolve(cachedCategoriesData.categories); // resolve the parent promise with the cached categories data\r\n                    }).\r\n                    catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n            }\r\n\r\n            return Promise.all(categoryPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products categories on the app screen\r\n         *\r\n         * @param categoriesArray\r\n         *\r\n         * @param appendContent {Boolean} if the value is true,\r\n         * add each content to the end of other items on the screen.\r\n         * Else, prepend the content to the top of other items\r\n         *\r\n         * @param overwriteContent {Boolean} should the old content be replaced or added to\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(categoriesArray, appendContent = true, overwriteContent = true){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let categoriesContent = \"\"; // holds the contents for the categories\r\n\r\n                // check if the categoriesArray is empty or not\r\n                if(categoriesArray.length <= 0){ // there are no new content to display\r\n                    resolve(categoriesArray.length); // resolve promise with the length of the categories array\r\n                }\r\n                else{ // there are some categories to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < categoriesArray.length; index++){\r\n                        categoriesContent += `<div class=\"col-xs-4\" `;\r\n                        if((index + 1) % 3 !== 0){ // this is NOT the last column in the row\r\n                            categoriesContent += `style=\"border-right: 1px lightgray solid; border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        else{ // this is the last column in the row\r\n                            categoriesContent += `style=\"border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        categoriesContent += `\r\n                        <ons-ripple background=\"rgba(63, 81, 181, 0.3)\"></ons-ripple>\r\n                        <div class=\"e-card\" data-category-id=\"${categoriesArray[index].id}\">\r\n                            <div class=\"e-card-image\" style=\"min-height: 100px; \r\n                            background-image: url('${categoriesArray[index].image.src}');\">\r\n                            </div>\r\n                            <div class=\"e-card-header\">\r\n                                <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                                    <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                        ${categoriesArray[index].name}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      </div>`;\r\n\r\n                    }\r\n\r\n                    // check if the contents are to be overwritten\r\n                    if(overwriteContent === true){ // content wants to be overwritten\r\n                        $('#categories-page #categories-contents-container').html(categoriesContent);\r\n                    }\r\n                    else{ // content is NOT to be overwritten\r\n                        if(appendContent === true){ // append content\r\n                            $('#categories-page #categories-contents-container').append(categoriesContent);\r\n                        }\r\n                        else{ // prepend content\r\n                            $('#categories-page #categories-contents-container').prepend(categoriesContent);\r\n                        }\r\n                    }\r\n\r\n                    resolve(categoriesArray.length); // resolve the promise with length of the categoriesArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method scrolls the page to the top\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollPageToTop(){\r\n            window.setTimeout(function(){\r\n                $('#categories-page .page__content').animate({ scrollTop: 0 }, 400);\r\n            }, 0);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Search page\r\n     */\r\n    searchPageViewModel: {\r\n\r\n        /**\r\n         * holds the array of products for the search result that was just run by the user\r\n         */\r\n        currentSearchResultsArray: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.backButtonClicked;\r\n\r\n                try{\r\n\r\n                    //instantiate the autocomplete widget for the search input\r\n                    let searchAutoComplete = new ej.dropdowns.AutoComplete({\r\n                        floatLabelType: \"Never\",\r\n                        placeholder: \"Search Products\",\r\n                        allowCustom: true,\r\n                        filterType: \"Contains\",\r\n                        minLength: 1000, // minimum number of characters that will automatically trigger autocomplete search\r\n                        suggestionCount: 20, // specified how many items will be in the popup\r\n                        dataSource: [],\r\n                        noRecordsTemplate: `Tap 'Search' key to begin search`,\r\n                        blur: function(){ // track when the component has lost focus\r\n                            this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                            // hide the popover\r\n                            $('#search-page-search-input-popover').get(0).hide();\r\n\r\n                        },\r\n                        change: function(){ // track when the component's value has changed\r\n\r\n                            let searchValue = \"\"; // holds the term to be searched for\r\n\r\n                            // check if the search component can perform a remote search\r\n                            if(this._allowRemoteSearch !== true){  // remote search is NOT allowed\r\n                                this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                                return; // exit function\r\n                            }\r\n\r\n                            // check that there is actually a search term entered in the search component\r\n                            if(!this.value || this.value.trim() === \"\"){ // no search term\r\n                                this._allowRemoteSearch = false; // set that remote search is NOT allowed\r\n                                return; // exit function\r\n                            }\r\n\r\n                            // update the search term value\r\n                            searchValue = this.value.trim();\r\n\r\n                            // inform user that search is ongoing\r\n                            $('#search-page-search-input-popover #search-input-popover-list').\r\n                            html(`\r\n                            <ons-list-item modifier=\"nodivider\" lock-on-drag=\"true\">\r\n                                <div class=\"left\">\r\n                                    <ons-progress-circular indeterminate modifier=\"pull-hook\" \r\n                                    style=\"transform: scale(0.6)\"></ons-progress-circular>\r\n                                </div>\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center;\">\r\n                                        Searching for products\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`);\r\n                            // display the popover\r\n                            $('#search-page-search-input-popover').get(0).\r\n                            show(document.getElementById('search-page-input'));\r\n\r\n                            // run the actual search in a different event queue\r\n                            window.setTimeout(async function() {\r\n                                var searchResultsArray = [];\r\n                                try{\r\n                                    searchResultsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 3,\r\n                                        \"search\": searchValue});\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                    displayPageContent(searchResultsArray[0]);\r\n                                }\r\n                                catch(err){\r\n\r\n                                    // remove the focus from the search autocomplete component\r\n                                    $('#search-page #search-page-input').get(0).ej2_instances[0].focusOut();\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast to show that an error\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'error-ej2-toast';\r\n                                    toast.timeOut = 3000;\r\n                                    toast.content = `Sorry, a search error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"}`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                            }, 0);\r\n\r\n                        }\r\n                    }).appendTo('#search-page-input');\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Search\"); // update the title of the page\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOnlineListener, false);\r\n\r\n            // load the recent searches list\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.deviceOnlineListener, false);\r\n            // destroy the current search result array\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.currentSearchResultsArray = null;\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the search input autocomplete component\r\n            $('#search-page #search-page-input').get(0).ej2_instances[0].destroy();\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // hide the search-input popover\r\n            $('#search-page-search-input-popover').get(0).hide();\r\n            // go to the \"Categories\" page (tab)\r\n            $('#app-main-tabbar').get(0).setActiveTab(1);\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see search results\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is used to display the \"Recent Searches\" list on the Search page.\r\n         * Recent Searches are gotten from the cached collection\r\n         */\r\n        async displayRecentSearches(){\r\n            try{\r\n                // load the recent search from the device database cache\r\n                let recentSearchData = await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                let displayContent = \"<ons-list-title>Recent Searches</ons-list-title>\"; // holds the content of the list to be created\r\n                // create the Recent Searches list\r\n                for(let index = 0; index < recentSearchData.products.length; index++){\r\n                    displayContent += `\r\n                    <ons-list-item modifier=\"longdivider\" tappable lock-on-drag=\"true\">\r\n                        <div class=\"center\">\r\n                            <div style=\"width: 100%;\" \r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                              recentSearchesItemClicked(${index})\">\r\n                                <span class=\"list-item__subtitle\">${recentSearchData.products[index].name}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"right\" prevent-tap \r\n                        onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                    removeRecentSearchItem(${index}, this);\">\r\n                            <ons-icon icon=\"md-close-circle\" style=\"color: lavender; font-size: 18px;\"></ons-icon>\r\n                        </div>\r\n                    </ons-list-item>`;\r\n                }\r\n                // attach the displayContent to the list\r\n                $('#search-page #search-list').html(displayContent);\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to save a search item i.e. a product to the cached \"Recent Searches\"\r\n         *\r\n         * @param product {Object} the product to include to the \"Recent Searches\" cache\r\n         * @returns {Promise<void>}\r\n         */\r\n        async saveRecentSearchItem(product){\r\n            var recentSearchesResultArray = []; // holds the recent searches array\r\n\r\n            try{\r\n                // get the recent searches collection\r\n                recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n            }\r\n            catch(err){}\r\n\r\n            try{\r\n                // add the received 'product' parameter to the top of the recent searches array\r\n                recentSearchesResultArray.unshift(product);\r\n                // ensure the array is NOT greater than 5 items in length\r\n                recentSearchesResultArray = recentSearchesResultArray.slice(0, 5);\r\n                // save the updated recent searches array  to the cached data collection of \"Recent Searches\"\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"recent-searches\", docType: \"RECENT_SEARCHES\", products: recentSearchesResultArray},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                // display the updated recent searches to the user\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to remove a search item i.e. a product from the cached \"Recent Searches\"\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the array of cached recent searches\r\n         *\r\n         * @param clickedElement {Element} the element that was clicked in order to trigger the product removal\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async removeRecentSearchItem(productIndex, clickedElement){\r\n\r\n            // execute the method is a different event queue\r\n            window.setTimeout(async function(){\r\n                var recentSearchesResultArray = []; // holds the recent searches array\r\n\r\n                try{\r\n                    // get the recent searches collection\r\n                    recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n                }\r\n                catch(err){}\r\n\r\n                try{\r\n                    // remove the received 'product' parameter index from the recent searches array\r\n                    recentSearchesResultArray.splice(productIndex, 1);\r\n                    // save the updated recent searches array  to the cached data collection of \"Recent Searches\"\r\n                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                        {_id: \"recent-searches\", docType: \"RECENT_SEARCHES\", products: recentSearchesResultArray},\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                    // hide the list-item belonging to the clicked element from the displayed list\r\n                    let $listItem = $(clickedElement).closest('ons-list-item');\r\n                    await kendo.fx($listItem).expand(\"vertical\").duration(300).reverse();\r\n                    // display the updated recent searches to the user\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0)\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks an item from the Recent Searches List\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the array returned of recent searches\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async recentSearchesItemClicked(productIndex){\r\n            // handle the function task in a different event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // get the recent searches collection\r\n                    let recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n\r\n                    // display the products details page using the selected product\r\n                    $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : recentSearchesResultArray[productIndex]}});\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the enter button is clicked on the device keyboard\r\n         *\r\n         * @param keyEvent\r\n         * @returns {Promise<void>}\r\n         */\r\n        async enterButtonClicked(keyEvent){\r\n            // check which key was pressed\r\n            if(keyEvent.which === kendo.keys.ENTER) // if the enter key was pressed\r\n            {\r\n                // prevent the default action from occurring\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopImmediatePropagation();\r\n                keyEvent.stopPropagation();\r\n                // hide the device keyboard\r\n                Keyboard.hide();\r\n\r\n                // get the search autocomplete component\r\n                let searchAutoComplete = $('#search-page #search-page-input').get(0).ej2_instances[0];\r\n                // update the value of the retrieved component\r\n                searchAutoComplete.value = $('#search-page #search-page-input').val();\r\n                searchAutoComplete._allowRemoteSearch = true; // flag the remote search can occur\r\n                searchAutoComplete.dataBind(); // bind new value to the component\r\n                searchAutoComplete.change(); // trigger the change method\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load products to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @param queryParam {Object} holds the objects that contains the query\r\n         * params for the type of products to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProducts(queryParam, pageToAccess = queryParam.page || 1,\r\n                           pageSize = queryParam.per_page || 3){\r\n            queryParam.page = pageToAccess;\r\n            queryParam.per_page = pageSize;\r\n\r\n            var productPromisesArray = []; // holds the array for the promises used to load the products\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested products list from the server\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: queryParam\r\n                        }\r\n                    )).then(function(productsArray){\r\n                        // check if the productsArray contains products\r\n                        if(productsArray.length > 0){ // there are products\r\n                            // update the current search results array with the productsArray\r\n                            utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                                currentSearchResultsArray = productsArray;\r\n                        }\r\n\r\n                        resolve(productsArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                productPromisesArray.push(Promise.reject(\"no internet connection\"));\r\n            }\r\n\r\n            return Promise.all(productPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products on the search popover\r\n         *\r\n         * @param productsArray\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(productsArray){\r\n\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let productsContent = \"\"; // holds the contents for the products\r\n\r\n                // check if the productsArray is empty or not\r\n                if(productsArray.length <= 0){ // there are no new content to display\r\n                    // inform the user that no result for the search was founc'\r\n                    $('#search-page-search-input-popover #search-input-popover-list').\r\n                    html(`<ons-list-item modifier=\"nodivider\" lock-on-drag=\"true\">\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center; width: 100%;\">\r\n                                        No Results Found\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`);\r\n                    resolve(productsArray.length); // resolve promise with the length of the products array\r\n                }\r\n                else{ // there are some products to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < productsArray.length; index++){\r\n\r\n                        productsContent +=\r\n                            `<ons-list-item modifier=\"nodivider\" tappable lock-on-drag=\"true\" \r\n                              onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                              searchAutocompletePopOverItemClicked(${index})\">\r\n                                <div class=\"left\">\r\n                                    <div class=\"search-result-image\" style=\"background-image: url('${productsArray[index].images[0].src}'); \r\n                                                            width: 2em; height: 2em\"></div>\r\n                                </div>\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center;\">\r\n                                        ${productsArray[index].name}\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`;\r\n                    }\r\n\r\n                    // append the \"Load More\" search item\r\n                    productsContent +=\r\n                        `<ons-list-item modifier=\"nodivider\" tappable lock-on-drag=\"true\" \r\n                          onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.findMoreClicked();\">\r\n                                <div class=\"center\">\r\n                                    <div style=\"text-align: center; width: 100%; font-weight: bold;\">\r\n                                        Find More...\r\n                                    </div>\r\n                                </div>\r\n                            </ons-list-item>`;\r\n                    // attach the new search results to the search popover\r\n                    $('#search-page-search-input-popover #search-input-popover-list').html(productsContent);\r\n\r\n                    resolve(productsArray.length); // resolve the promise with length of the productsArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks an item from the search autocomplete popover\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the array returned by the product search\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async searchAutocompletePopOverItemClicked(productIndex){\r\n            // get the product the user clicked on from the search autocomplete popover\r\n            var selectedProduct = utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                currentSearchResultsArray[productIndex];\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // display the products details page using the selected product\r\n                    await $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : selectedProduct}});\r\n\r\n                    // save the selected product in recent products app cache\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.\r\n                    saveRecentSearchItem(selectedProduct);\r\n\r\n                    // update the value of the search autocomplete input to that which the user clicked on from the popover\r\n                    $('#search-page #search-page-input').val(selectedProduct.name);\r\n\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Find More\" option is\r\n         * tapped within the search input popover\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async findMoreClicked(){\r\n            // load the products page in a separate event queue\r\n            window.setTimeout(async function(){\r\n                try{\r\n                    // navigate to the products page\r\n                    await $('#app-main-tabbar').get(0).setActiveTab(4, {animation: 'none'});\r\n                    // request for products using the user's search term\r\n                    let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    loadProducts({\"order\": \"desc\", \"orderby\": \"date\", \"status\": \"publish\",\r\n                        \"type\": \"variable\", \"stock_status\": \"instock\", \"page\": 1, \"per_page\": 20, \"search\":\r\n                            $('#search-page #search-page-input').get(0).ej2_instances[0].value.trim()});\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // hide the preloader for the products page\r\n                    $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }, 0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Account page\r\n     */\r\n    accountPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for when the device back button is tapped\r\n                event.target.onDeviceBackButton = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    accountPageViewModel.backButtonClicked;\r\n\r\n                try{\r\n                    let accordion = new ej.navigations.Accordion({\r\n                        expandMode: 'Single'\r\n                    });\r\n                    accordion.appendTo('#account-personal-accordion');\r\n                    accordion.expandItem(true, 0);\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Account\"); // update the title of the page\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the \"Home\" page (tab)\r\n            $('#app-main-tabbar').get(0).setActiveTab(2);\r\n        },\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Login page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the login page\r\n         */\r\n        loginFormValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the signup page\r\n         */\r\n        signupFormValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.backButtonClicked;\r\n\r\n                // listen for when the login-carousel has changed/slide used to change screen from login to signup etc\r\n                $thisPage.on(\"postchange\", \"#login-carousel\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.changeScreenCarouselPostChange);\r\n\r\n                // listen for when the login-carousel has changed/slide used to hide the tooltips for the previous displayed screen\r\n                $thisPage.on(\"postchange\", \"#login-carousel\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.hideTooltipsCarouselPostChange);\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator =\r\n                    $('#login-page #login-form').parsley();\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator =\r\n                    $('#login-page #signup-form').parsley();\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#login-page #login-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#login-page #login-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidated);\r\n\r\n                // listen for signup form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#login-page #signup-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for sign up form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#login-page #signup-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidated);\r\n\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#login-page .login-page-form-container',).on(\"scroll\", function(){\r\n\r\n                    // place function execution in the event queue to be executed ASAP\r\n                    window.setTimeout(function(){\r\n\r\n                            switch ($('#login-page #login-carousel').get(0).getActiveIndex()) { // get the active carousel item\r\n                                case 0: // first carousel item is active, so adjust the input elements on the login form\r\n                                    $(\"#login-page #login-form ons-input\").each(function(index, element){\r\n                                        document.getElementById('login-form').ej2_instances[index].refresh(element);\r\n                                    });\r\n                                    break;\r\n\r\n                                case 1: // second carousel item is active, so adjust the input elements on the login form\r\n                                    $(\"#login-page #signup-form ons-input\").each(function(index, element){\r\n                                        document.getElementById('signup-form').ej2_instances[index].refresh(element);\r\n                                    });\r\n                                    break;\r\n\r\n                                case 2:\r\n\r\n                                    break;\r\n                            }\r\n                        }, 0);\r\n                });\r\n\r\n                try{\r\n                    // create the tooltip objects for the signin form\r\n                    $('#login-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopCenter',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#login-page #login-form').get(0));\r\n                    });\r\n\r\n                    // create the tooltip objects for the signup form\r\n                    $('#signup-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopCenter',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#login-page #signup-form').get(0));\r\n                    });\r\n\r\n                    // create the button for showing password visibility on the signup page\r\n                    new ej.buttons.Button({\r\n                        isToggle: true,\r\n                        cssClass: 'e-flat e-small e-round',\r\n                        iconCss: \"zmdi zmdi-eye\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo($('#signup-password-view-button', $thisPage).get(0));\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device keyboard is shown\r\n            window.addEventListener('keyboardDidShow',\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.keyboardShownAdjustView);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device keyboard is shown\r\n            window.removeEventListener('keyboardDidShow',\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.keyboardShownAdjustView);\r\n\r\n            // hide the tooltips on the login form\r\n            $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // hide the tooltips on the signup form\r\n            $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.close();\r\n            });\r\n\r\n            // reset all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.reset();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.reset();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            // destroy the tooltips on the login form\r\n            $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // destroy the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy the tooltips on the signup form\r\n            $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                // hide the tooltip\r\n                tooltipArrayElem.destroy();\r\n            });\r\n\r\n            // destroy all form validator objects\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.destroy();\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.destroy();\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Sign In / Sign Up segment buttons are clicked\r\n         *\r\n         * @param itemIndex {Integer} zero-based index representing the carousel item to\r\n         * display ewhen the button is clicked\r\n         */\r\n        segmentButtonClicked(itemIndex){\r\n            // move to the slide item specify by the provided parameter\r\n            $('#login-page #login-carousel').get(0).setActiveIndex(itemIndex);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Password Visibility button is clicked\r\n         *\r\n         * @param buttonElement {HTMLElement} button element being clicked\r\n         *\r\n         * @param inputId {String} the id for the input whose content visibility is being changed\r\n         */\r\n        passwordVisibilityButtonClicked(buttonElement, inputId){\r\n\r\n            // check the state of the button is it 'active' or not\r\n            if(! $(buttonElement).hasClass('e-active')){ // button is not active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"text\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye-off';\r\n                ej2Button.dataBind();\r\n            }\r\n            else{ // button is active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"password\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye';\r\n                ej2Button.dataBind();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides for\r\n         * displaying the various screens i.e. login or signup etc\r\n         *\r\n         * @param event\r\n         */\r\n        changeScreenCarouselPostChange(event){\r\n\r\n            // use the switch case to determine what carousel is being shown\r\n            switch(event.originalEvent.activeIndex){ // get the index of the active carousel item\r\n                case 0:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(2) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(1) input\").prop(\"checked\", false);\r\n                    $(\"#login-page ons-carousel-item.third .login-segment button input\").prop(\"checked\", false);\r\n                    // scroll to the top of the active carousel item\r\n                    $('#login-page ons-carousel-item.first .login-page-form-container').scrollTop(0);\r\n\r\n                    break;\r\n\r\n                case 1:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(1) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(2) input\").prop(\"checked\", false);\r\n                    $(\"#login-page ons-carousel-item.third .login-segment button input\").prop(\"checked\", false);\r\n                    // scroll to the top of the active carousel item\r\n                    $('#login-page ons-carousel-item.second .login-page-form-container').scrollTop(0);\r\n                    break;\r\n\r\n                case 2:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(1) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.first .login-segment button:nth-of-type(2) input\").prop(\"checked\", false);\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(2) input\").prop(\"checked\", true);\r\n                    $(\"#login-page ons-carousel-item.second .login-segment button:nth-of-type(1) input\").prop(\"checked\", false);\r\n                    $('#login-page ons-carousel-item.third .login-page-form-container').scrollTop(0);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides for\r\n         * hiding the tooltips on the previously displayed slide\r\n         *\r\n         * @param event\r\n         */\r\n        hideTooltipsCarouselPostChange(event){\r\n\r\n            // use the switch case to determine what carousel item was PREVIOUSLY shown\r\n            switch(event.originalEvent.lastActiveIndex){ // get the index of the LAST active carousel item\r\n                case 0:\r\n\r\n                    // hide the tooltips on the login form\r\n                    $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                        // hide the tooltip\r\n                        tooltipArrayElem.close();\r\n                    });\r\n                    break;\r\n\r\n                case 1:\r\n\r\n                    // hide the tooltips on the login form\r\n                    $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                        // hide the tooltip\r\n                        tooltipArrayElem.close();\r\n                    });\r\n                    break;\r\n\r\n                case 2:\r\n\r\n                    break;\r\n            }\r\n        },\r\n        /**\r\n         * method is triggered when the keyboard is shown.\r\n         * It is used to adjust the display height\r\n         *\r\n         * @param event\r\n         */\r\n        keyboardShownAdjustView(event){\r\n            // get the height of the keyboard and add 6000px to it\r\n            let adjustedKeyboardHeight = Math.ceil(event.keyboardHeight) + 6000;\r\n\r\n            switch ($('#login-page #login-carousel').get(0).getActiveIndex()) { // get the active carousel item\r\n                case 0:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.first .login-page-form-container\").\r\n                    css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.first .login-page-form-container\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top - 30));\r\n                    break;\r\n\r\n                case 1:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.second .login-page-form-container\").\r\n                    css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.second .login-page-form-container\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top - 30));\r\n                    break;\r\n\r\n                case 2:\r\n\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Sign In\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signinButtonClicked() {\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Sign Up\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signupButtonClicked() {\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.signupFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the login form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loginFormValidated(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the sign up form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signupFormValidated(){\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Products page\r\n     */\r\n    productsPageViewModel: {\r\n\r\n        /**\r\n         * property holds the current \"page\" of the categories being accessed\r\n         */\r\n        currentPage: 0,\r\n\r\n        /**\r\n         * property holds the size i.e. number of items that can be contained in currentPage being accessed\r\n         */\r\n        pageSize: 20,\r\n\r\n        /**\r\n         * property holds the height of the \"content view\" for the page\r\n         */\r\n        viewContentHeight: 0,\r\n\r\n        /**\r\n         * property holds the index position of the last active\r\n         * navigation tab before user landed on this page\r\n         */\r\n        lastActiveNavTab: 0,\r\n\r\n        /**\r\n         * property holds the current query parameter used to display the products on screen\r\n         */\r\n        currentQueryParam: {},\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle page-infinite-scroll\r\n                event.target.onInfiniteScroll =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.pageInfiniteScroll;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#products-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#products-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#products-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#products-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#products-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                // get the height of the view content container\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.viewContentHeight =\r\n                    Math.floor($('#products-page .page__content').height());\r\n\r\n\r\n                // listen for the scroll event on the page\r\n                $('#products-page .page__content').on(\"scroll\", function(){\r\n                    // handle the logic in a different event queue slot\r\n                    window.setTimeout(function(){\r\n                        // get the scrollTop position of the view content\r\n                        var scrollTop = Math.floor($('#products-page .page__content').scrollTop());\r\n\r\n                        // get the percentage of scroll that has taken place from the top position\r\n                        var percentageScroll = (scrollTop /  utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            productsPageViewModel.viewContentHeight) * 100;\r\n                        if(percentageScroll >= 50){ // if the scroll position is >= halfway\r\n                            $('#products-page #products-page-scroll-top-fab').css(\r\n                                {\"transform\": \"scale(1)\",\r\n                                    \"display\": \"inline-block\"});\r\n                        }\r\n                        else{ // if the scroll position is < halfway\r\n                            $('#products-page #products-page-scroll-top-fab').css({\"transform\": \"scale(0)\"});\r\n                        }\r\n                    }, 0);\r\n                });\r\n\r\n                // listen for when the navigation tab has changed and update the lastActiveNavTab\r\n                $('#app-main-tabbar').on(\"prechange\", function(event){\r\n                    if(event.originalEvent.index === 4){ // if the tab index is this page, don't update the lastActiveNavTab\r\n                        return; // exit the method\r\n                    }\r\n\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productsPageViewModel.lastActiveNavTab = event.originalEvent.index;\r\n\r\n                });\r\n\r\n                // LISTEN FOR WHEN A PRODUCT CARD IS CLICKED\r\n                $thisPage.on(\"click\", \".e-card\", function(event){\r\n                    // call the method to load the product details page based on the product item clicked\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                    productItemClicked(window.parseInt($(event.currentTarget).attr('data-product')),\r\n                        window.parseInt($(event.currentTarget).attr('data-page')));\r\n                });\r\n\r\n                try{\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(event){\r\n            $('#app-main-page ons-toolbar div.title-bar').html(\"Products\"); // change the title of the screen\r\n            // update cart count\r\n            $('#app-main-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n            // check if the page content should be reset\r\n            if($('#app-main-navigator').get(0)._resetPageDisplay !== false){ // page content can be refreshed\r\n                // flag that page infinite scroll should NOT be allowed\r\n                event.target._allowInfinitePageScroll = false;\r\n                // show the preloader\r\n                $('#products-page .page-preloader').css(\"display\", \"block\");\r\n                // empty the content of the page\r\n                $('#products-page #products-contents-container').html('');\r\n                // hide the page scroll fab\r\n                $('#products-page #products-page-scroll-top-fab').css({\"display\": \"none\"});\r\n            }\r\n\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(event){\r\n            // flag that page infinite scroll should NOT be allowed\r\n            event.target._allowInfinitePageScroll = false;\r\n            delete $('#app-main-navigator').get(0)._resetPageDisplay;\r\n\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.deviceOnlineListener, false);\r\n\r\n            // remove all the infinite load indicator from the bottom of the page (if any exist)\r\n            $('#products-page .page__content .infinite-load-container').remove();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // go to the last active page (tab)\r\n            $('#app-main-tabbar').get(0).\r\n            setActiveTab(utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.lastActiveNavTab);\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.hide('All'); // hide all previously displayed ej2 toast\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to see updated products\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#products-page #products-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // start loading the page content\r\n                let productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productsPageViewModel.loadProducts(utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.productsPageViewModel.currentQueryParam, 1);\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.displayPageContent(productArray[0]);\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // hide the page preloader\r\n                $('#products-page .page-preloader').css(\"display\", \"none\");\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#products-page #products-page-pull-hook').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pageInfiniteScroll(doneCallBack = function(){}){\r\n            // check of page infinite scroll is allowed or not\r\n            if($('#products-page').get(0)._allowInfinitePageScroll === false){ // page infinite scroll is NOT allowed\r\n                doneCallBack();\r\n                return;\r\n            }\r\n\r\n            // append an infinite load indicator to the bottom of the page\r\n            $('#products-page .page__content').\r\n            append(`<div class=\"infinite-load-container\" style=\"text-align: center\">\r\n                        <ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>\r\n                    </div>`);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            let productArray = []; // holds the array of products retrieved for display\r\n\r\n            try{\r\n                // start loading the NEXT page content\r\n                productArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productsPageViewModel.loadProducts(utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.productsPageViewModel.currentQueryParam,\r\n                    utopiasoftware[utopiasoftware_app_namespace].\r\n                        controller.productsPageViewModel.currentPage + 1);\r\n                // append the new content to the previous contents\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.\r\n                displayPageContent(productArray[0], true, false);\r\n\r\n            }\r\n            catch(err){ // an error occurred\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // check if any new products were retrieved\r\n                if(productArray && productArray[0].length > 0){ // products were retrieve\r\n                    // remove the infinite load indicator from the bottom of the page\r\n                    $('#products-page .page__content .infinite-load-container').remove();\r\n                }\r\n                else{ // no products were retrieved\r\n\r\n                    $('#products-page .page__content .infinite-load-container').css({\"visibility\": \"hidden\"});\r\n                }\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load products to the page\r\n         *\r\n         * @param pageToAccess {Integer} the page within the paginated categories to retrieve\r\n         *\r\n         * @param pageSize {Integer} the size of the page i.e. the number of category items to retrieve\r\n         *\r\n         * @param queryParam {Object} holds the objects that contains the query\r\n         * params for the type of products to retrieve\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProducts(queryParam, pageToAccess = queryParam.page || utopiasoftware[utopiasoftware_app_namespace].\r\n                                 controller.productsPageViewModel.currentPage + 1,\r\n                             pageSize = queryParam.per_page || utopiasoftware[utopiasoftware_app_namespace].\r\n                                 controller.productsPageViewModel.pageSize){\r\n            queryParam.page = pageToAccess;\r\n            queryParam.per_page = pageSize;\r\n\r\n            var productPromisesArray = []; // holds the array for the promises used to load the products\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type !== Connection.NONE){ // there is internet connection\r\n                // load the requested products list from the server\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/wp-json/wc/v3/products\",\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: queryParam\r\n                        }\r\n                    )).then(function(productsArray){\r\n                        // check if there is any data to cache in the app database\r\n                        if(productsArray.length > 0){ // there is data to cache\r\n                            // generate an id for the data being cached\r\n                            let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"products\";\r\n                            // save the retrieved data to app database as cached data\r\n                            utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                {_id: cachedDataId, docType: \"PRODUCTS\", products: productsArray},\r\n                                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                            // update the current page being viewed\r\n                            utopiasoftware[utopiasoftware_app_namespace].\r\n                                controller.productsPageViewModel.currentPage = queryParam.page;\r\n                            // update the current query parameter for the page\r\n                            utopiasoftware[utopiasoftware_app_namespace].\r\n                                controller.productsPageViewModel.currentQueryParam = queryParam;\r\n                        }\r\n                        resolve(productsArray); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            } // end of loading products with Internet Connection\r\n            else{ // there is no internet connection\r\n                // display toast to show that there is no internet connection\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.hide('All');\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.content = \"No Internet connection. Pull down to refresh and see updated products\";\r\n                toast.dataBind();\r\n                toast.show();\r\n                // load the requested products from cached data\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    // generate the id for the cached data being retrieved\r\n                    let cachedDataId = (\"\" + pageToAccess).padStart(7, \"0\") + \"products\";\r\n                    Promise.resolve(utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(cachedDataId, utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).\r\n                    then(function(cachedProductsData){\r\n                        resolve(cachedProductsData.products); // resolve the parent promise with the cached products data\r\n                    }).\r\n                    catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n            }\r\n\r\n            return Promise.all(productPromisesArray); // return a promise which resolves when all promises in the array resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the retrieved products on the app screen\r\n         *\r\n         * @param productsArray\r\n         *\r\n         * @param appendContent {Boolean} if the value is true,\r\n         * add each content to the end of other items on the screen.\r\n         * Else, prepend the content to the top of other items\r\n         *\r\n         * @param overwriteContent {Boolean} should the old content be replaced or added to\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayPageContent(productsArray, appendContent = true, overwriteContent = true){\r\n            for(let index = 0; index < 4; index++){ // REMOVE THIS LATER JUST FOR TEST TODO\r\n                productsArray.push(...productsArray);\r\n            }\r\n            var displayCompletedPromise = new Promise(function(resolve, reject){\r\n\r\n                let productsContent = \"\"; // holds the contents for the products\r\n\r\n                // check if the productsArray is empty or not\r\n                if(productsArray.length <= 0){ // there are no new content to display\r\n                    resolve(productsArray.length); // resolve promise with the length of the products array\r\n                }\r\n                else{ // there are some products to display\r\n\r\n                    // loop through the array content and display it\r\n                    for(let index = 0; index < productsArray.length; index++){\r\n                        if(!productsArray[index].regular_price || productsArray[index].regular_price == \"\"){ // regular price was NOT set, so set it\r\n                            productsArray[index].regular_price = \"0.00\";\r\n                        }\r\n\r\n                        productsContent += `<div class=\"col-xs-4\" `;\r\n                        if((index + 1) % 3 !== 0){ // this is NOT the last column in the row\r\n                            productsContent += `style=\"border-right: 1px lightgray solid; border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        else{ // this is the last column in the row\r\n                            productsContent += `style=\"border-bottom: 1px lightgray solid\">`;\r\n                        }\r\n                        productsContent += `\r\n                        <ons-ripple background=\"rgba(63, 81, 181, 0.3)\"></ons-ripple>\r\n                        <div class=\"e-card\" \r\n                        data-product=\"${index}\" \r\n                        data-page=\"${utopiasoftware[utopiasoftware_app_namespace].controller.productsPageViewModel.currentPage}\">\r\n                            <div class=\"e-card-image\" style=\"min-height: 100px; \r\n                            background-image: url('${productsArray[index].images[0].src}');\">\r\n                            ${productsArray[index].on_sale === true ? `\r\n                            <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productsArray[index].price) -\r\n                            kendo.parseFloat(productsArray[index].regular_price)) /\r\n                            kendo.parseFloat(productsArray[index].regular_price === \"0.00\" ?\r\n                                productsArray[index].price : productsArray[index].regular_price))\r\n                            * 100)}% OFF\r\n                             </span>` : \"\"}\r\n                            </div>\r\n                            <div class=\"e-card-header\">\r\n                                <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                                    <div class=\"e-card-sub-title\" style=\"color: #000000; font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                        ${productsArray[index].name}\r\n                                    </div>\r\n                        <div style=\"color: gold; font-size: 0.6em !important; white-space: nowrap !important; \r\n                        text-overflow: ellipsis; overflow: hidden;\">\r\n                        ${Math.floor(kendo.parseFloat(productsArray[index].average_rating)) > 0 ? \r\n                            `<ons-icon icon=\"md-star\" fixed-width></ons-icon>`.\r\n                        repeat(Math.floor(kendo.parseFloat(productsArray[index].average_rating))):\r\n                            `<ons-icon icon=\"md-star-outline\" style=\"color: lightgray\" fixed-width></ons-icon>`.repeat(5)}\r\n                            <span style=\"display: inline-block; color: gray;\">\r\n                            ${Math.floor(kendo.parseFloat(productsArray[index].average_rating)) > 0 ? \r\n                        `(${productsArray[index].rating_count})` : \"\"}\r\n                           </span>\r\n                        </div>\r\n                        <div class=\"e-card-sub-title\" style=\"text-align: left;\">&#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].price), \"n2\")}</div>\r\n                        <div class=\"e-card-sub-title\" style=\"text-align: left; text-decoration: line-through; \r\n                        ${productsArray[index].on_sale === true ? \"visibility: visible\": \"visibility: hidden\"}\">&#x20a6;${kendo.toString(kendo.parseFloat(productsArray[index].regular_price), \"n2\")}</div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>`;\r\n\r\n                    }\r\n\r\n                    // check if the contents are to be overwritten\r\n                    if(overwriteContent === true){ // content wants to be overwritten\r\n                        $('#products-page #products-contents-container').html(productsContent);\r\n                    }\r\n                    else{ // content is NOT to be overwritten\r\n                        if(appendContent === true){ // append content\r\n                            $('#products-page #products-contents-container').append(productsContent);\r\n                        }\r\n                        else{ // prepend content\r\n                            $('#products-page #products-contents-container').prepend(productsContent);\r\n                        }\r\n                    }\r\n\r\n                    // allow infinite page scroll to be triggered\r\n                    $('#products-page').get(0)._allowInfinitePageScroll = true;\r\n                    resolve(productsArray.length); // resolve the promise with length of the productsArray\r\n                }\r\n\r\n            });\r\n\r\n            return displayCompletedPromise; // return the promise object ot indicate if the display has been completed or not\r\n\r\n        },\r\n\r\n        /**\r\n         * method scrolls the page to the top\r\n         * @returns {Promise<void>}\r\n         */\r\n        async scrollPageToTop(){\r\n            window.setTimeout(function(){\r\n                $('#products-page .page__content').animate({ scrollTop: 0 }, 400);\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks any product item from the products collection\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the 'appropriate' cached array of product items\r\n         *\r\n         * @param productPage {Integer} specifies which query page/collection from the cached products\r\n         * the clicked product item belongs to.\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async productItemClicked(productIndex, productPage){\r\n            // handle the function task in a different event queue\r\n            window.setTimeout(async function(){\r\n\r\n                try{\r\n                    // get the product items collection\r\n                    let productItemsArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData((\"\" + productPage).padStart(7, \"0\") + \"products\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n\r\n                    // display the products details page using the selected product\r\n                    $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\",\r\n                        {animation: \"lift\", data: {product : productItemsArray[productIndex]}});\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Product Details page\r\n     */\r\n    productDetailsPageViewModel: {\r\n\r\n        /**\r\n         * holds the object which contains the current product and its details\r\n         */\r\n        currentProductDetails: null,\r\n\r\n        /**\r\n         * holds the index position (within the productVaritionsArray) of the\r\n         * current product variation selected by the user\r\n         */\r\n        currentProductVariationIndex: -1,\r\n\r\n        /**\r\n         * holds the product variations array\r\n         */\r\n        productVariationsArray: [],\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#product-details-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#product-details-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#product-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#product-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#product-details-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n                    // create the \"Pick Quantity\" button\r\n                    new ej.inputs.NumericTextBox({\r\n                        cssClass: 'product-details-quantity-class',\r\n                        currency: null,\r\n                        decimals: 0,\r\n                        floatLabelType: 'Auto',\r\n                        format: 'n',\r\n                        showSpinButton: false,\r\n                        min: 1,\r\n                        max: 10,\r\n                        placeholder: 'Pick Quantity',\r\n                        step: 1,\r\n                        strictMode: true,\r\n                        // sets value to the NumericTextBox\r\n                        value: 1\r\n                    }).appendTo('#product-details-quantity');\r\n\r\n                    // create the \"Add To Cart\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#product-details-add-to-cart');\r\n\r\n                    // create the \"Customise\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-brush utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#product-details-customise-product');\r\n\r\n                    // create the \"Review\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-small',\r\n                        iconCss: \"zmdi zmdi-star-outline\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo('#product-details-review');\r\n\r\n                    // create the \"Share\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-small',\r\n                        iconCss: \"zmdi zmdi-share\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo('#product-details-share');\r\n\r\n                    // load product variations asynchronously without waiting for the response\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.loadProductVariations();\r\n                    // load product details\r\n                    let productDetailsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.loadProduct();\r\n                    // display the loaded product details\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.displayProductDetails(productDetailsArray[0]);\r\n                    // enable the \"Add To Cart\" button\r\n                    $('#product-details-page #product-details-add-to-cart').removeAttr(\"disabled\");\r\n\r\n                }\r\n                catch(err){\r\n\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred.${navigator.connection.type === Connection.NONE ? \" Connect to the Internet.\" : \"\"} Pull down to refresh and try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally {\r\n                    // hide the preloader\r\n                    $('#product-details-page .page-preloader').css(\"display\", \"none\");\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update cart count\r\n            $('#product-details-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustResize');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.currentProductDetails = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.currentProductVariationIndex = -1;\r\n            // reset the product variations array\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.productVariationsArray = [];\r\n\r\n            // destroy the ej2 components on the page\r\n            $('#product-details-quantity').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-review').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-share').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-add-to-cart').get(0).ej2_instances[0].destroy();\r\n            $('#product-details-customise-product').get(0).ej2_instances[0].destroy();\r\n\r\n            // destroy any product variation dropdown list\r\n            $('#product-details-page .product-details-variation-option').each(function(index, element){\r\n                element.ej2_instances[0].destroy(); // destroy the dropdown list component\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // get the pages stack from the app main navigator\r\n            var pagesStackArray = $('#app-main-navigator').get(0).pages;\r\n\r\n            // check that there is more than 1 page in the stack\r\n            if(pagesStackArray.length > 1){ // there is more than 1 page in the page stack\r\n                // get the previous Page in stack before this one\r\n                let previousPage = $(pagesStackArray[pagesStackArray.length - 2]).get(0);\r\n\r\n                // check which page has is being displayed AFTER a page was popped\r\n                switch(previousPage.id){\r\n                    case \"app-main-page\": // the page that is being displayed is the \"App-Main\" page\r\n                        // check which page on the app-main tab is visible\r\n                        if($('#app-main-tabbar').get(0).getActiveTabIndex() === 4){ // the \"Products\" page is visible\r\n                            // get back to the previous page on the app-main navigator stack\r\n                            // and set the 'resetPageDisplay' to false\r\n                            $('#app-main-navigator').get(0)._resetPageDisplay = false;\r\n                            // allow infinite page scroll to be triggered on the \"Products\" page\r\n                            $('#products-page').get(0)._allowInfinitePageScroll = true;\r\n                            $('#app-main-navigator').get(0).popPage();\r\n                        }\r\n                        else{\r\n                            // get back to the previous page on the app-main navigator stack\r\n                            $('#app-main-navigator').get(0).popPage();\r\n                        }\r\n                        break;\r\n                    default:\r\n                        // get back to the previous page on the app-main navigator stack\r\n                        $('#app-main-navigator').get(0).popPage();\r\n                        break\r\n                }\r\n            }\r\n            else{ // there is only 1 page in the stack\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Share\" button is clicked\r\n         * @returns {Promise<void>}\r\n         */\r\n        async shareButtonClicked(){\r\n            var shareOptions = {}; // holds the options for sharing\r\n            shareOptions.message = \"check out this #ShopOakExclusive product\";\r\n            shareOptions.chooserTitle = \"share product with...\";\r\n\r\n            // handle the task in a separate event block\r\n            window.setTimeout(function(){\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                    currentProductVariationIndex !== -1){ // a product variation was selected\r\n                    // get the index of the currently selected variation\r\n                    let productVariationIndex = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.currentProductVariationIndex;\r\n                    // get the currently selected product variation using the selected index\r\n                    let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        productVariationsArray[productVariationIndex];\r\n                    // update the url for the product\r\n                    shareOptions.url = productVariation.permalink;\r\n                    // update the file/image of the product to be share\r\n                    shareOptions.files = [productVariation.image && productVariation.image !== \"\"? productVariation.image.src :\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                            currentProductDetails.images[0].src];\r\n                }\r\n                else{ // no product variation was selected, so use the default product details\r\n                    shareOptions.url = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        currentProductDetails.permalink;\r\n                    // update the file/image of the product to be share\r\n                    shareOptions.files = [utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        currentProductDetails.images[0].src];\r\n                }\r\n\r\n                // also copy the text to clipboard\r\n                cordova.plugins.clipboard.copy(`${shareOptions.message} | ${shareOptions.url}`,\r\n                    function(){\r\n                        // inform the user that message has been copied to clipboard\r\n                        window.plugins.toast.showWithOptions({\r\n                            message: \"shared message copied to clipboard\",\r\n                            duration: 3000,\r\n                            position: \"center\",\r\n                            styling: {\r\n                                cornerRadius: 0,\r\n                                opacity: 1,\r\n                                backgroundColor: '#3F51B5',\r\n                                textColor: '#FFFFFF',\r\n                                textSize: 14\r\n                            }\r\n                        });\r\n                    }, function(){});\r\n                // open the device share dialog\r\n                window.plugins.socialsharing.shareWithOptions(shareOptions, function(){}, function(){});\r\n            }, 0);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#product-details-page #product-details-page-pull-hook').attr(\"disabled\", true);\r\n\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            // disable the \"Add To Cart\" button\r\n            $('#product-details-page #product-details-add-to-cart').attr(\"disabled\", true);\r\n            // remove the spinner from the 'Add To Cart'\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].stop();\r\n\r\n            try{\r\n                // load product variations asynchronously without waiting for the response\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.loadProductVariations();\r\n                // load product details\r\n                let productDetailsArray = await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.loadProduct();\r\n                // display the loaded product details\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                productDetailsPageViewModel.displayProductDetails(productDetailsArray[0]);\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#product-details-page #product-details-page-pull-hook').removeAttr(\"disabled\");\r\n                // enable the \"Add To Cart\" button\r\n                $('#product-details-page #product-details-add-to-cart').removeAttr(\"disabled\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load a particular product detail.\r\n         *\r\n         * The product to be loaded can be directly passed to the page for loading OR\r\n         * the id of the product can be provided to the page, so that the product is\r\n         * retrieved from the remote server\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProduct(){\r\n            var productPromisesArray = []; // holds the array for the promises used to load the product\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3000;\r\n                toast.content = `Connect to the Internet to see updated product details`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            // check if all the product details were provided to the page\r\n            if($('#app-main-navigator').get(0).topPage.data.product){ // all product details were provided\r\n                let aProduct = $('#app-main-navigator').get(0).topPage.data.product; // get the product details\r\n\r\n                if(!aProduct.regular_price || aProduct.regular_price == \"\"){ // regular price was NOT set, so set it\r\n                    aProduct.regular_price = \"0.00\";\r\n                }\r\n\r\n                // set the current product to that which was provided to the page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                    currentProductDetails = aProduct;\r\n\r\n                productPromisesArray.push(Promise.resolve(aProduct)); // resolve the promise with the product details\r\n            }\r\n            else{ // at least the product id was provided\r\n                // load the requested products list from the server\r\n                productPromisesArray.push(new Promise(function(resolve, reject){\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/products/${jQuery('#app-main-navigator').get(0).topPage.data.productId}`,\r\n                            type: \"get\",\r\n                            //contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                    utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true\r\n                        }\r\n                    )).then(function(product){\r\n                        if(!product.regular_price || product.regular_price == \"\"){ // regular price was NOT set, so set it\r\n                            product.regular_price = \"0.00\";\r\n                        }\r\n                        // set the current product to that which was retrieved from the server\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                            currentProductDetails = product;\r\n                        resolve(product); // resolve the parent promise with the data gotten from the server\r\n\r\n                    }).catch(function(err){ // an error occurred\r\n\r\n                        reject(err); // reject the parent promise with the error\r\n                    });\r\n                }));\r\n\r\n            }\r\n\r\n            return Promise.all(productPromisesArray); // return a Promise which resolves when all promises resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to load a particular product variations.\r\n         *\r\n         * The product variations to be loaded is gotten from the product directly passed to the page OR\r\n         * the prduct id passed to the page\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProductVariations(){\r\n            var productPromisesArray = []; // holds the array for the promises used to load the product\r\n            var productId = null; // holds the product id\r\n\r\n            // check if all the product details were provided to the page\r\n            if($('#app-main-navigator').get(0).topPage.data.product){ // all product details were provided\r\n                // save the product id\r\n                productId = $('#app-main-navigator').get(0).topPage.data.product.id;\r\n\r\n            }\r\n            else{ // at least the product id was provided\r\n                // save the product id\r\n                productId = jQuery('#app-main-navigator').get(0).topPage.data.productId;\r\n            }\r\n\r\n            // load the requested products variations from the server\r\n            productPromisesArray.push(new Promise(function(resolve, reject){\r\n                Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + `/wp-json/wc/v3/products/${productId}/variations`,\r\n                        type: \"get\",\r\n                        //contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic \" +\r\n                                utopiasoftware[utopiasoftware_app_namespace].accessor);\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: {page: 1, per_page: 99, status: 'publish'}\r\n                    }\r\n                )).then(function(productVariations){\r\n                    // map the retrieved variations and save the unique value for the variation.\r\n                    // The unique value is used to uniquely identify the variation\r\n                    productVariations = productVariations.map(function(currentElement, index){\r\n                        // join all options from the variation attributes to create a unique value\r\n                        currentElement._variationValue = currentElement.attributes.map(function(attribute){\r\n                            return attribute.option;\r\n                        }).join(\"\");\r\n\r\n                        return currentElement;\r\n                    });\r\n\r\n                    // save the retrieved production variations\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.productVariationsArray = productVariations;\r\n\r\n                    resolve(productVariations); // resolve the parent promise with the data gotten from the server\r\n\r\n                }).catch(function(err){ // an error occurred\r\n\r\n                    reject(err); // reject the parent promise with the error\r\n                });\r\n            }));\r\n\r\n            return Promise.all(productPromisesArray); // return a Promise which resolves when all promises resolve\r\n        },\r\n\r\n        /**\r\n         * method is used to display the product details on the page\r\n         *\r\n         * @param productDetails {Object} the product object to be displayed\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async displayProductDetails(productDetails){\r\n            // update the product details image\r\n            $('#product-details-page .e-card-image').css(\"background-image\", `url(\"${productDetails.images[0].src}\")`);\r\n\r\n            // check if the product is on-sale\r\n            if(productDetails.on_sale === true){ // product is on-sale\r\n                $('#product-details-page .e-card-image').\r\n                html(`\r\n                <span class=\"e-badge e-badge-danger\" style=\"float: right; clear: both; \r\n                                                    background-color: transparent; color: #d64113;\r\n                                                    border: 1px #d64113 solid; font-size: 0.6em;\">\r\n                                                    ${Math.ceil((Math.abs(kendo.parseFloat(productDetails.price) -\r\n                    kendo.parseFloat(productDetails.regular_price)) /\r\n                    kendo.parseFloat(productDetails.regular_price === \"0.00\" ?\r\n                        productDetails.price : productDetails.regular_price))\r\n                    * 100)}% OFF\r\n                 </span>`);\r\n            }\r\n\r\n            // update the product title/name\r\n            $('#product-details-page .e-card-title').html(`${productDetails.name}`);\r\n            // update product price\r\n            $('#product-details-page .product-details-price').\r\n            html(`&#x20a6;${kendo.toString(kendo.parseFloat(productDetails.price), \"n2\")}`);\r\n\r\n            // check if product is on-sale\r\n            if(productDetails.on_sale === true){ // product is on-sale\r\n                // update the regular price\r\n                $('#product-details-page .product-details-regular-price').\r\n                html(`&#x20a6;${kendo.toString(kendo.parseFloat(productDetails.regular_price), \"n2\")}`);\r\n                // make the regular price visible\r\n                $('#product-details-page .product-details-regular-price').css(\"visibility\", \"visible\");\r\n                // add 'sales' class to the quantity component\r\n                $('#product-details-quantity').get(0).ej2_instances[0].cssClass = \"product-details-quantity-class sales\";\r\n                $('#product-details-quantity').get(0).ej2_instances[0].dataBind();\r\n            }\r\n            else{ // product is NOT on-sale\r\n                // make the regular price invisible\r\n                $('#product-details-page .product-details-regular-price').css(\"visibility\", \"collapse\");\r\n                // remove 'sales' class from the quantity component\r\n                $('#product-details-quantity').get(0).ej2_instances[0].cssClass = \"product-details-quantity-class\";\r\n                $('#product-details-quantity').get(0).ej2_instances[0].dataBind();\r\n            }\r\n\r\n            // reset the product details quantity numeric input field\r\n            $('#product-details-quantity').get(0).ej2_instances[0].value = 1;\r\n            $('#product-details-quantity').get(0).ej2_instances[0].dataBind();\r\n\r\n            // update the product details description\r\n            $('#product-details-page .product-details-description').html(`${productDetails.short_description}`);\r\n\r\n            // destroy any previous product variation dropdown list that may previously exist before creating the new ones\r\n            $('#product-details-page .product-details-variation-option').each(function(index, element){\r\n                element.ej2_instances[0].destroy(); // destroy the dropdown list component\r\n            });\r\n\r\n            // add/update product details variation\r\n            // expand the variations content\r\n            $('#product-details-page .product-details-variations').removeClass('expandable-content');\r\n            let variationContent = ''; // holds the product details variation content\r\n            for(let index = 0; index < productDetails.attributes.length; index++){\r\n                // create the product details variations\r\n                variationContent += `<div class=\"col-xs-4\" style=\"padding-right: 5px; padding-left: 5px;\">\r\n                    <select name=\"${productDetails.attributes[index].name}\" class=\"product-details-variation-option\">\r\n                        ${productDetails.attributes[index].options.map(function(arrayElem){\r\n                            return `<option value=\"${arrayElem}\">${arrayElem}</option>`;\r\n                }).join(\"\")}\r\n                    </select>\r\n                </div>`;\r\n            }\r\n            // insert the created Select inputs to the page\r\n            $('#product-details-page .product-details-variations').html(variationContent);\r\n\r\n            // create the dropdown list from each of the select input\r\n            $('#product-details-page .product-details-variation-option').each(function(index, element){\r\n                // check if this product details has default attributes set\r\n                if(productDetails.default_attributes.length > 0){ // there are default attributes\r\n                    // set those default attributes for the variations\r\n                    $(`option[value=\"${productDetails.default_attributes[index].option}\"]`, element).attr(\"selected\", true);\r\n                }\r\n                // create the dropdown list from the select input\r\n                new ej.dropdowns.DropDownList(\r\n                    {\r\n                        cssClass: \"product-details-variation-class\",\r\n                        placeholder: productDetails.attributes[index].name,\r\n                        floatLabelType: 'Always',\r\n                        change: async function () { // listen for when dropdown list value changes\r\n                            // return a Promise which resolves when the change is completed\r\n                            return new Promise(function(resolve2, reject2){\r\n\r\n                                // handle the change in a separate event block\r\n                                window.setTimeout(async function(){\r\n                                    let concatenatedVarationValue = \"\"; // holds the concatenated variation values\r\n                                    // get the value from all the variation select-input/dropdown and concatenate them\r\n                                    $('#product-details-page .product-details-variation-option').each(function(index2, element2){\r\n                                        concatenatedVarationValue += element2.ej2_instances[0].value;\r\n                                    });\r\n\r\n                                    // since the concatenated variation value, is also what is used to uniquely identify each varition,\r\n                                    // check if there is any variation with the same unique value has the concatenated variation value.\r\n                                    // Also, assign the index position of the 'found' variation (if anty) to the current variation index property\r\n                                    let variationIndexPosition =\r\n                                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        productDetailsPageViewModel.productVariationsArray.findIndex(function(element3){\r\n                                            return concatenatedVarationValue === element3._variationValue;\r\n                                        });\r\n                                    utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                                        currentProductVariationIndex = variationIndexPosition;\r\n\r\n                                    // check if there is a product variation that matches the user's selection\r\n                                    if(utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                                        currentProductVariationIndex !== -1){ // there is a product variation\r\n                                        // get the product variation\r\n                                        let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                            productDetailsPageViewModel.productVariationsArray[variationIndexPosition];\r\n                                        // update the product details display image and price to that of the selected variation (if any)\r\n                                        if(productVariation.image && productVariation.image !== \"\"){\r\n                                            // update the product details image\r\n                                            $('#product-details-page .e-card-image').css(\"background-image\",\r\n                                                `url(\"${productVariation.image.src}\")`);\r\n                                        }\r\n                                        if(productVariation.price && productVariation.price !== \"\"){\r\n                                            // update product price\r\n                                            $('#product-details-page .product-details-price').\r\n                                            html(`&#x20a6;${kendo.toString(kendo.parseFloat(productVariation.price), \"n2\")}`);\r\n                                        }\r\n                                    }\r\n\r\n                                    // resolve the parent Promise object to signified that change is completed\r\n                                    resolve2();\r\n\r\n                                }, 0);\r\n                            });\r\n                        }\r\n                    }).appendTo(element);\r\n            });\r\n\r\n            // collapse the variations content\r\n            $('#product-details-page .product-details-variations').addClass('expandable-content');\r\n\r\n            // update the rating for the product details\r\n            $('#product-details-page .product-details-rating').\r\n            html(`\r\n            ${Math.floor(kendo.parseFloat(productDetails.average_rating)) > 0 ?\r\n                '<ons-icon icon=\"md-star\" fixed-width></ons-icon>'.\r\n                repeat(Math.floor(kendo.parseFloat(productDetails.average_rating))) :\r\n                '<ons-icon icon=\"md-star-outline\" style=\"color: lightgray\" fixed-width></ons-icon>'.repeat(5)}\r\n                <span style=\"display: inline-block; color: gray;\">\r\n                ${Math.floor(kendo.parseFloat(productDetails.average_rating)) > 0 ? \r\n                `(${productDetails.rating_count})` : \"\"}\r\n                </span>\r\n            `);\r\n\r\n            // update the extra/more details for the product\r\n            $('#product-details-page .product-details-more-description').html(`\r\n            ${productDetails.description}`);\r\n\r\n            // update the dimensions for the product details\r\n            $('#product-details-page .product-details-dimensions').html(`\r\n            <span class=\"list-item__subtitle\" style=\"display: block\">length - ${!productDetails.dimensions.length ||\r\n            productDetails.dimensions.length == \"\" ? \"(Not Available)\" : `${productDetails.dimensions.length}`}</span>\r\n            <span class=\"list-item__subtitle\" style=\"display: block\">width - ${!productDetails.dimensions.width ||\r\n            productDetails.dimensions.width == \"\" ? \"(Not Available)\" : `${productDetails.dimensions.width}`}</span>\r\n            <span class=\"list-item__subtitle\" style=\"display: block\">height - ${!productDetails.dimensions.height ||\r\n            productDetails.dimensions.height == \"\" ? \"(Not Available)\" : `${productDetails.dimensions.height}`}</span>`);\r\n\r\n            // update the weight for the product\r\n            $('#product-details-page .product-details-weight').html(`${!productDetails.weight ||\r\n            productDetails.weight == \"\" ? \"(Not Available)\" : `${productDetails.weight}`}`);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the customise button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async customiseButtonClicked(){\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please connect to the Internet to customise product`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // perform the method task in a separate event block\r\n            window.setTimeout(async function(){\r\n                var productUrl = \"\"; // holds the url for the product being customised\r\n\r\n                // check if the user has selected a product variation or if the default product is being customised\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                    currentProductVariationIndex !== -1){ // a product variation was selected\r\n                    // get the index position of the selected variation\r\n                    let variationIndex = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        currentProductVariationIndex;\r\n                    // get the production variation object\r\n                    let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.\r\n                        productVariationsArray[variationIndex];\r\n                    productUrl = productVariation.permalink; // set the product url\r\n                }\r\n                else{ // no product variation was selected, so use the default product details\r\n                    productUrl = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.currentProductDetails.permalink; // set the product url\r\n                }\r\n\r\n                // load the \"Customise Product\" page to the app-main-navigator\r\n                await $('#app-main-navigator').get(0).pushPage(\"customise-product-page.html\");\r\n                // load the product customisation url\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    customiseProductPageViewModel.loadProductCustomisation(productUrl);\r\n\r\n            }, 0);\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Add To Cart\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async addToCartButtonClicked(){\r\n\r\n            // disable the \"Add To Cart\" button\r\n            $('#product-details-page #product-details-add-to-cart').attr(\"disabled\", true);\r\n            // add the spinner from the 'Add To Cart'\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].cssClass = '';\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].start();\r\n\r\n            // perform the task of including the product into the local cart in a separate event block\r\n            window.setTimeout(async function(){\r\n                let localCart = []; // holds the local cart collection\r\n                let utopiasoftwareCartObject = {cartData: {}}; // holds the object whose properties make up the cart item\r\n\r\n                // get the cached user cart\r\n                try{\r\n                    localCart = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.loadData(\"user-cart\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n                }\r\n                catch(err){}\r\n\r\n                // check if a product variation was selected\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.currentProductVariationIndex !== -1){ // a product variation was selected\r\n                    // get the selected product variation index position and the accompanying variation object\r\n                    let variationIndex = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.currentProductVariationIndex;\r\n                    let productVariation = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        productDetailsPageViewModel.productVariationsArray[variationIndex];\r\n\r\n                    utopiasoftwareCartObject.cartData.variation_id = productVariation.id;\r\n\r\n                    // get the search parameters object from the product variation url\r\n                    let searchParams = new URLSearchParams(productVariation.permalink.split(\"?\")[1]);\r\n                    // get the variation attributes from searchParams object and assign them in cartData object\r\n                    utopiasoftwareCartObject.cartData.variation = {};\r\n                    for(let [key, value] of searchParams){\r\n                        utopiasoftwareCartObject.cartData.variation[key] = value;\r\n                    }\r\n\r\n                    // store the product variation object as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.productVariation = productVariation;\r\n                }\r\n                // set the other properties of the cart data\r\n                utopiasoftwareCartObject.cartData.product_id = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.currentProductDetails.id;\r\n                utopiasoftwareCartObject.cartData.quantity = $('#product-details-quantity').get(0).ej2_instances[0].value;\r\n\r\n                // store the product object as additional data just for the mobile app\r\n                utopiasoftwareCartObject.product = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    productDetailsPageViewModel.currentProductDetails;\r\n                // store a unique local-cart uid to identify the product\r\n                utopiasoftwareCartObject.uid = Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine);\r\n\r\n                try{\r\n                    // add the created 'utopiasoftwareCartObject' to the user cart collection\r\n                    localCart.push(utopiasoftwareCartObject);\r\n                    // save the updated cached user cart\r\n                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                        {_id: \"user-cart\", docType: \"USER_CART\", cart: localCart},\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                    // inform the user that the product has been added to cart\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'success-ej2-toast';\r\n                    toast.timeOut = 2000;\r\n                    toast.content = `Product has been added to your cart`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n\r\n                    console.log(\"USER CART OBJECT\", utopiasoftwareCartObject);\r\n                }\r\n                catch(err){\r\n                    console.log(\"PRODUCT DETAILS ERROR\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.timeOut = 3500;\r\n                    toast.content = `Error adding product to your cart. Try again`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n                finally{\r\n                    // enable the \"Add To Cart\" button\r\n                    $('#product-details-page #product-details-add-to-cart').removeAttr(\"disabled\");\r\n                    // hide the spinner from the 'Add To Cart'\r\n                    $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                    $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n                    $('#product-details-page #product-details-add-to-cart').get(0).ej2_instances[0].stop();\r\n                }\r\n\r\n            }, 0);\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Customise Product page\r\n     */\r\n    customiseProductPageViewModel: {\r\n\r\n        /**\r\n         * holds the current customisation url that has been loaded\r\n         */\r\n        currentCustomisationUrl : \"\",\r\n\r\n        /**\r\n         * holds the number of times the customisation page has been loaded from the parent server\r\n         */\r\n        customisationPageLoadCount: 0,\r\n\r\n        /**\r\n         * holds the fixed-length queue containing the previous cart object and the new/update cart object.\r\n         * The queue can only contain a max of 2 items. older items are pushed out first.\r\n         * The initial cart object is also gotten the first time this app page is loaded or refreshed\r\n         */\r\n        cartsQueue: [],\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        customiseProductPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#customise-product-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        customiseProductPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for listening to messages from the parent site\r\n                window.addEventListener(\"message\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    customiseProductPageViewModel.receiveMessageListener, false);\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#customise-product-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#customise-product-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#customise-product-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#customise-product-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n\r\n                    // create the \"Cancel\" button\r\n                    new ej.buttons.Button({\r\n                        //iconCss: \"zmdi zmdi-shopping-cart-add utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo('#customise-product-cancel');\r\n\r\n                    // create the \"Add To Cart\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#customise-product-add-to-cart');\r\n\r\n\r\n                }\r\n                catch(err){\r\n                    console.log(\"CUSTOMISATION ERROR\", err);\r\n                }\r\n                finally {\r\n\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustResize');\r\n\r\n            // update cart count\r\n            $('#customise-product-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            // listen for when the device does not have Internet connection\r\n            document.addEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOfflineListener, false);\r\n            // listen for when the device has Internet connection\r\n            document.addEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device does not have Internet connection\r\n            document.removeEventListener(\"offline\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOfflineListener, false);\r\n            // remove listener for when the device has Internet connection\r\n            document.removeEventListener(\"online\",\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.deviceOnlineListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // reset the current customisation url\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.currentCustomisationUrl = \"\";\r\n            // reset the customisation page load count\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.customisationPageLoadCount = 0;\r\n            // reset the cartsQueue\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.cartsQueue = [];\r\n\r\n            // remove listener for listening to messages from the parent site\r\n            window.removeEventListener(\"message\", utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                customiseProductPageViewModel.receiveMessageListener, false);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is offline\r\n         */\r\n        deviceOfflineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n            $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n            // display toast to show that there is no internet connection\r\n            let toast = $('.page-toast').get(0).ej2_instances[0];\r\n            toast.cssClass = 'default-ej2-toast';\r\n            toast.content = \"No Internet connection. Connect to the Internet to customise product\";\r\n            toast.dataBind();\r\n            toast.show();// show ej2 toast\r\n        },\r\n\r\n        /**\r\n         * method is triggered whenever the user's device is online\r\n         */\r\n        deviceOnlineListener(){\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to handle the receipt of messages from the parent website\r\n         *\r\n         * @param receiveEvent {Event} this is the event object of the \"Message\" event\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async receiveMessageListener(receiveEvent){\r\n            // check where the message originated from\r\n            if(receiveEvent.origin !== \"https://shopoakexclusive.com\"){ // message is not from the parent website\r\n                return; // exit\r\n            }\r\n\r\n            // check the data that was sent\r\n            if(receiveEvent.data === \"page ready\"){ // parent site is ready to work together\r\n                // update the customisation page load count by 1\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                    customisationPageLoadCount += 1;\r\n                // remove the page preloader\r\n                $('#customise-product-page .page-preloader').css(\"display\", \"none\");\r\n                return;\r\n            }\r\n            else{ // the page sent cart data\r\n                // access the cart data\r\n                let cartData = JSON.parse(receiveEvent.data);\r\n                if(Array.isArray(cartData)){ // the cart data is an array, therefore it's empty\r\n                    // push an empty object into the cart queue property\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.cartsQueue.\r\n                    push({});\r\n                }\r\n                else{ // cart data is not an array\r\n                    // push the cart data into the cart queue\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.cartsQueue.\r\n                    push(cartData);\r\n                }\r\n\r\n                // check if the cartQueue property is greater than its maximum allowed length of 2\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                    cartsQueue.length > 2){ // cartQueue property is greater than 2 elements\r\n                    // remove the oldest element from the queue\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                        cartsQueue.shift();\r\n                }\r\n\r\n                // save the customised product to local cart cache (do this in a separate event queue)\r\n                window.setTimeout(utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                saveCustomisedProductToCart, 0);\r\n\r\n                // enable the \"Add To Cart\" button\r\n                $('#customise-product-page #customise-product-add-to-cart').removeAttr(\"disabled\");\r\n                // hide the spinner on the 'Add To Cart'\r\n                $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n                $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n                $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].stop();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // show the page preloader\r\n            $('#customise-product-page .page-preloader').css(\"display\", \"block\");\r\n            // disable the \"Add To Cart\" button\r\n            $('#customise-product-page #customise-product-add-to-cart').attr(\"disabled\", true);\r\n            // remove the spinner from the 'Add To Cart'\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].stop();\r\n\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#customise-product-page #customise-product-page-pull-hook').attr(\"disabled\", true);\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            try{\r\n                // reload the current product customisation url into the iframe\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n               customiseProductPageViewModel.loadProductCustomisation();\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                window.setTimeout(function(){ // wait for 2 sec before declaring loading done\r\n                    // enable pull-to-refresh widget till loading is done\r\n                    $('#customise-product-page #customise-product-page-pull-hook').removeAttr(\"disabled\");\r\n                    // signal that loading is done\r\n                    doneCallBack();\r\n                }, 2000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to load a particular product/product variation customisation.\r\n         *\r\n         * @param customisationUrl {String} holds the url for the product to be customised\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loadProductCustomisation(customisationUrl = utopiasoftware[utopiasoftware_app_namespace].\r\n            controller.customiseProductPageViewModel.currentCustomisationUrl){\r\n\r\n            // check if there is Internet connection\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please connect to the Internet to customise product and Pull Down to refresh`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // load the specified url into the customisation iframe\r\n            $('#customise-product-page #customise-product-page-iframe').attr(\"src\", customisationUrl);\r\n\r\n            // update the current customisation url\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                currentCustomisationUrl = customisationUrl;\r\n\r\n            // reset the page load count and cartsQueue properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.\r\n                customisationPageLoadCount = 0;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.customiseProductPageViewModel.cartsQueue = [];\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * method is used to compare the cartQueue property and saves the latest customised product to\r\n         * local cart cache in the app database\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async saveCustomisedProductToCart(){\r\n            // get the previous cart object and the new/updated cart object\r\n            let previousCartObject = utopiasoftware[utopiasoftware_app_namespace].\r\n                controller.customiseProductPageViewModel.cartsQueue[0];\r\n            let updatedCartObject = utopiasoftware[utopiasoftware_app_namespace].\r\n                controller.customiseProductPageViewModel.cartsQueue[1];\r\n            // get the latest customised product by comparing the properties of the updateCartObject with the previousCartObject\r\n            for(let property in updatedCartObject){\r\n                // check if this property in the updateCartObject exist in th epreviousCartObject\r\n                if(! previousCartObject[property]){ // property does not exist in the previousCartObject, so this property belongs to the latest customised product\r\n                    // get the latest customised product\r\n                    let customisedProduct = updatedCartObject[property];\r\n\r\n                    let localCart = []; // holds the local cart collection\r\n                    let utopiasoftwareCartObject = {cartData: {}}; // holds the object whose properties make up the cart item\r\n\r\n                    // get the cached user cart\r\n                    try{\r\n                        localCart = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.loadData(\"user-cart\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n                    }\r\n                    catch(err){}\r\n\r\n                    // set the other properties of the cart data\r\n                    utopiasoftwareCartObject.cartData.product_id = customisedProduct.product_id;\r\n                    utopiasoftwareCartObject.cartData.quantity = customisedProduct.quantity;\r\n                    utopiasoftwareCartObject.cartData.variation_id = customisedProduct.variation_id;\r\n                    utopiasoftwareCartObject.cartData.variation = customisedProduct.variation;\r\n                    utopiasoftwareCartObject.cartData.cart_item_data = {fpd_data: customisedProduct.fpd_data}; // holds the fancy product designer data\r\n\r\n                    // store the cart key used to identify the customised product as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.anon_cart_key = customisedProduct.key;\r\n                    // store the name of the customised product as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.product_name = customisedProduct.product_name;\r\n                    // store the cutomisationUrl of this product as additional data just for the mobile app\r\n                    utopiasoftwareCartObject.customisationUrl = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        customiseProductPageViewModel.currentCustomisationUrl;\r\n                    // store a unique local-cart uid to identify the product just for the mobile app\r\n                    utopiasoftwareCartObject.uid = Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine);\r\n\r\n                    try{\r\n                        // add the created 'utopiasoftwareCartObject' to the user cart collection\r\n                        localCart.push(utopiasoftwareCartObject);\r\n                        // save the updated cached user cart\r\n                        await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                            {_id: \"user-cart\", docType: \"USER_CART\", cart: localCart},\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n\r\n                        // inform the user that the product has been added to cart\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'success-ej2-toast';\r\n                        toast.timeOut = 2000;\r\n                        toast.content = `Customised product has been added to your cart`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n                    }\r\n                    catch(err){\r\n                        console.log(\"CUSTOMISE PRODUCT ERROR\", err);\r\n\r\n                        // hide all previously displayed ej2 toast\r\n                        $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                        $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                        // display toast to show that an error\r\n                        let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                        toast.cssClass = 'error-ej2-toast';\r\n                        toast.timeOut = 3500;\r\n                        toast.content = `Error adding customised product to your cart. Try again`;\r\n                        toast.dataBind();\r\n                        toast.show();\r\n\r\n                    }\r\n\r\n                    break; // break the for-loop since the latest customised product has been found\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the user clicks the \"Add To Cart\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async addToCartButtonClicked(){\r\n\r\n            if(navigator.connection.type === Connection.NONE){ // there is no Internet connection\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'default-ej2-toast';\r\n                toast.timeOut = 3500;\r\n                toast.content = `Please connect to the Internet to add customised product to cart`;\r\n                toast.dataBind();\r\n                toast.show();\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // show the spinner on the 'Add To Cart' button to indicate process is ongoing\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].cssClass = '';\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].dataBind();\r\n            $('#customise-product-page #customise-product-add-to-cart').get(0).ej2_instances[0].start();\r\n\r\n            // call the method to submit the product customisation form located in the iframe window\r\n            $('#customise-product-page #customise-product-page-iframe').get(0).contentWindow.utopiasoftware_addUsage();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the View Cart page\r\n     */\r\n    viewCartPageViewModel: {\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.backButtonClicked;\r\n\r\n                // add method to handle the loading action of the pull-to-refresh widget\r\n                $('#view-cart-page-pull-hook', $thisPage).get(0).onAction =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.pagePullHookAction;\r\n\r\n                // register listener for the pull-to-refresh widget\r\n                $('#view-cart-page-pull-hook', $thisPage).on(\"changestate\", function(event){\r\n\r\n                    // check the state of the pull-to-refresh widget\r\n                    switch (event.originalEvent.state){\r\n                        case 'initial':\r\n                            // update the displayed content\r\n                            $('#view-cart-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-down\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'preaction':\r\n                            // update the displayed content\r\n                            $('#view-cart-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-icon icon=\"md-long-arrow-up\" size=\"24px\" style=\"color: #363E7C\"></ons-icon>');\r\n                            break;\r\n\r\n                        case 'action':\r\n                            // update the displayed content\r\n                            $('#view-cart-page-pull-hook-fab', event.originalEvent.pullHook).\r\n                            html('<ons-progress-circular indeterminate modifier=\"pull-hook\"></ons-progress-circular>');\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                try{\r\n                    // create the \"Checkout\" button\r\n                    new ej.splitbuttons.ProgressButton({\r\n                        cssClass: 'e-hide-spinner',\r\n                        duration: 10 * 60 * 60 * 1000 // set spinner/progress duration for 10 hr\r\n                    }).appendTo('#view-cart-checkout');\r\n\r\n                }\r\n                catch(err){\r\n\r\n                    console.log(\"VIEW-CART PAGE\", err);\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'error-ej2-toast';\r\n                    toast.content = `Sorry, an error occurred. Pull down to refresh`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // update cart count\r\n            $('#view-cart-page .cart-count').html(utopiasoftware[utopiasoftware_app_namespace].model.cartCount);\r\n\r\n            window.SoftInputMode.set('adjustResize');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the pull-hook on the page is active\r\n         *\r\n         * @param doneCallBack\r\n         * @returns {Promise<void>}\r\n         */\r\n        async pagePullHookAction(doneCallBack = function(){}){\r\n            // disable pull-to-refresh widget till loading is done\r\n            $('#view-cart-page #view-cart-page-pull-hook').attr(\"disabled\", true);\r\n\r\n            // hide all previously displayed ej2 toast\r\n            $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n\r\n            // disable the \"Checkout\" button\r\n            $('#view-cart-page #view-cart-checkout').attr(\"disabled\", true);\r\n            // remove the spinner from the 'Add To Cart'\r\n            $('#view-cart-page #view-cart-checkout').get(0).ej2_instances[0].cssClass = 'e-hide-spinner';\r\n            $('#view-cart-page #view-cart-checkout').get(0).ej2_instances[0].dataBind();\r\n            $('#view-cart-page #view-cart-checkout').get(0).ej2_instances[0].stop();\r\n\r\n            try{\r\n                // display the loaded product details\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.displayUserCart();\r\n            }\r\n            catch(err){ // an error occurred\r\n\r\n                // display toast to show that error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = \"Sorry, an error occurred. Refresh to try again\";\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally{\r\n                // enable pull-to-refresh widget till loading is done\r\n                $('#view-cart-page #view-cart-page-pull-hook').removeAttr(\"disabled\");\r\n                // enable the \"Checkout\" button\r\n                $('#view-cart-page #view-cart-checkout').removeAttr(\"disabled\");\r\n                // hide the preloader\r\n                $('#view-cart-page .page-preloader').css(\"display\", \"none\");\r\n                // signal that loading is done\r\n                doneCallBack();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to display the user cart on the View Cart page.\r\n         * @param localCart {Array}\r\n         *\r\n         * @returns Promise\r\n         */\r\n        async displayUserCart(localCart){\r\n            var displayContent = \"\"; // holds the cart content to be displayed\r\n            try{\r\n\r\n                try{\r\n                    // get the localCart from the parameter passed OR from the the cached loCart from app database\r\n                    localCart = localCart || (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"user-cart\",\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).cart;\r\n                }\r\n                catch(err){\r\n                    // if error occurred during local cart retrieval\r\n                    localCart = []; // set localCart to empty array\r\n                }\r\n\r\n                if(localCart.length === 0){ // localCart is empty\r\n                    // display message to inform user that cart is empty\r\n                    // hide all previously displayed ej2 toast\r\n                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                    // display toast to show that an error\r\n                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                    toast.cssClass = 'default-ej2-toast';\r\n                    toast.timeOut = 3000;\r\n                    toast.content = `Your cart is empty. Go order some products!`;\r\n                    toast.dataBind();\r\n                    toast.show();\r\n\r\n                    return; // exit method\r\n                }\r\n\r\n                // destroy all the \"Edit\" buttons on the View Cart page\r\n                $(\"#view-cart-page .view-cart-edit-button\").each(function(index, element){\r\n                    // destroy the \"Edit\" button\r\n                    element.ej2_instances[0].destroy();\r\n                });\r\n\r\n                // create all the \"Remove\" buttons required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-remove-button\").each(function(index, element){\r\n                    // destroy the \"Remove\" button\r\n                    element.ej2_instances[0].destroy();\r\n                });\r\n\r\n                // create all the \"Quantity\" input required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-quantity-input\").each(function(index, element){\r\n                    // destroy the \"Quantity\" input\r\n                    element.ej2_instances[0].destroy();\r\n                });\r\n\r\n                // display the contents of the cart using a for-loop\r\n                for(let index = 0; index < localCart.length; index++){\r\n                    displayContent +=\r\n                        `<div class=\"col-xs-12\" style=\"border-bottom: 1px lightgray solid\">\r\n                        <div class=\"e-card e-card-horizontal\">`;\r\n\r\n                    if(localCart[index].anon_cart_key){ // this item is a customised product\r\n                        displayContent +=\r\n                            `<div class=\"e-card-image\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 30%;\r\n                            min-height: 100%; \r\n                            background-image: url('${localCart[index].cartData.cart_item_data.fpd_data.fpd_product_thumbnail}');\">\r\n                            </div>\r\n                            <div class=\"e-card-stacked\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 70%\">\r\n                            <div class=\"e-card-header\" style=\"padding: 0\">\r\n                            <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                ${localCart[index].product_name}\r\n                            </div>\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 11px; text-align: center; text-transform: capitalize\">\r\n                                &#x20a6;${kendo.toString(localCart[index].cartData.quantity * kendo.parseFloat(localCart[index].cartData.cart_item_data.fpd_data.fpd_product_price), \"n2\")}\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"e-card-content row\" style=\"padding: 0;\">\r\n                            <div class=\"col-xs-3\">\r\n                                <button type=\"button\" class=\"view-cart-edit-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-4\">\r\n                                <button type=\"button\" class=\"view-cart-remove-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-5\">\r\n                                <input class=\"view-cart-quantity-input\" type=\"number\" style=\"padding-top: 2px;\" \r\n                                value=\"${localCart[index].cartData.quantity}\" \r\n                                data-utopiasoftware-product-uid=\"${localCart[index].uid}\">\r\n                            </div>\r\n                            </div>\r\n                            </div>`;\r\n                    }\r\n                    else if(localCart[index].productVariation){ // this product was NOT saved with customisation, but has variations\r\n                        displayContent +=\r\n                            `<div class=\"e-card-image\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 30%;\r\n                            min-height: 100%; \r\n                            background-image: \r\n                            url('${localCart[index].productVariation.image && localCart[index].productVariation.image !== \"\" ?\r\n                                localCart[index].productVariation.image.src : localCart[index].product.images[0].src}');\">\r\n                            </div>\r\n                            <div class=\"e-card-stacked\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 70%\">\r\n                            <div class=\"e-card-header\" style=\"padding: 0\">\r\n                            <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                ${localCart[index].product.name}\r\n                            </div>\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 11px; text-align: center; text-transform: capitalize\">\r\n                                &#x20a6;${kendo.toString(localCart[index].cartData.quantity * kendo.parseFloat((localCart[index].productVariation.price && localCart[index].productVariation.price !== \"\" ?\r\n                                localCart[index].productVariation.price : localCart[index].product.price)), \"n2\")}\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"e-card-content row\" style=\"padding: 0;\">\r\n                            <div class=\"col-xs-3\">\r\n                            </div>\r\n                            <div class=\"col-xs-4\">\r\n                                <button type=\"button\" class=\"view-cart-remove-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-5\">\r\n                                <input class=\"view-cart-quantity-input\" type=\"number\" style=\"padding-top: 2px;\" \r\n                                value=\"${localCart[index].cartData.quantity}\" \r\n                                data-utopiasoftware-product-uid=\"${localCart[index].uid}\">\r\n                            </div>\r\n                            </div>\r\n                            </div>`;\r\n                    }\r\n                    else if(! localCart[index].productVariation) { // this product was NOT ssaved with customisation, and has NO variations\r\n                        displayContent +=\r\n                            `<div class=\"e-card-image\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 30%;\r\n                            min-height: 100%; \r\n                            background-image: url('${localCart[index].product.images[0].src}');\">\r\n                            </div>\r\n                            <div class=\"e-card-stacked\" style=\"-webkit-flex-basis: auto; flex-basis: auto; width: 70%\">\r\n                            <div class=\"e-card-header\" style=\"padding: 0\">\r\n                            <div class=\"e-card-header-caption\"  style=\"padding-left: 3px; padding-right: 5px\">\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 14px; text-align: center; text-transform: capitalize\">\r\n                                ${localCart[index].product.name}\r\n                            </div>\r\n                            <div class=\"e-card-sub-title\" style=\"font-size: 11px; text-align: center; text-transform: capitalize\">\r\n                                &#x20a6;${kendo.toString(localCart[index].cartData.quantity * kendo.parseFloat(localCart[index].product.price), \"n2\")}\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"e-card-content row\" style=\"padding: 0;\">\r\n                            <div class=\"col-xs-3\">                          \r\n                            </div>\r\n                            <div class=\"col-xs-4\">\r\n                                <button type=\"button\" class=\"view-cart-remove-button\"\r\n                                        style=\"background-color: #ffffff; color: #3f51b5; height: 10px;\"></button>\r\n                            </div>\r\n                            <div class=\"col-xs-5\">\r\n                                <input class=\"view-cart-quantity-input\" type=\"number\" style=\"padding-top: 2px;\" \r\n                                value=\"${localCart[index].cartData.quantity}\" \r\n                                data-utopiasoftware-product-uid=\"${localCart[index].uid}\">\r\n                            </div>\r\n                            </div>\r\n                            </div>`;\r\n                    }\r\n\r\n                    displayContent +=\r\n                        `</div>\r\n                         </div>`;\r\n                }\r\n\r\n                // attach the displayContent to the page\r\n                $('#view-cart-page #view-cart-contents-container').html(displayContent);\r\n\r\n                // create all the \"Edit\" buttons required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-edit-button\").each(function(index, element){\r\n                    // create the \"Edit\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-round',\r\n                        iconCss: \"zmdi zmdi-edit utopiasoftware-icon-zoom-one-point-two\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo(element);\r\n                });\r\n\r\n                // create all the \"Remove\" buttons required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-remove-button\").each(function(index, element){\r\n                    // create the \"Remove\" button\r\n                    new ej.buttons.Button({\r\n                        cssClass: 'e-flat e-round',\r\n                        iconCss: \"zmdi zmdi-delete utopiasoftware-icon-zoom-one-point-two\",\r\n                        //iconPosition: \"Left\"\r\n                    }).appendTo(element);\r\n                });\r\n\r\n                // create all the \"Quantity\" input required for the View Cart page\r\n                $(\"#view-cart-page .view-cart-quantity-input\").each(function(index, element){\r\n                    new ej.inputs.NumericTextBox({\r\n                        value: element.value,\r\n                        cssClass: 'view-cart-quantity-input-class',\r\n                        currency: null,\r\n                        decimals: 0,\r\n                        floatLabelType: 'Auto',\r\n                        format: 'n',\r\n                        showSpinButton: true,\r\n                        min: 1,\r\n                        max: 10,\r\n                        placeholder: ' ',\r\n                        step: 1,\r\n                        strictMode: true,\r\n                        width: '60%',\r\n                        // sets value to the NumericTextBox\r\n                        value: 1,\r\n                        change: function(){ // track changes in the quantity numeric input for every product\r\n                            let currentQuantityValue = this.value; // holds the current quantity value from the numeric input\r\n                            let product_uid = $(element).attr('data-utopiasoftware-product-uid');\r\n                            // dissplay page preloader\r\n                            $('#view-cart-page .page-preloader').css(\"display\", \"block\");\r\n\r\n                            // handle task in a separate event block\r\n                            window.setTimeout(async function(){\r\n                                try {\r\n\r\n                                    // find the product to be updated within the app localCart\r\n                                    let selectedProduct = localCart.find(function(productElement){\r\n                                        return productElement.uid === product_uid;\r\n                                    });\r\n                                    // update the quantity for the selected product\r\n                                    selectedProduct.cartData.quantity = currentQuantityValue;\r\n                                    // save the updated localCart object to the app cache/persistent storage\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                                        {_id: \"user-cart\", docType: \"USER_CART\", cart: localCart},\r\n                                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                                    // display the updated user cart\r\n                                    await utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                    viewCartPageViewModel.displayUserCart(localCart);\r\n\r\n                                    // inform the user that the product has been added to cart\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast to show that an error\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'success-ej2-toast';\r\n                                    toast.timeOut = 2000;\r\n                                    toast.content = `Product quantity updated`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                                catch(err){\r\n                                    console.log(\"UPDATE PRODUCT QUANTITY\", err);\r\n                                    // hide all previously displayed ej2 toast\r\n                                    $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    $('.timed-page-toast').get(0).ej2_instances[0].hide('All');\r\n                                    // display toast to show that an error occurred\r\n                                    let toast = $('.timed-page-toast').get(0).ej2_instances[0];\r\n                                    toast.cssClass = 'error-ej2-toast';\r\n                                    toast.timeOut = 3500;\r\n                                    toast.content = `Product quantity not updated. Try again`;\r\n                                    toast.dataBind();\r\n                                    toast.show();\r\n                                }\r\n                                finally{\r\n                                    // hide page preloader\r\n                                    $('#view-cart-page .page-preloader').css(\"display\", \"none\");\r\n                                }\r\n\r\n                            }, 0);\r\n                        }\r\n                    }).appendTo(element);\r\n                });\r\n\r\n\r\n                // update the total price of items displayed\r\n                $('#view-cart-page #view-cart-total-price').html(`&#x20a6;${kendo.toString(\r\n                    utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.viewCartPageViewModel.calculateCartTotalPrice(localCart), \"n2\")}`);\r\n            }\r\n            finally{\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to save a search item i.e. a product to the cached \"Recent Searches\"\r\n         *\r\n         * @param product {Object} the product to include to the \"Recent Searches\" cache\r\n         * @returns {Promise<void>}\r\n         */\r\n        async saveRecentSearchItem(product){\r\n            var recentSearchesResultArray = []; // holds the recent searches array\r\n\r\n            try{\r\n                // get the recent searches collection\r\n                recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n            }\r\n            catch(err){}\r\n\r\n            try{\r\n                // add the received 'product' parameter to the top of the recent searches array\r\n                recentSearchesResultArray.unshift(product);\r\n                // ensure the array is NOT greater than 5 items in length\r\n                recentSearchesResultArray = recentSearchesResultArray.slice(0, 5);\r\n                // save the updated recent searches array  to the cached data collection of \"Recent Searches\"\r\n                await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                    {_id: \"recent-searches\", docType: \"RECENT_SEARCHES\", products: recentSearchesResultArray},\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                // display the updated recent searches to the user\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to remove a search item i.e. a product from the cached \"Recent Searches\"\r\n         *\r\n         * @param productIndex {Integer} holds the index position for the product that was clicked.\r\n         * The index position is gotten from the array of cached recent searches\r\n         *\r\n         * @param clickedElement {Element} the element that was clicked in order to trigger the product removal\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async removeRecentSearchItem(productIndex, clickedElement){\r\n\r\n            // execute the method is a different event queue\r\n            window.setTimeout(async function(){\r\n                var recentSearchesResultArray = []; // holds the recent searches array\r\n\r\n                try{\r\n                    // get the recent searches collection\r\n                    recentSearchesResultArray = (await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.\r\n                    loadData(\"recent-searches\", utopiasoftware[utopiasoftware_app_namespace].model.appDatabase)).products;\r\n                }\r\n                catch(err){}\r\n\r\n                try{\r\n                    // remove the received 'product' parameter index from the recent searches array\r\n                    recentSearchesResultArray.splice(productIndex, 1);\r\n                    // save the updated recent searches array  to the cached data collection of \"Recent Searches\"\r\n                    await utopiasoftware[utopiasoftware_app_namespace].databaseOperations.saveData(\r\n                        {_id: \"recent-searches\", docType: \"RECENT_SEARCHES\", products: recentSearchesResultArray},\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.appDatabase);\r\n                    // hide the list-item belonging to the clicked element from the displayed list\r\n                    let $listItem = $(clickedElement).closest('ons-list-item');\r\n                    await kendo.fx($listItem).expand(\"vertical\").duration(300).reverse();\r\n                    // display the updated recent searches to the user\r\n                    await utopiasoftware[utopiasoftware_app_namespace].controller.searchPageViewModel.displayRecentSearches();\r\n                }\r\n                catch(err){\r\n\r\n                }\r\n            }, 0)\r\n        },\r\n\r\n        /**\r\n         * method is a utility function used to view/load and display the user's cart\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async viewCartPage(){\r\n\r\n            try{\r\n                // load the View Cart page\r\n                await $('#app-main-navigator').get(0).bringPageTop(\"view-cart-page.html\");\r\n                // display the user cart\r\n                await utopiasoftware[utopiasoftware_app_namespace].controller.viewCartPageViewModel.displayUserCart();\r\n                // enable the checkout button\r\n                $('#view-cart-page #view-cart-checkout').removeAttr(\"disabled\");\r\n            }\r\n            catch(err){\r\n                console.log(\"VIEW-CART PAGE\", err);\r\n                // hide all previously displayed ej2 toast\r\n                $('.page-toast').get(0).ej2_instances[0].hide('All');\r\n                // display toast to show that an error\r\n                let toast = $('.page-toast').get(0).ej2_instances[0];\r\n                toast.cssClass = 'error-ej2-toast';\r\n                toast.content = `Sorry, an error occurred. Pull down to refresh`;\r\n                toast.dataBind();\r\n                toast.show();\r\n            }\r\n            finally {\r\n                // hide the preloader\r\n                $('#view-cart-page .page-preloader').css(\"display\", \"none\");\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is a utility function used to calculate the approximate total process of all items in\r\n         * a user's local cart\r\n         *\r\n         * @param localCart {Array} containing an array of items in the user's local cart\r\n         *\r\n         * @returns {number} the total price for all the items contained in cart\r\n         */\r\n        calculateCartTotalPrice(localCart = []){\r\n\r\n            if(localCart.length === 0){ // this is an empty cart, so just return 0\r\n                return 0.00;\r\n            }\r\n\r\n            // run an array reduce function which gets the sub-total price of each item in the cart by multiplying their\r\n            // quantity by the unit price. Then adding all sub-totals to get the total price\r\n\r\n            return localCart.reduce(function(accumulator, currentElement, currentIndex, thisArray){\r\n\r\n                console.log(\"ACCUMULATOR\", accumulator);\r\n                console.log(\"CURRENT INDEX\", currentIndex);\r\n                // check the types of products in the cart\r\n                if(currentElement.anon_cart_key){ // this item is a customised product\r\n                    // multiply the product unit price with the specified quantity and add the to the current cumulative total\r\n                    return accumulator + (currentElement.cartData.quantity *\r\n                        kendo.parseFloat(currentElement.cartData.cart_item_data.fpd_data.fpd_product_price));\r\n                }\r\n                else if(currentElement.productVariation){ // this product was NOT saved with customisation, but has variations\r\n                    // multiply the product unit price with the specified quantity and add the to the current cumulative total\r\n                    return accumulator + (currentElement.cartData.quantity *\r\n                    kendo.parseFloat((currentElement.productVariation.price && currentElement.productVariation.price !== \"\" ?\r\n                        currentElement.productVariation.price : currentElement.product.price)));\r\n                }\r\n                else if(! currentElement.productVariation) { // this product was NOT saved with customisation, and has NO variations\r\n                    // multiply the product unit price with the specified quantity and add the to the current cumulative total\r\n                    return accumulator + (currentElement.cartData.quantity * kendo.parseFloat(currentElement.product.price));\r\n                }\r\n\r\n            }, 0);\r\n        }\r\n    }\r\n};"]}