{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 18/11/2018.\r\n */\r\n\r\n/**\r\n* file defines all View-Models, Controllers and Event Listeners used by the app\r\n*\r\n* The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n* The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n* also used interchangeably\r\n*/\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * method contains the startup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            if(true){ // there is a previous logged in user\r\n                // load the app main page\r\n                $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n\r\n            }\r\n            else{ // there is no previously logged in user\r\n                // load the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // create the pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase = new PouchDB('PrintServiceEcommerce.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // create the encrypted pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase =\r\n                    new PouchDB('PrintServiceEcommerceEncrypted.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // generate a password for encrypting the app database (if it does NOT already exist)\r\n                let secureKey = null;\r\n                try {\r\n                    // get secure key, if it exists\r\n                    secureKey = await new Promise(function(resolve, reject){\r\n                        NativeStorage.getItem(\"utopiasoftware-oak-print-service-secure-key\",resolve, reject);\r\n                    });\r\n                }\r\n                catch(err){ // secure key does not exist\r\n                    // create the secure key\r\n                    secureKey = await new Promise(function(resolve, reject){\r\n                        NativeStorage.setItem(\"utopiasoftware-oak-print-service-secure-key\",\r\n                            {password: Random.uuid4(utopiasoftware[utopiasoftware_app_namespace].randomisationEngine)},\r\n                            resolve, reject);\r\n                    });\r\n                }\r\n                // enable the db encryption using the generated password\r\n                await new Promise(function(resolve, reject){\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.encryptedAppDatabase.\r\n                    crypto(secureKey.password, {\r\n                        ignore: ['_attachments', '_deleted'],\r\n                        cb: function(err, key){\r\n                            if(err){ // there is an error\r\n                                reject(err); // reject Promise\r\n                            }\r\n                            else{ // no error\r\n                                resolve(key); // resolve Promise\r\n                            }\r\n                        }});\r\n                });\r\n\r\n            }\r\n            catch(err){\r\n                console.log(\"APP LOADING ERROR\", err);\r\n            }\r\n            finally{\r\n                // set status bar color\r\n                StatusBar.backgroundColorByHexString(\"#363E7C\");\r\n                navigator.splashscreen.hide(); // hide the splashscreen\r\n                utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // flag that app is fully loaded and ready\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Home page\r\n     */\r\n    homePageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.homePageViewModel.backButtonClicked;\r\n\r\n                try{\r\n                    let newProductsCarousel = new Flickity($('#home-page #home-latest-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        autoPlay: 3000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: true\r\n                    });\r\n                    newProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(newProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(newProductsCarousel._utopiasoftware_scrollTimer);\r\n                            newProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        newProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            newProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    newProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // clear the timer\r\n                            return;\r\n                        }\r\n                        // a cell was clicked, so load the product-details page\r\n                        $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\", {animation: \"lift\"});\r\n                    });\r\n\r\n                    let featuredProductsCarousel = new Flickity($('#home-page #home-featured-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        autoPlay: 4000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: true\r\n                    });\r\n                    featuredProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(featuredProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(featuredProductsCarousel._utopiasoftware_scrollTimer);\r\n                            featuredProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        featuredProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            featuredProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    featuredProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // clear the timer\r\n                            return;\r\n                        }\r\n                        // a cell was clicked, so load the product-details page\r\n                        $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\", {animation: \"lift\"});\r\n                    });\r\n\r\n                    let salesProductsCarousel = new Flickity($('#home-page #home-sales-design-block .row').get(0), {\r\n                        // options\r\n                        wrapAround: true,\r\n                        groupCells: 1,\r\n                        autoPlay: 5000,\r\n                        pauseAutoPlayOnHover: false,\r\n                        dragThreshold: 10,\r\n                        initialIndex: 0,\r\n                        cellAlign: 'left',\r\n                        contain: false,\r\n                        prevNextButtons: false,\r\n                        pageDots: true\r\n                    });\r\n                    salesProductsCarousel.on(\"scroll\", function(){\r\n                        // check if the carousel object has a timer attached\r\n                        if(salesProductsCarousel._utopiasoftware_scrollTimer){ // there is a timer\r\n                            // clear the timer\r\n                            window.clearTimeout(salesProductsCarousel._utopiasoftware_scrollTimer);\r\n                            salesProductsCarousel._utopiasoftware_scrollTimer = null;\r\n                        }\r\n\r\n                        // automatically start the the carousel autoplay\r\n                        salesProductsCarousel._utopiasoftware_scrollTimer = window.setTimeout(function(){\r\n                            salesProductsCarousel.playPlayer(); // start carousel autoplay\r\n                        }, 0);\r\n                    });\r\n                    salesProductsCarousel.on(\"staticClick\", function(event, pointer, cellElement, cellIndex){\r\n                        // check if it was a cell that was clicked\r\n                        if(! cellElement){ // it was not a slider cell that was clicked\r\n                            // clear the timer\r\n                            return;\r\n                        }\r\n                        // a cell was clicked, so load the product-details page\r\n                        $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\", {animation: \"lift\"});\r\n                    });\r\n                }\r\n                catch(err){}\r\n                finally {\r\n                    $('#loader-modal').get(0).hide(); // show loader\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustPan');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n\r\n            ons.notification.confirm('Do you want to close the app?',\r\n                {title: '<img src=\"css/app-images/oak-design-logo.png\" style=\"height: 1.5em; width: auto; margin-right: 0.5em\">Exit App',\r\n                buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog utopiasoftware-oak-alert-dialog'}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Account page\r\n     */\r\n    accountPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                try{\r\n                    let accordion = new ej.navigations.Accordion({\r\n                        expandMode: 'Single'\r\n                    });\r\n                    accordion.appendTo('#account-personal-accordion');\r\n                    accordion.expandItem(true, 0);\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustPan');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Login page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the login page\r\n         */\r\n        loginFormValidator: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.backButtonClicked;\r\n\r\n                // listen for when the login-carousel has changed/slide used to change screen from login to signup etc\r\n                $thisPage.on(\"postchange\", \"#login-carousel\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.changeScreenCarouselPostChange);\r\n\r\n                // listen for when the login-carousel has changed/slide used to hide the tooltips for the previous displayed screen\r\n                $thisPage.on(\"postchange\", \"#login-carousel\",\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.hideTooltipsCarouselPostChange);\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator =\r\n                    $('#login-page #login-form').parsley();\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    let tooltip = $('#login-page #login-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.content = fieldInstance.getErrorsMessages()[0];\r\n                    tooltip.dataBind();\r\n                    tooltip.open(fieldInstance.$element.get(0));\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('field:success', function(fieldInstance) {\r\n                    // hide tooltip from element\r\n                    let tooltip = $('#login-page #login-form').get(0).\r\n                        ej2_instances[fieldInstance.$element.get(0)._utopiasoftware_validator_index];\r\n                    tooltip.close();\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidated);\r\n\r\n                // listen for scroll event on the page to adjust the tooltips when page scrolls\r\n                $('#login-page ons-carousel-item',).on(\"scroll\", function(){\r\n\r\n                    // place function execution in the event queue to be executed ASAP\r\n                    window.setTimeout(function(){\r\n                        console.log(\"CAROUSEL SCROLL\");\r\n                            switch ($('#login-page #login-carousel').get(0).getActiveIndex()) { // get the active carousel item\r\n                                case 0: // first carousel item is active, so adjust the input elements on the login form\r\n                                    $(\"#login-page #login-form ons-input\").each(function(index, element){\r\n                                        document.getElementById('login-form').ej2_instances[index].refresh(element);\r\n                                    });\r\n                                    break;\r\n\r\n                                case 1: // second carousel item is active, so adjust the input elements on the login form\r\n                                    $(\"#login-page #signup-form ons-input\").each(function(index, element){\r\n                                        document.getElementById('signup-form').ej2_instances[index].refresh(element);\r\n                                    });\r\n                                    break;\r\n\r\n                                case 2:\r\n\r\n                                    break;\r\n                            }\r\n                        }, 0);\r\n                });\r\n\r\n                try{\r\n                    // create the tooltip objects for the signin form\r\n                    $('#login-form ons-input', $thisPage).each(function(index, element){\r\n                        element._utopiasoftware_validator_index = index;\r\n                        // create the tool tips for every element being validated, but attach it to the html form object\r\n                        new ej.popups.Tooltip({\r\n                            cssClass: 'utopiasoftware-ej2-validation-tooltip',\r\n                            position: 'TopCenter',\r\n                            opensOn: 'Custom'\r\n                        }).appendTo($('#login-page #login-form').get(0));\r\n                    });\r\n\r\n                    // create the button for showing password visibility on the signup page\r\n                    new ej.buttons.Button({\r\n                        isToggle: true,\r\n                        cssClass: 'e-flat e-small e-round',\r\n                        iconCss: \"zmdi zmdi-eye\",\r\n                        iconPosition: \"Left\"\r\n                    }).appendTo($('#signup-password-view-button', $thisPage).get(0));\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustPan');\r\n\r\n            // listen for when the device keyboard is shown\r\n            window.addEventListener('keyboardDidShow',\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.keyboardShownAdjustView);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n\r\n            // remove listener for when the device keyboard is shown\r\n            window.removeEventListener('keyboardDidShow',\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.keyboardShownAdjustView);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Sign In / Sign Up segment buttons are clicked\r\n         *\r\n         * @param itemIndex {Integer} zero-based index representing the carousel item to\r\n         * display ewhen the button is clicked\r\n         */\r\n        segmentButtonClicked(itemIndex){\r\n            // move to the slide item specify by the provided parameter\r\n            $('#login-page #login-carousel').get(0).setActiveIndex(itemIndex);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the Password Visibility button is clicked\r\n         *\r\n         * @param buttonElement {HTMLElement} button element being clicked\r\n         *\r\n         * @param inputId {String} the id for the input whose content visibility is being changed\r\n         */\r\n        passwordVisibilityButtonClicked(buttonElement, inputId){\r\n\r\n            // check the state of the button is it 'active' or not\r\n            if(! $(buttonElement).hasClass('e-active')){ // button is not active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"text\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye-off';\r\n                ej2Button.dataBind();\r\n            }\r\n            else{ // button is active\r\n                // change the type for the input field\r\n                $(document.getElementById(inputId)).attr(\"type\", \"password\");\r\n                // change the icon on the button to indicate the change in visibility\r\n                let ej2Button = buttonElement.ej2_instances[0];\r\n                ej2Button.iconCss = 'zmdi zmdi-eye';\r\n                ej2Button.dataBind();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides for\r\n         * displaying the various screens i.e. login or signup etc\r\n         *\r\n         * @param event\r\n         */\r\n        changeScreenCarouselPostChange(event){\r\n\r\n            // use the switch case to determine what carousel is being shown\r\n            switch(event.originalEvent.activeIndex){ // get the index of the active carousel item\r\n                case 0:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.second .login-segment\").get(0).setActiveButton(1);\r\n                    $(\"#login-page ons-carousel-item.third .login-segment\").get(0).setActiveButton(-1);\r\n                    // scroll to the top of the active carousel item\r\n                    $('#login-page ons-carousel-item.first').scrollTop(0);\r\n\r\n                    break;\r\n\r\n                case 1:\r\n                    console.log(\"CHECK 1\");\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.first .login-segment\").get(0).setActiveButton(0);\r\n                    console.log(\"CHECK 2\");\r\n                    $(\"#login-page ons-carousel-item.third .login-segment\").get(0).setActiveButton(-1);\r\n                    console.log(\"CHECK 3\");\r\n                    // scroll to the top of the active carousel item\r\n                    $('#login-page ons-carousel-item.second').scrollTop(0);\r\n                    console.log(\"CHECK 4\");\r\n                    break;\r\n\r\n                case 2:\r\n                    // reset the the segment button contained in the other carousel items to their initial state\r\n                    $(\"#login-page ons-carousel-item.first .login-segment\").get(0).setActiveButton(0);\r\n                    $(\"#login-page ons-carousel-item.second .login-segment\").get(0).setActiveButton(1);\r\n                    // scroll to the top of the active carousel item\r\n                    $('#login-page ons-carousel-item.third').scrollTop(0);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides for\r\n         * hiding the tooltips on the previously displayed slide\r\n         *\r\n         * @param event\r\n         */\r\n        hideTooltipsCarouselPostChange(event){\r\n\r\n            // use the switch case to determine what carousel item was PREVIOUSLY shown\r\n            switch(event.originalEvent.lastActiveIndex){ // get the index of the LAST active carousel item\r\n                case 0:\r\n\r\n                    // hide the tooltips on the login form\r\n                    $('#login-page #login-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                        // hide the tooltip\r\n                        tooltipArrayElem.close();\r\n                    });\r\n                    break;\r\n\r\n                case 1:\r\n                    // hide the tooltips on the signup form\r\n                    $('#login-page #signup-form').get(0).ej2_instances.forEach(function(tooltipArrayElem){\r\n                        // hide the tooltip\r\n                        tooltipArrayElem.close();\r\n                    });\r\n                    break;\r\n\r\n                case 2:\r\n\r\n                    break;\r\n            }\r\n        },\r\n        /**\r\n         * method is triggered when the keyboard is shown.\r\n         * It is used to adjust the display height\r\n         *\r\n         * @param event\r\n         */\r\n        keyboardShownAdjustView(event){\r\n            // get the height of the keyboard and add 6000px to it\r\n            let adjustedKeyboardHeight = Math.ceil(event.keyboardHeight) + 6000;\r\n\r\n            switch ($('#login-page #login-carousel').get(0).getActiveIndex()) { // get the active carousel item\r\n                case 0:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.first\").css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.first\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top));\r\n                    break;\r\n\r\n                case 1:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.second\").css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.second\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top));\r\n                    break;\r\n\r\n                case 2:\r\n                    // add padding to the bottom, to allow elements to scroll into view\r\n                    $(\"#login-page ons-carousel-item.third\").css({\"padding-bottom\": adjustedKeyboardHeight + \"px\"});\r\n                    // scroll to the currently focused input element\r\n                    $(\"#login-page ons-carousel-item.third\").\r\n                    scrollTop(Math.floor($(document.activeElement).closest(\"ons-input\").position().top));\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Sign In\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signinButtonClicked() {\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.loginFormValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the login form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loginFormValidated(){\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Products page\r\n     */\r\n    productsPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for when the \"product-layout\" segment is clicked\r\n                $('#products-page #products-layout-segment').on(\"postchange\", function(postChangeEvent){\r\n                    \r\n                    // check which tab was clicked and act accordingly\r\n                    switch (postChangeEvent.originalEvent.index) {\r\n                        case 0:\r\n                            // user selected to display items in 2-column\r\n                            $('#products-page .col-xs-12').removeClass('col-xs-12').addClass('col-xs-6');\r\n                            break;\r\n\r\n                        case 1:\r\n                            // user selected to display items in 1-column\r\n                            $('#products-page .col-xs-6').removeClass('col-xs-6').addClass('col-xs-12');\r\n                            break;\r\n                    }\r\n\r\n                    // scroll to the top of the page\r\n                    $('#products-page .page__content').scrollTop(0);\r\n                });\r\n\r\n\r\n                // listen for when a product card is clicked\r\n                $thisPage.on(\"click\", \".e-card > *:not(.e-card-actions)\", function(){\r\n                    // load the product-details page\r\n                    $('#app-main-navigator').get(0).pushPage(\"product-details-page.html\", {animation: \"lift\"});\r\n                });\r\n\r\n                try{\r\n\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n\r\n            window.SoftInputMode.set('adjustPan');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Product Details page\r\n     */\r\n    productDetailsPageViewModel: {\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady() {\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if (!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false) {\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.productDetailsPageViewModel.backButtonClicked;\r\n\r\n                try{\r\n                    let addToCartButton = new ej.buttons.Button({\r\n                        iconCss: \"zmdi zmdi-shopping-cart-add utopiasoftware-icon-zoom-one-point-two\",\r\n                        iconPosition: \"Left\"\r\n                    });\r\n                    addToCartButton.appendTo('#product-details-add-to-cart');\r\n\r\n                    let customiseProductButton = new ej.buttons.Button({\r\n                        iconCss: \"zmdi zmdi-brush utopiasoftware-icon-zoom-one-point-two\",\r\n                        iconPosition: \"Left\"\r\n                    });\r\n                    customiseProductButton.appendTo('#product-details-customise-product');\r\n\r\n                    let wishListButton = new ej.buttons.Button({\r\n                        cssClass: 'e-outline e-small',\r\n                        iconCss: \"zmdi zmdi-favorite-outline\",\r\n                        iconPosition: \"Left\"\r\n                    });\r\n                    wishListButton.appendTo('#product-details-wish-list');\r\n\r\n                    let compareButton = new ej.buttons.Button({\r\n                        cssClass: 'e-outline e-small',\r\n                        iconCss: \"zmdi zmdi-utopiasoftware-icon-scale-balance\",\r\n                        iconPosition: \"Left\"\r\n                    });\r\n                    compareButton.appendTo('#product-details-compare');\r\n\r\n                    let reviewButton = new ej.buttons.Button({\r\n                        cssClass: 'e-outline e-small',\r\n                        iconCss: \"zmdi zmdi-star-outline\",\r\n                        iconPosition: \"Left\"\r\n                    });\r\n                    reviewButton.appendTo('#product-details-review');\r\n\r\n                    let shareButton = new ej.buttons.Button({\r\n                        cssClass: 'e-outline e-small',\r\n                        iconCss: \"zmdi zmdi-share\",\r\n                        iconPosition: \"Left\"\r\n                    });\r\n                    shareButton.appendTo('#product-details-share');\r\n                }\r\n                catch(err){}\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            window.SoftInputMode.set('adjustPan');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: async function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // get back to the previous page on the app-main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        }\r\n    }\r\n};"]}